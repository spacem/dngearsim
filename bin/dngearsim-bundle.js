webpackJsonp([0],Array(31).concat([
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').controller('AboutCtrl', ['$window', function ($window) {\n    'use strict';\n\n    document.body.className = 'default-back';\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\n  }]);\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/about/about.js\n// module id = 31\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/about/about.js?");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nbulidController.$inject = [\"$timeout\", \"statHelper\", \"itemCategory\", \"saveHelper\"];\nangular.module('dnsim').directive('dngearsimBuild', function () {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange',\n      server: '=server'\n    },\n    controller: bulidController,\n    controllerAs: 'buildCtrl',\n    template: __webpack_require__(109)\n  };\n});\n\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\n  'use strict';\n\n  var vm = this;\n\n  vm.stats = statHelper.getBuildStats(vm.build);\n\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\n  vm.category = itemCategory.byName(selectedCategory);\n  if (!vm.category || vm.category.hideInBuild) {\n    selectedCategory = 'titles';\n    vm.category = itemCategory.byName('titles');\n  }\n\n  vm.getCategoryItems = function () {\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\n    if (vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    } else {\n      return [];\n    }\n  };\n\n  vm.changeCategory = function () {\n    vm.xsView = null;\n    vm.moveItem = null;\n    vm.categoryChanging = true;\n    $timeout(function () {\n      vm.categoryChanging = false;\n    }, 0);\n  };\n\n  vm.getCategories = function () {\n    return itemCategory.categories;\n  };\n\n  vm.setSelectedCategory = function (value) {\n    vm.category = itemCategory.byName(value);\n    localStorage.setItem('selectedItemCategory', value);\n  };\n\n  vm.getSaveDate = function (group) {\n    if (vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  };\n\n  vm.getSaveTime = function (group) {\n    if (vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  };\n\n  vm.allowMoreItems = function () {\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\n  };\n\n  vm.getItemCount = function () {\n    var itemCountText = '';\n    var allItems = vm.build.items;\n\n    if (vm.category.name == 'offensive gems') {\n      var numOffensiveSlots = 0;\n      var numOffensiveGems = 0;\n      angular.forEach(allItems, function (item, index) {\n        if (item.typeName == vm.category.name) {\n          numOffensiveGems++;\n        } else if (item.offensiveGemSlots) {\n          numOffensiveSlots += item.offensiveGemSlots;\n        }\n      });\n\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\n    } else if (vm.category.name == 'increasing gems') {\n\n      var totalIncreasingGems = 0;\n      var numIncreasingSlots = 0;\n      var numIncreasingGems = {};\n      angular.forEach(allItems, function (item, index) {\n        if (item.typeName == vm.category.name) {\n          var gemType = item.sparkTypeId;\n          if (!gemType) {\n            gemType = 0;\n          }\n\n          if (!(gemType in numIncreasingGems)) {\n            numIncreasingGems[gemType] = 0;\n          }\n          numIncreasingGems[gemType]++;\n          totalIncreasingGems++;\n        } else if (item.increasingGemSlots) {\n          numIncreasingSlots += item.increasingGemSlots;\n        }\n      });\n\n      itemCountText = '';\n      angular.forEach(numIncreasingGems, function (number, gemType) {\n        if (itemCountText.length > 0) {\n          itemCountText += '+';\n        }\n        itemCountText += number;\n      });\n\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\n    } else {\n      var numItems = 0;\n      angular.forEach(allItems, function (item, index) {\n        if (item && item.typeName == vm.category.name) {\n          numItems++;\n        }\n      });\n\n      itemCountText = numItems;\n      var cat = itemCategory.byName(vm.category.name);\n      if (cat && 'numItemText' in cat) {\n        itemCountText += ' / ' + cat.numItemText;\n      }\n    }\n\n    return itemCountText;\n  };\n\n  vm.newCustom = function () {\n    var newCustom = { id: 0, typeName: 'custom', name: 'new custom item', stats: [] };\n    vm.build.items = vm.build.items.concat(newCustom);\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  };\n\n  vm.handleChange = function () {\n    vm.stats = statHelper.getBuildStats(vm.build);\n    vm.onChange();\n  };\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build.js\n// module id = 32\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build.js?");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('buildActionsCtrl', ['$location', 'saveHelper', 'exportLinkHelper', function ($location, saveHelper, exportLinkHelper) {\n  'use strict';\n\n  var vm = this;\n\n  this.deleteGroup = function () {\n    $location.path('/delete-build');\n    $location.search('name', vm.buildName);\n  };\n\n  this.editGroup = function () {\n    $location.path('/edit-build');\n    $location.search('buildName', vm.buildName);\n  };\n\n  this.copyGroup = function () {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n\n    saveHelper.saveBuild(newGroupName, newGroupName, vm.build);\n\n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  };\n\n  this.reloaded = false;\n  this.reloadGroup = function () {\n    $location.path('/reload-build');\n    $location.search('name', vm.buildName);\n  };\n\n  function progress() {}\n\n  this.setShortUrl = function () {\n    if (vm.build) {\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\n    }\n  };\n\n  this.setShortUrl();\n}]).directive('dngearsimBuildActions', function () {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildActionsCtrl',\n    controllerAs: 'buildActions',\n    template: __webpack_require__(110)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-actions.js\n// module id = 33\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-actions.js?");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('buildExportActionCtrl', ['$timeout', '$location', 'hCodeValues', 'statHelper', 'itemCategory', 'saveHelper', 'exportLinkHelper', 'groupHelper', 'translations', 'dntData', 'dntReset', function ($timeout, $location, hCodeValues, statHelper, itemCategory, saveHelper, exportLinkHelper, groupHelper, translations, dntData, dntReset) {\n  'use strict';\n\n  var vm = this;\n\n  vm.export = exportBuild;\n\n  function exportBuild() {\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\n  }\n}]).directive('dngearsimBuildExportAction', function () {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildExportActionCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(111)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-export-action.js\n// module id = 34\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-export-action.js?");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('BuildImportCtrl', ['$timeout', '$location', 'hCodeValues', 'statHelper', 'itemCategory', 'saveHelper', 'exportLinkHelper', 'groupHelper', 'translations', 'dntData', 'dntReset', function ($timeout, $location, hCodeValues, statHelper, itemCategory, saveHelper, exportLinkHelper, groupHelper, translations, dntData, dntReset) {\n  'use strict';\n\n  var vm = this;\n\n  vm.onFileChange = onFileChange;\n  vm.copyLocally = copyLocally;\n\n  function onFileChange(event) {\n    var files = event.target.files;\n    console.log('importing files', files);\n    if (files && files.length) {\n\n      var fileName = files[0].name;\n      var reader = new FileReader();\n      reader.readAsText(files[0]);\n      reader.onload = function () {\n        vm.build = JSON.parse(reader.result);\n        if (fileName && fileName.length > 5) {\n          vm.buildName = fileName.substr(0, fileName.length - 5);\n          vm.buildName = vm.buildName.replace('dngearsim-', '');\n        } else {\n          vm.buildName = 'imported build';\n        }\n        $timeout();\n      };\n    }\n  }\n\n  function copyLocally() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n\n    saveHelper.saveBuild(newGroupName, newGroupName, vm.build);\n\n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-import.js\n// module id = 35\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-import.js?");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('buildItemCtrl', ['$timeout', 'statHelper', 'saveHelper', 'hCodeValues', function ($timeout, statHelper, saveHelper, hCodeValues) {\n  'use strict';\n\n  var vm = this;\n\n  vm.updateItem = setFullStats;\n  vm.gemSlots = hCodeValues.gemExchanges;\n  vm.getGemSlotName = getGemSlotName;\n\n  function getGemSlotName(item) {\n    if (item.gemSlot) {\n      for (var i = 0; i < vm.gemSlots.length; ++i) {\n        if (vm.gemSlots[i].id == item.gemSlot) {\n          return vm.gemSlots[i].name;\n        }\n      }\n    }\n  }\n\n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    vm.item.fullStats = vm.item.stats;\n\n    if (vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\n    }\n\n    if (vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\n    }\n  }\n}]).directive('dngearsimBuildItem', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      editMode: '=editMode',\n      onChange: '&onChange',\n      cancelEdit: '&cancelEdit'\n    },\n    controller: 'buildItemCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(113)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-item.js\n// module id = 36\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-item.js?");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nbuildItemListController.$inject = [\"hCodeValues\", \"itemCategory\", \"saveHelper\"];\nangular.module('dnsim').directive('dngearsimBuildItemList', function () {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      category: '=category',\n      server: '=server',\n      onChange: '&onChange'\n    },\n    controller: buildItemListController,\n    controllerAs: 'buildCtrl',\n    template: __webpack_require__(114)\n  };\n});\n\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\n\n  var vm = this;\n\n  vm.getCategoryItems = function () {\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\n    if (vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    } else {\n      return [];\n    }\n  };\n\n  var subCats = {};\n  var subCatCatName = '';\n  vm.getSubCategories = function () {\n    if (subCatCatName != vm.category.name) {\n      subCats = {};\n      subCatCatName = vm.category.name;\n      var subCatList = [];\n\n      var items = vm.build.items.sort(function (item1, item2) {\n        return item1.exchangeType - item2.exchangeType;\n      });\n      if (vm.category.name == 'increasing gems') {\n        subCatList = _.filter(items, function (item) {\n          return item.increasingGemSlots > 0;\n        });\n      } else if (vm.category.name == 'offensive gems') {\n        subCatList = _.filter(items, function (item) {\n          return item.offensiveGemSlots > 0;\n        });\n      } else if (vm.category.name == 'imprint') {\n        var costumeCat = itemCategory.byName('costume');\n        subCatList = _.filter(items, function (item) {\n          return itemCategory.isItemForCat(costumeCat, item);\n        });\n      }\n      _.each(subCatList, function (item) {\n        if (!(item.exchangeType in subCats)) {\n          subCats[item.exchangeType] = {\n            names: [],\n            slots: 0,\n            exchangeType: item.exchangeType\n          };\n        }\n\n        subCats[item.exchangeType].names.push(item.name);\n        if (vm.category.name == 'increasing gems') {\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\n        } else if (vm.category.name == 'offensive gems') {\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\n        } else {\n          subCats[item.exchangeType].slots = 1;\n        }\n      });\n      subCats[0] = null;\n    }\n\n    return subCats;\n  };\n\n  vm.getNumTaken = function (subCat) {\n    var retVal = 0;\n    var exchangeId;\n    if (vm.category.name == 'imprint') {\n      exchangeId = subCat.exchangeType;\n    } else {\n      var gemExchange = _.find(hCodeValues.gemExchanges, function (e) {\n        return e.exchange == subCat.exchangeType;\n      });\n\n      exchangeId = gemExchange.id;\n    }\n\n    if (exchangeId) {\n      var items = vm.getCategoryItems();\n      _.each(items, function (item) {\n        if (item.gemSlot == exchangeId) {\n          ++retVal;\n        }\n      });\n    }\n    return retVal;\n  };\n\n  vm.isInSubCat = function (item, subCat) {\n    if (!subCat && !item.gemSlot) {\n      return true;\n    } else {\n      var exchangeId;\n      if (vm.category.name == 'imprint') {\n        exchangeId = item.gemSlot;\n      } else {\n        var gemExchange = _.find(hCodeValues.gemExchanges, function (e) {\n          return e.id == item.gemSlot;\n        });\n        if (gemExchange) {\n          exchangeId = gemExchange.exchange;\n        }\n      }\n\n      if (!subCat && exchangeId) {\n        // check for invalid slot\n        var allSubCatItems = vm.getSubCategories();\n        var foundSubCatItem = _.find(allSubCatItems, function (subCatItem) {\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\n        });\n\n        if (!foundSubCatItem) {\n          return true;\n        }\n      } else if (subCat && exchangeId) {\n        return exchangeId == subCat.exchangeType;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  vm.canMove = function () {\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\n  };\n\n  vm.getGemSlot = function (subCat) {\n    if (vm.category.name == 'imprint') {\n      return subCat.exchangeType;\n    } else if (subCat) {\n      var gemExchange = _.find(hCodeValues.gemExchanges, function (e) {\n        return e.exchange == subCat.exchangeType;\n      });\n\n      if (!gemExchange) {\n        console.log('cannot find exchange for', subCat);\n      }\n      return gemExchange.id;\n    }\n  };\n\n  vm.move = function (moveItem, destination) {\n    moveItem.gemSlot = vm.getGemSlot(destination);\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  };\n\n  vm.allowMoreItems = function () {\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\n  };\n\n  vm.handleChange = function () {\n    subCatCatName = '';\n    vm.onChange();\n  };\n\n  vm.handleItemEdit = function () {\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  };\n\n  vm.cancelEdit = function () {\n    vm.onChange();\n  };\n\n  vm.canEdit = function (item) {\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\n  };\n\n  vm.removeItem = function (item) {\n    subCatCatName = '';\n    item.removeItem = true;\n    var newItemList = [];\n    angular.forEach(vm.build.items, function (gItem, index) {\n      if (gItem && !gItem.removeItem) {\n        newItemList.push(gItem);\n      }\n    });\n\n    vm.build.items = newItemList;\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\n    vm.handleChange();\n  };\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-item-list.js\n// module id = 37\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-item-list.js?");

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('BuildListCtrl', ['$window', '$location', '$routeParams', '$timeout', 'saveHelper', function ($window, $location, $routeParams, $timeout, saveHelper) {\n  'use strict';\n\n  var vm = this;\n  document.body.className = 'saved-back';\n  this.setupBuilds = function () {\n    vm.savedItems = saveHelper.getSavedItems();\n    vm.buildNames = Object.keys(vm.savedItems).sort();\n    vm.builds = [];\n    for (var i = 0; i < vm.buildNames.length; ++i) {\n      vm.builds.push({\n        name: vm.buildNames[i],\n        build: vm.savedItems[vm.buildNames[i]]\n      });\n    }\n  };\n  this.setupBuilds();\n\n  if ('buildName' in $routeParams) {\n    if ($routeParams.buildName in vm.savedItems) {\n      if ($routeParams.buildName != this.currentGroup) {\n        this.currentGroup = $routeParams.buildName;\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\n      }\n    } else {\n      this.currentGroup = null;\n    }\n  } else if (this.currentGroup && this.currentGroup in this.savedItems) {\n    $location.path('/build');\n    $location.search('buildName', this.currentGroup);\n  } else {\n    this.currentGroup = null;\n  }\n\n  if (this.currentGroup) {\n    $window.document.title = 'dngearsim | ' + this.currentGroup;\n  } else {\n    $window.document.title = 'dngearsim | BUILDS';\n  }\n\n  this.anyItems = function () {\n    return Object.keys(this.savedItems).length > 0;\n  };\n\n  this.createGroup = function () {\n    $location.path('/new-build');\n  };\n\n  this.handleChange = function () {\n    vm.setupBuilds();\n    $timeout();\n    // console.log('change');\n  };\n\n  this.toggleGroup = function (buildName) {\n    saveHelper.saveBuildSelection(buildName, this.savedItems);\n    $location.url('/build?buildName=' + buildName);\n  };\n\n  this.publish = function () {\n    $location.url('/publish');\n  };\n\n  this.search = function () {\n    $location.url('/build-search');\n  };\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-list.js\n// module id = 38\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-list.js?");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = \"<div class=row ng-if=::!buildList.currentGroup>\\r\\n  <div class=\\\"col-xs-12 col-sm-8 col-lg-9\\\">\\r\\n  <div class=row>\\r\\n    <div class=col-xs-12>\\r\\n      <button ng-click=buildList.createGroup() class=\\\"btn btn-link btn-block group-header-btn\\\">\\r\\n        <h3 class=text-left><span class=\\\"glyphicon glyphicon-plus-sign\\\" aria-hidden=true></span> {{'create a new build' | translate}}<br/>\\r\\n        <small>{{'builds allow you to group items together and see combined stats' | translate}}</small>\\r\\n        </h3>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=col-xs-12>\\r\\n      <a ng-href=import class=\\\"btn btn-link btn-block group-header-btn\\\">\\r\\n        <h3 class=text-left><span class=\\\"glyphicon glyphicon-import\\\" aria-hidden=true></span> {{'import' | translate}}<br/>\\r\\n        <small>{{'import a build from a json build file' | translate}}</small>\\r\\n        </h3>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=col-xs-12>\\r\\n      <button ng-click=buildList.publish() class=\\\"btn btn-link btn-block group-header-btn\\\">\\r\\n        <h3 class=text-left><span class=\\\"glyphicon glyphicon-log-in\\\" aria-hidden=true></span> {{'publish' | translate}}<br/>\\r\\n        <small>{{'log in and publish your builds online' | translate}}</small>\\r\\n        </h3>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=col-xs-12>\\r\\n      <button ng-click=buildList.search() class=\\\"btn btn-link btn-block group-header-btn\\\">\\r\\n        <h3 class=text-left><span class=\\\"glyphicon glyphicon-search\\\" aria-hidden=true></span> {{'find a build' | translate}}<br/>\\r\\n        <small>{{'search and view builds published online' | translate}}</small>\\r\\n        </h3>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=saved-group class=row ng-if=::buildList.builds ng-repeat=\\\"b in ::buildList.builds track by $index\\\">\\r\\n    \\r\\n    <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-link btn-block group-header-btn\\\" ng-click=buildList.toggleGroup(b.name)>\\r\\n      <dngearsim-build-summary build-name=::b.name build=::b.build>\\r\\n      </dngearsim-build-summary>\\r\\n    </button>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n  </div>\\r\\n  <div class=\\\"hidden-xs col-sm-4 col-lg-3\\\">\\r\\n    <img src=\" + __webpack_require__(220) + \" />\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row ng-if=::buildList.currentGroup>\\r\\n  <dngearsim-build build-name=buildList.currentGroup build=buildList.savedItems[buildList.currentGroup] on-change=buildList.handleChange()>\\r\\n  </dngearsim-build>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-list.html\n// module id = 39\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-list.html?");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nbuildStatsController.$inject = [\"statHelper\", \"dvStatcardHelper\"];\nangular.module('dnsim').directive('dngearsimBuildStats', function () {\n  return {\n    scope: true,\n    bindToController: {\n      stats: '=stats',\n      build: '=build',\n      buildName: '=buildName'\n    },\n    controller: buildStatsController,\n    controllerAs: 'statsCtrl',\n    template: __webpack_require__(115)\n  };\n});\n\nfunction buildStatsController(statHelper, dvStatcardHelper) {\n  var vm = this;\n\n  vm.exportStatCard = function () {\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\n    window.open(url);\n  };\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-stats.js\n// module id = 40\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-stats.js?");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('buildSummaryCtrl', ['$routeParams', '$location', 'hCodeValues', 'statHelper', 'itemCategory', function ($routeParams, $location, hCodeValues, statHelper, itemCategory) {\n  'use strict';\n\n  var vm = this;\n\n  this.stats = statHelper.getBuildStats(this.build);\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\n\n  this.getSaveDate = function (group) {\n    if (vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  };\n\n  this.getSaveTime = function (group) {\n    if (vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  };\n\n  this.getBuildSummary = function (group) {\n    var summary = '';\n\n    var typeCounts = {};\n    var cashItems = 0;\n    var titles = 0;\n    angular.forEach(vm.itemsByCategory, function (itemsByType, type) {\n      if (itemsByType.length > 0) {\n        if (summary.length > 0) {\n          summary += ', ';\n        }\n        summary += itemsByType.length + ' ' + type;\n      }\n    });\n\n    return summary;\n  };\n}]).directive('dngearsimBuildSummary', function () {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildSummaryCtrl',\n    controllerAs: 'buildCtrl',\n    template: __webpack_require__(116)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-summary.js\n// module id = 41\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-summary.js?");

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('BuildTalismansCtrl', ['$window', '$location', '$routeParams', '$timeout', 'saveHelper', 'statHelper', 'jobs', 'hCodeValues', 'itemColumnsToLoad', 'character', function ($window, $location, $routeParams, $timeout, saveHelper, statHelper, jobs, hCodeValues, itemColumnsToLoad, character) {\n  'use strict';\n\n  var vm = this;\n\n  $window.document.title = 'dngearsim | TALISMANS';\n  $window.scrollTo(0, 0);\n\n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if (!this.groupNames) {\n    this.groupNames = [];\n  }\n  if (this.groupNames.length > 0) {\n    this.groupName = saveHelper.getCurrentBuild();\n  } else {\n    this.groupName = null;\n  }\n\n  if (!this.groupName || !(this.groupName in this.savedItems)) {\n    if (this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n\n  if (!this.groupName) {\n    // console.log('cannot find build');\n    return;\n  }\n\n  this.getGroupCalcStats = function () {\n    if (this.groupCalcStats == null) {\n      var group = vm.savedItems[vm.groupName];\n      if (group) {\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\n      }\n    }\n\n    return this.groupCalcStats;\n  };\n\n  this.getBuild = function () {\n    return vm.savedItems[vm.groupName];\n  };\n\n  this.pickup = function (index) {\n    vm.selectedIndex = index;\n\n    vm.replaceHPAffectAmount = [];\n    vm.replaceMDmgAffectAmount = [];\n    vm.replacePDmgAffectAmount = [];\n    vm.replaceAvgDmgAffectAmount = [];\n  };\n\n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n\n  this.headers = ['+100%', '+75%', '+25%', '+0%'];\n\n  this.summaryStatIds = [];\n  for (var id in hCodeValues.stats) {\n    if (hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n\n  this.pcIndexes = {};\n  this.pcIndexes['100'] = 0;\n  this.pcIndexes['75'] = 1;\n  this.pcIndexes['25'] = 2;\n  this.pcIndexes['0'] = 3;\n\n  this.selectedIndex = -1;\n\n  this.rows = [];\n\n  this.updateRows = function () {\n    vm.rows = [];\n\n    angular.forEach(vm.savedItems[vm.groupName].items, function (item, index) {\n      if (item.typeName == 'talisman') {\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\n        if (!pcIndex && pcIndex != 0) {\n          pcIndex = 3;\n        }\n\n        var rowIndex = 0;\n        for (;;) {\n          if (!vm.rows[rowIndex]) {\n            vm.rows[rowIndex] = vm.makeFakeCells();\n          }\n\n          if (vm.rows[rowIndex][pcIndex].index < 0) {\n            if (!item.enchantmentNum) {\n              item.enchantmentNum = 0;\n            }\n\n            var data = vm.makeCell(item, index);\n            vm.rows[rowIndex][pcIndex] = data;\n            break;\n          } else {\n            rowIndex++;\n          }\n        }\n      }\n    });\n\n    if (vm.rows.length < 3) {\n      vm.rows[vm.rows.length + 1] = vm.makeFakeCells();\n    }\n  };\n\n  this.makeFakeCells = function (num) {\n    return [vm.makeCell({ enchantmentNum: 100 }, -1), vm.makeCell({ enchantmentNum: 75 }, -2), vm.makeCell({ enchantmentNum: 25 }, -3), vm.makeCell({ enchantmentNum: 0 }, -4)];\n  };\n\n  this.makeCell = function (item, index) {\n    return { item: item, index: index };\n  };\n\n  this.click = function (col) {\n    if (vm.selectedIndex == -1) {\n      if (col.index >= 0) {\n        vm.pickup(col.index);\n      }\n    } else {\n      vm.move(col);\n    }\n  };\n\n  this.move = function (col) {\n\n    var items = vm.savedItems[vm.groupName].items;\n    if (col.index >= 0) {\n      var swapEnchantmentNumber = col.item.enchantmentNum;\n\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\n      items[col.index] = items[vm.selectedIndex];\n      items[vm.selectedIndex] = col.item;\n    } else {\n      var item = items[vm.selectedIndex];\n      vm.setTalisman(item, col.item.enchantmentNum);\n      items.splice(vm.selectedIndex, 1);\n      items.push(item);\n    }\n\n    vm.groupCalcStats = null;\n    vm.selectedIndex = -1;\n    vm.updateRows();\n    vm.replaceAffectAmount = {};\n    $timeout();\n  };\n\n  this.setTalisman = function (item, newEnhancementNum) {\n    var extraStats = [];\n    angular.forEach(item.stats, function (stat, index) {\n      if (newEnhancementNum) {\n        extraStats.push({ id: stat.id, max: stat.max * (newEnhancementNum / 100) });\n      }\n    });\n\n    item.enchantmentStats = extraStats;\n    item.enchantmentNum = newEnhancementNum;\n\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\n  };\n\n  this.replaceAffectAmount = {};\n  this.getReplaceAffectAmount = function (statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    if (this.replaceAffectAmount[itemIndex]) {\n      return this.replaceAffectAmount[itemIndex][statId];\n    }\n  };\n\n  this.initReplaceAffects = function (itemIndex, item) {\n    if (vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\n      return;\n    }\n    this.replaceAffectAmount[itemIndex] = {};\n\n    var group = vm.savedItems[vm.groupName];\n    var item2 = group.items[vm.selectedIndex];\n\n    var extraStats = [];\n    var fullStats1 = [];\n    if (item.stats) {\n      angular.forEach(item.stats, function (stat, index) {\n        extraStats.push({ id: stat.id, max: stat.max * (item2.enchantmentNum / 100) });\n      });\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\n    }\n\n    extraStats = [];\n    angular.forEach(item2.stats, function (stat, index) {\n      extraStats.push({ id: stat.id, max: stat.max * (item.enchantmentNum / 100) });\n    });\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\n\n    var newItems = [{ stats: fullStats1 }, { stats: fullStats2 }];\n    angular.forEach(group.items, function (gItem, index) {\n      if (item !== gItem && item2 !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n\n    for (var id in hCodeValues.stats) {\n      if (hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n\n  this.getStatName = function (id) {\n    var retVal = '';\n    if (hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if (vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    } else if (hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if (vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  };\n\n  this.getStat = function (id, stats) {\n    var len = stats.length;\n    for (var i = 0; i < len; ++i) {\n      if (stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return { id: id, max: 0 };\n  };\n\n  function calcStatPercent(newVal, origVal) {\n    if (newVal && origVal) {\n      return Math.round(10000 * (1 - origVal / newVal)) / 100;\n    } else {\n      return 0;\n    }\n  }\n\n  this.save = function () {\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\n    $location.path('/build');\n    $location.search('buildName', vm.groupName);\n  };\n\n  this.updateRows();\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-talismans.js\n// module id = 42\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-talismans.js?");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('DeleteBuildCtrl', ['$location', '$routeParams', '$timeout', 'saveHelper', 'dntData', 'jobs', 'hCodeValues', 'itemColumnsToLoad', function ($location, $routeParams, $timeout, saveHelper, dntData, jobs, hCodeValues, itemColumnsToLoad) {\n  'use strict';\n\n  var vm = this;\n  this.newGroup = true;\n  if ('name' in $routeParams) {\n    this.name = $routeParams.name;\n  }\n\n  this.delete = function () {\n    saveHelper.deleteBuild(this.name);\n    $location.path('/builds/');\n  };\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/delete-build.js\n// module id = 43\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/delete-build.js?");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  editBuildCtrl.$inject = [\"$window\", \"$location\", \"$routeParams\", \"$timeout\", \"saveHelper\", \"dntData\", \"jobs\", \"hCodeValues\", \"itemColumnsToLoad\", \"character\", \"region\"];\n  angular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\n\n  function editBuildCtrl($window, $location, $routeParams, $timeout, saveHelper, dntData, jobs, hCodeValues, itemColumnsToLoad, character, region) {\n    'use strict';\n\n    var vm = this;\n    vm.savedItems = saveHelper.getSavedItems();\n    vm.group = {};\n    vm.newGroup = true;\n    if ('buildName' in $routeParams) {\n      vm.groupName = $routeParams.buildName;\n      if (vm.groupName in vm.savedItems) {\n        vm.group = vm.savedItems[vm.groupName];\n        vm.newGroup = false;\n      }\n    } else {\n      vm.groupName = '';\n    }\n    vm.oldGroupName = vm.groupName;\n    vm.heroStats = [];\n    vm.elements = hCodeValues.elements;\n    vm.damageTypes = hCodeValues.damageTypes;\n\n    vm.initDamageType = function () {\n      if (vm.job) {\n        if (vm.group.damageType) {\n          vm.damageType = vm.group.damageType;\n        } else if (vm.newGroup && 'DamageType' in vm.job.d) {\n          if (vm.job.d.DamageType) {\n            vm.damageType = hCodeValues.damageTypes[2];\n          } else {\n            vm.damageType = hCodeValues.damageTypes[1];\n          }\n        } else {\n          vm.damageType = hCodeValues.damageTypes[0];\n        }\n      }\n    };\n\n    vm.initDefaultElement = function () {\n      var defaultElement = hCodeValues.elements[0];\n      var defaultSecondaryElement = hCodeValues.elements[0];\n\n      if (vm.job && vm.job.d) {\n        var jobName = vm.job.d.EnglishName;\n        if (jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\n          defaultElement = hCodeValues.elements[3];\n          defaultSecondaryElement = hCodeValues.elements[3];\n        } else if (jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\n          defaultElement = hCodeValues.elements[4];\n          defaultSecondaryElement = hCodeValues.elements[4];\n        } else if (jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\n          defaultElement = hCodeValues.elements[1];\n          defaultSecondaryElement = hCodeValues.elements[1];\n        } else if (jobName == 'ELESTRA') {\n          defaultElement = hCodeValues.elements[2];\n          defaultSecondaryElement = hCodeValues.elements[2];\n        } else if (jobName == 'ADEPT') {\n          defaultElement = hCodeValues.elements[1];\n          defaultSecondaryElement = hCodeValues.elements[2];\n        } else if (jobName == 'LIGHTFURY') {\n          defaultElement = hCodeValues.elements[3];\n          defaultSecondaryElement = hCodeValues.elements[4];\n        }\n      }\n\n      if (vm.newGroup) {\n        vm.element = defaultElement;\n        vm.secondaryElement = defaultSecondaryElement;\n      }\n\n      if (!vm.element) {\n        vm.element = defaultElement;\n      }\n\n      if (!vm.secondaryElement) {\n        vm.secondaryElement = defaultElement;\n      }\n    };\n\n    if (vm.group.element) {\n      vm.element = vm.group.element;\n    } else {\n      vm.element = hCodeValues.elements[0];\n    }\n\n    if (vm.group.secondaryElement) {\n      vm.secondaryElement = vm.group.secondaryElement;\n    } else {\n      vm.secondaryElement = hCodeValues.elements[0];\n    }\n\n    if (!('critResist' in vm.group)) {\n      vm.critResist = 20;\n    } else {\n      vm.critResist = vm.group.critResist;\n    }\n\n    if (!('eleResist' in vm.group)) {\n      vm.eleResist = 0;\n    } else {\n      vm.eleResist = vm.group.eleResist;\n    }\n\n    if (vm.group.enemyLevel) {\n      vm.enemyLevel = vm.group.enemyLevel;\n    } else {\n      vm.enemyLevel = 93;\n    }\n\n    if (vm.group.playerLevel) {\n      vm.playerLevel = vm.group.playerLevel;\n    } else {\n      vm.playerLevel = 93;\n    }\n\n    if (vm.group.heroLevel && vm.group.heroLevel > 0) {\n      vm.heroLevel = vm.group.heroLevel;\n    } else {\n      vm.heroLevel = 1;\n    }\n\n    vm.init = function () {\n      var newJobs = jobs.getFinalJobs();\n      if (newJobs.length > 0) {\n        $timeout(function () {\n\n          if ('job' in vm.group) {\n            angular.forEach(newJobs, function (value, key) {\n              if (value.id == vm.group.job.id) {\n                vm.job = value;\n              }\n            });\n          }\n\n          vm.initDamageType();\n          vm.initDefaultElement();\n          vm.setHeroStats();\n        });\n      }\n    };\n\n    vm.setJob = function () {\n      $window.scrollTo(0, 0);\n      $timeout(function () {\n        vm.initDamageType();\n        vm.initDefaultElement();\n      });\n    };\n\n    region.init();\n    character.init(function () {\n      vm.init();\n    });\n\n    vm.getStatCap = function (colName, useLevel) {\n      return character.getStatCaps(useLevel)[colName];\n    };\n    vm.getJobConversion = function (colName) {\n      return character.getConversions(vm.job.id)[colName];\n    };\n    vm.getJobBaseStat = function (colName) {\n      return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\n    };\n\n    vm.invalidGroupName = function () {\n      if (!vm.groupName) {\n        return true;\n      }\n\n      if (vm.groupName in vm.savedItems) {\n        if (vm.newGroup || vm.groupName != vm.oldGroupName) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    vm.ok = function () {\n      var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\n      var playerStatCaps = character.getStatCaps(vm.playerLevel);\n      var conversions = character.getConversions(vm.job.id);\n      var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\n      var heroStats = character.getHeroStats(vm.heroLevel);\n\n      if (vm.newGroup) {\n        vm.oldGroupName = vm.groupName;\n        saveHelper.importGroup(vm.groupName, []);\n      }\n\n      saveHelper.saveBuild(vm.oldGroupName, vm.groupName, {\n        enemyLevel: vm.enemyLevel,\n        playerLevel: vm.playerLevel,\n        heroLevel: vm.heroLevel,\n        job: vm.job,\n        damageType: vm.damageType,\n        element: vm.element,\n        secondaryElement: vm.secondaryElement,\n        critResist: vm.critResist,\n        eleResist: vm.eleResist,\n        enemyStatCaps: enemyStatCaps,\n        playerStatCaps: playerStatCaps,\n        conversions: conversions,\n        baseStats: baseStats,\n        heroStats: heroStats\n      });\n\n      $location.path('/build');\n      $location.search('buildName', vm.groupName);\n    };\n\n    vm.setHeroStats = function () {\n      vm.heroStats = character.getHeroStats(vm.heroLevel);\n      // console.log('got ' + vm.heroStats.length + ' hero stats');\n    };\n\n    $timeout(function () {\n      var input = document.getElementById('groupNameInput');\n      if (input) {\n        input.focus();\n        input.setSelectionRange(0, 9999);\n      }\n    });\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/edit-build.js\n// module id = 44\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/edit-build.js?");

/***/ }),
/* 45 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-loading>\\r\\n  \\r\\n<dnsim-choose-class ng-if=!editGroup.job job=editGroup.job on-set-job=editGroup.setJob()></dnsim-choose-class>\\r\\n<div class=row ng-show=editGroup.job>\\r\\n  <div class=col-xs-12>\\r\\n    <h2>\\r\\n      <dnsim-job-icon item=::editGroup.job></dnsim-job-icon>\\r\\n      {{editGroup.job.name}}\\r\\n      <small>\\r\\n        <button class=\\\"btn btn-link\\\" ng-click=\\\"editGroup.job=null\\\">\\r\\n        &raquo;{{'change class/specialisation' | translate}}\\r\\n        </button>\\r\\n      </small>\\r\\n    </h2>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-3 ng-class: {'bg-danger' : editGroup.invalidGroupName()};\\\">\\r\\n    <label>{{'build name' | translate}}\\r\\n    </label>\\r\\n    <input type=text class=form-control id=groupNameInput ng-model=editGroup.groupName ng-keyup=\\\"$event.keyCode == 13 ? ok() : null\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'enemy&nbsp;lvl' | translate}}\\r\\n    </label>\\r\\n    <input class=form-control ng-model=editGroup.enemyLevel ng-keyup=\\\"$event.keyCode == 13 ? ok() : null\\\" type=number dnsim-string-to-number step=any />\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'player&nbsp;lvl' | translate}}\\r\\n    </label>\\r\\n    <input class=form-control ng-model=editGroup.playerLevel ng-keyup=\\\"$event.keyCode == 13 ? ok() : null\\\" type=number dnsim-string-to-number step=any />\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'hero&nbsp;lvl' | translate}}\\r\\n    </label>\\r\\n    <input class=form-control ng-model=editGroup.heroLevel ng-keyup=\\\"$event.keyCode == 13 ? ok() : null\\\" type=number dnsim-string-to-number step=any ng-change=editGroup.setHeroStats() />\\r\\n  </div>\\r\\n  <div class=\\\"hidden-xs hidden-sm col-md-3\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'damage type' | translate}}: \\r\\n    </label>\\r\\n    <select ng-model=editGroup.damageType class=form-control ng-options=\\\"damage.name | translate for damage in editGroup.damageTypes track by damage.id\\\">\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'primary element' | translate}}: \\r\\n    </label>\\r\\n    <select ng-model=editGroup.element class=form-control ng-options=\\\"element.name | translate for element in editGroup.elements track by element.id\\\">\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'secondary element' | translate}}: \\r\\n    </label>\\r\\n    <select ng-model=editGroup.secondaryElement class=form-control ng-options=\\\"element.name | translate for element in editGroup.elements track by element.id\\\">\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"hidden-xs hidden-sm col-md-3\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'enemy crit resist&nbsp;(%)' | translate}}:\\r\\n    </label>\\r\\n    <input class=form-control ng-model=editGroup.critResist ng-keyup=\\\"$event.keyCode == 13 ? ok() : null\\\" type=number dnsim-string-to-number step=any />\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <label>{{'enemy ele resist&nbsp;(%)' | translate}}:\\r\\n    </label>\\r\\n    <input class=form-control ng-model=editGroup.eleResist ng-keyup=\\\"$event.keyCode == 13 ? ok() : null\\\" type=number dnsim-string-to-number step=any />\\r\\n  </div>\\r\\n</div>\\r\\n<br/>\\r\\n<div class=row ng-if=editGroup.job>\\r\\n  <div class=\\\"col-xs-4 col-md-3\\\">\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=editGroup.ok() ng-disabled=editGroup.invalidGroupName()>\\r\\n      <span class=\\\"glyphicon glyphicon-floppy-disk\\\" aria-hidden=true></span>\\r\\n      {{'save' | translate}}\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-8 col-md-9\\\">\\r\\n    <label>{{'stat caps' | translate}}</label>\\r\\n    <p>\\r\\n{{'fd'| translate}}:&nbsp;{{editGroup.getStatCap('Cfinaldamage', editGroup.enemyLevel) }} |\\r\\n{{'def'| translate}}:&nbsp;{{editGroup.getStatCap('Cdefense', editGroup.enemyLevel) }} |\\r\\n{{'crit'| translate}}:&nbsp;{{editGroup.getStatCap('Ccritical', editGroup.enemyLevel) }} |\\r\\n{{'crit dmg'| translate}}:&nbsp;{{editGroup.getStatCap('CcriticalDamage', editGroup.playerLevel) }}\\r\\n    </p>\\r\\n    <label>{{'hero level stats' | translate}}</label>\\r\\n    <p>\\r\\n      <span dnsim-stats separator=\\\"'|'\\\" stats=editGroup.heroStats />\\r\\n    </p>\\r\\n    <label>{{'naked stats' | translate}}</label>\\r\\n    <p>\\r\\n{{'str'| translate}}:&nbsp;{{editGroup.getJobBaseStat('Strength')}} |\\r\\n{{'agi'| translate}}:&nbsp;{{editGroup.getJobBaseStat('Agility')}} |\\r\\n{{'int'| translate}}:&nbsp;{{editGroup.getJobBaseStat('Intelligence')}} |\\r\\n{{'vit'| translate}}:&nbsp;{{editGroup.getJobBaseStat('Stamina')}} |\\r\\n{{'mp'| translate}}:&nbsp;{{editGroup.getJobBaseStat('BaseMP')}} |\\r\\n{{'aggro'| translate}}:&nbsp;{{editGroup.getJobBaseStat('AggroperPvE')}}\\r\\n    </p>\\r\\n    <label>{{'stat affects' | translate}}</label>\\r\\n    <p>\\r\\n{{'vit&nbsp;to&nbsp;hp'| translate}}:&nbsp;{{editGroup.getJobConversion('HP')}} |\\r\\n{{'str&nbsp;to&nbsp;pdmg'| translate}}:&nbsp;{{editGroup.getJobConversion('StrengthAttack') | number:2}} |\\r\\n{{'agi&nbsp;to&nbsp;pdmg'| translate}}:&nbsp;{{editGroup.getJobConversion('AgilityAttack') | number:2}} |\\r\\n{{'int&nbsp;to&nbsp;mdmg'| translate}}:&nbsp;{{editGroup.getJobConversion('IntelligenceAttack') | number:2}} |\\r\\n{{'vit&nbsp;to&nbsp;pdef'| translate}}:&nbsp;{{editGroup.getJobConversion('PhysicalDefense') | number:2}} |\\r\\n{{'int&nbsp;to&nbsp;mdef'| translate}}:&nbsp;{{editGroup.getJobConversion('MagicDefense') | number:2}} |\\r\\n{{'agi&nbsp;to&nbsp;crit'| translate}}:&nbsp;{{editGroup.getJobConversion('Critical')}} |\\r\\n{{'str&nbsp;int&nbsp;to&nbsp;cdmg'| translate}}:&nbsp;{{editGroup.getJobConversion('StrengthIntelligenceToCriticalDamage')}}\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n</dnsim-loading>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/edit-build.html\n// module id = 45\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/edit-build.html?");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('quickAddCtrl', ['$timeout', 'statHelper', 'saveHelper', 'quickAdd', 'itemCategory', 'jobs', 'dntData', 'exportLinkHelper', function ($timeout, statHelper, saveHelper, quickAdd, itemCategory, jobs, dntData, exportLinkHelper) {\n  'use strict';\n\n  var vm = this;\n  vm.startedForCat = '';\n  vm.stepNumber = 0;\n  vm.datas = [];\n  vm.options = [];\n\n  this.setOptions = function () {\n    if (vm.hasStarted()) {\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      if (vm.options.length == 1) {\n        vm.selectOption(vm.options[0]);\n      }\n    }\n  };\n\n  this.selectOption = function (value) {\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber);\n    vm.datas.push(data);\n    vm.stepNumber++;\n    if (!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\n\n      var newItem = quickAdd.getItem(vm.datas);\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\n      angular.forEach(dntFiles, function (columns, fileName) {\n        dntData.init(fileName, columns, function () {}, function () {\n          vm.tryToAddItem(dntFiles, newItem);\n        });\n      });\n      vm.tryToAddItem(dntFiles, newItem);\n    } else {\n      vm.setOptions();\n      // console.log('setup next step');\n    }\n  };\n\n  this.tryToAddItem = function (dntFiles, item) {\n    if (!dntData.anyLoading()) {\n\n      var allLoaded = true;\n      angular.forEach(dntFiles, function (columns, fileName) {\n        if (!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n\n      if (allLoaded) {\n        if (vm.datas.length > 0) {\n          vm.cancel();\n          var newItem = exportLinkHelper.reloadItem(item);\n          newItem.gemSlot = vm.gemSlot;\n          saveHelper.saveItem(vm.buildName, newItem);\n          vm.build.items.push(newItem);\n          vm.onChange();\n        }\n      }\n    }\n  };\n\n  this.reset = function () {\n    vm.stepNumber = 0;\n    vm.datas = [];\n    $timeout(function () {\n      vm.setOptions();\n    });\n  };\n\n  this.hasStarted = function () {\n    return vm.startedForCat == vm.category.name;\n  };\n\n  this.start = function () {\n    vm.startedForCat = vm.category.name;\n\n    jobs.init(function () {}, vm.reset);\n    itemCategory.init(vm.category.name, vm.reset);\n  };\n\n  this.hasOptions = function () {\n    return quickAdd.hasOptions(vm.category, vm.build, []);\n  };\n\n  this.cancel = function () {\n    vm.startedForCat = '';\n    vm.reset();\n  };\n\n  this.back = function () {\n    if (vm.stepNumber == 0) {\n      vm.cancel();\n    } else {\n      do {\n        vm.stepNumber--;\n        vm.datas.pop();\n\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      } while (testOptions.length <= 1 && vm.stepNumber > 0);\n\n      vm.setOptions();\n    }\n  };\n  dntData.init('exchange.lzjson', null, function () {}, vm.reset);\n}]).directive('dngearsimQuickAdd', function () {\n  return {\n    scope: true,\n    bindToController: {\n      category: '=category',\n      build: '=build',\n      buildName: '=buildName',\n      gemSlot: '=gemSlot',\n      onChange: '&onChange'\n    },\n    controller: 'quickAddCtrl',\n    controllerAs: 'quickAdd',\n    template: __webpack_require__(119)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/quick-add.js\n// module id = 46\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/quick-add.js?");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('ReloadBuildCtrl', ['$location', '$routeParams', '$timeout', 'saveHelper', 'dntData', 'dntReset', 'groupHelper', 'translations', reloadBuildCtrl]);\n\nfunction reloadBuildCtrl($location, $routeParams, $timeout, saveHelper, dntData, dntReset, groupHelper, translations) {\n  'use strict';\n\n  var vm = this;\n  if ('name' in $routeParams) {\n    vm.name = $routeParams.name;\n  }\n\n  var savedItems = saveHelper.getSavedItems();\n  if (vm.name in savedItems) {\n    vm.build = savedItems[vm.name];\n  }\n\n  vm.reloaded = false;\n  vm.reload = function () {\n    dntReset();\n    vm.reloaded = false;\n\n    translations.init(progress, tryInit);\n\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function (columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n  };\n\n  vm.goToBuild = function () {\n    $location.path('/build');\n    $location.search('buildName', vm.name);\n  };\n\n  function progress() {}\n\n  function tryInit() {\n    if (vm.reloaded) {\n      return;\n    }\n\n    var allLoaded = true;\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function (columns, fileName) {\n      if (!dntData.isLoaded(fileName)) {\n        allLoaded = false;\n        return;\n      }\n    });\n\n    if (allLoaded && translations.isLoaded()) {\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\n      saveHelper.updatedSavedItems(vm.name, newItems);\n      vm.build.items = newItems;\n\n      vm.reloaded = true;\n    }\n  }\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/reload-build.js\n// module id = 47\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/reload-build.js?");

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('ViewGroupCtrl', ['$scope', '$window', 'region', '$location', '$routeParams', 'saveHelper', 'dntData', '$timeout', 'translations', 'dntReset', 'exportLinkHelper', 'groupHelper', 'jobs', 'character', 'statHelper', 'hCodeValues', function ($scope, $window, region, $location, $routeParams, saveHelper, dntData, $timeout, translations, dntReset, exportLinkHelper, groupHelper, jobs, character, statHelper, hCodeValues) {\n  'use strict';\n\n  document.body.className = 'saved-back';\n\n  region.setLocationByName($routeParams.region);\n\n  $scope.buildName = '';\n  $scope.build = {};\n\n  if ('g' in $routeParams && 'i' in $routeParams) {\n    $scope.buildName = $routeParams.g;\n    $window.document.title = 'dngearsim | ' + $routeParams.g;\n\n    $scope.enemyLevel = $routeParams.e;\n    $scope.playerLevel = $routeParams.p;\n    $scope.heroLevel = $routeParams.h;\n    $scope.job = { id: $routeParams.j };\n    $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\n    $scope.element = hCodeValues.elements[$routeParams.t];\n    $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\n\n    var items = [];\n\n    var itemString = $routeParams.i;\n\n    angular.forEach(itemString.split(','), function (itemStr, index) {\n      var item = exportLinkHelper.decodeItem(itemStr);\n\n      if (item.id > 0) {\n        items.push(item);\n      }\n    });\n\n    $scope.build = {};\n    $scope.savedItems = {};\n    $scope.savedItems[$scope.buildName] = $scope.build;\n    $scope.build.items = items;\n    $scope.isLoading = true;\n\n    angular.forEach(groupHelper.getDntFiles($scope.build), function (columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n\n    translations.init(progress, tryInit);\n    jobs.init(progress, tryInit);\n    character.init(tryInit);\n\n    $timeout();\n  }\n\n  $scope.anyItems = Object.keys($scope.savedItems).length > 0;\n\n  function tryInit() {\n\n    var allInit = true;\n    angular.forEach(groupHelper.getDntFiles($scope.build), function (columns, fileName) {\n      if (!dntData.isLoaded(fileName)) {\n        allInit = false;\n      }\n    });\n\n    if (!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\n      return;\n    }\n\n    $timeout(function () {\n      var groupName = $scope.buildName;\n      var group = $scope.build;\n\n      $scope.job = jobs.getById($scope.job.id);\n\n      $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\n      $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\n      if ($scope.job) {\n        $scope.conversions = character.getConversions($scope.job.id);\n        $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\n      }\n      $scope.heroStats = character.getHeroStats($scope.heroLevel);\n\n      var newItems = groupHelper.reloadGroup(groupName, group);\n\n      $scope.savedItems = {};\n      $scope.build = {\n        items: newItems,\n        lastUpdate: group.lastUpdate,\n\n        enemyLevel: $scope.enemyLevel,\n        playerLevel: $scope.playerLevel,\n        heroLevel: $scope.heroLevel,\n        job: $scope.job,\n        damageType: $scope.damageType,\n        element: $scope.element,\n        secondaryElement: $scope.secondaryElement,\n        enemyStatCaps: $scope.enemyStatCaps,\n        playerStatCaps: $scope.playerStatCaps,\n        conversions: $scope.conversions,\n        baseStats: $scope.baseStats,\n        heroStats: $scope.heroStats\n      };\n      $scope.savedItems[groupName] = $scope.build;\n      $scope.stats = statHelper.getBuildStats($scope.build);\n\n      var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\n      $scope.build.shortUrl = sessionStorage.getItem(longUrl);\n    });\n  }\n\n  function progress() {}\n\n  $scope.copyGroup = function () {\n    var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\n    // console.log('copying in as ' + newBuildName);\n\n    saveHelper.saveBuild(newBuildName, newBuildName, {\n      enemyLevel: $scope.enemyLevel,\n      playerLevel: $scope.playerLevel,\n      heroLevel: $scope.heroLevel,\n      job: $scope.job,\n      damageType: $scope.damageType,\n      element: $scope.element,\n      secondaryElement: $scope.secondaryElement,\n      critResist: $scope.critResist,\n      eleResist: $scope.eleResist,\n      enemyStatCaps: $scope.enemyStatCaps,\n      playerStatCaps: $scope.playerStatCaps,\n      conversions: $scope.conversions,\n      baseStats: $scope.baseStats,\n      heroStats: $scope.heroStats\n    });\n\n    $location.url('/build?buildName=' + newBuildName);\n  };\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/view-group.js\n// module id = 48\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/view-group.js?");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').filter('escape', [function () {\n    'use strict';\n\n    function escapeFilter(input) {\n      if (input) {\n        return window.encodeURIComponent(input);\n      }\n      return '';\n    }\n\n    return escapeFilter;\n  }]);\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/filters/escape.filter.js\n// module id = 49\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/filters/escape.filter.js?");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').filter('percentage', [function () {\n    'use strict';\n\n    function percentageFilter(input) {\n      if (typeof input == 'number') {\n        return Math.round(input * 100 * 100) / 100 + '%';\n      } else {\n        return input;\n      }\n    }\n    percentageFilter.$stateful = false;\n\n    return percentageFilter;\n  }]);\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/filters/percentage.filter.js\n// module id = 50\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/filters/percentage.filter.js?");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  groupAssignment.$inject = [\"hCodeValues\", \"statHelper\", \"saveHelper\", \"itemCategory\", \"$scope\", \"exportLinkHelper\", \"dntData\"];\n  angular.module('dnsim').directive('dngearsimGroupAssignment', function () {\n    return {\n      scope: true,\n      bindToController: {\n        item: '=item',\n        compact: '=compact',\n        onChange: '&onChange'\n      },\n      controller: groupAssignment,\n      controllerAs: 'editCtrl',\n      template: __webpack_require__(122)\n    };\n  });\n\n  function groupAssignment(hCodeValues, statHelper, saveHelper, itemCategory, $scope, exportLinkHelper, dntData) {\n\n    var vm = this;\n\n    this.savedItems = saveHelper.getSavedItems();\n    this.groupNames = Object.keys(this.savedItems);\n    if (!this.groupName) {\n      this.groupName = saveHelper.getCurrentBuild();\n    }\n\n    if (!(this.groupName in this.savedItems)) {\n      this.groupName = null;\n    }\n\n    if (!this.groupName && this.savedItems) {\n      for (var savedGroup in this.savedItems) {\n        this.groupName = savedGroup;\n        break;\n      }\n    }\n\n    if (!this.groupName) {\n      return;\n    }\n\n    this.summaryStatIds = [];\n    for (var id in hCodeValues.stats) {\n      if (hCodeValues.stats[id].summaryDisplay) {\n        this.summaryStatIds.push(id);\n      }\n    }\n\n    this.clearGroup = function () {\n      vm.addAffectAmount = null;\n      vm.replaceAffectAmount = {};\n\n      vm.groupItems = null;\n      vm.groupCalcStats = null;\n    };\n\n    vm.tryToSetItem = function (dntFiles) {\n      if (!dntData.anyLoading()) {\n\n        var allLoaded = true;\n        angular.forEach(dntFiles, function (columns, fileName) {\n          if (!dntData.isLoaded(fileName)) {\n            allLoaded = false;\n          }\n        });\n\n        if (allLoaded) {\n          vm.item = exportLinkHelper.reloadItem(vm.item);\n        }\n      }\n    };\n\n    var dntFiles = exportLinkHelper.getDntFiles(vm.item);\n    angular.forEach(dntFiles, function (columns, fileName) {\n      if (vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\n        delete dntFiles[fileName];\n      } else {\n        dntData.init(fileName, columns, function () {}, function () {\n          vm.tryToSetItem(dntFiles);\n        });\n      }\n    });\n    vm.tryToSetItem(dntFiles);\n\n    $scope.$watch('editCtrl.item', function () {\n      vm.clearGroup();\n    });\n\n    this.getAddAffectAmount = function (stat) {\n      this.initAddAffects();\n      // console.log('add affect: ', this.addAffectAmount[stat], this.item);\n      return this.addAffectAmount[stat];\n    };\n\n    this.getReplaceAffectAmount = function (statId, itemIndex, item) {\n      this.initReplaceAffects(itemIndex, item);\n      return this.replaceAffectAmount[itemIndex][statId];\n    };\n\n    this.getGroupCalcStats = function () {\n\n      if (this.groupCalcStats == null) {\n\n        var group = vm.savedItems[vm.groupName];\n        if (group) {\n          this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\n        }\n      }\n\n      return this.groupCalcStats;\n    };\n\n    this.getBuild = function () {\n      return vm.savedItems[vm.groupName];\n    };\n\n    this.initAddAffects = function () {\n\n      if (vm.addAffectAmount) {\n        return;\n      }\n\n      // console.log('initialising add affects ');\n\n      var origStats = vm.getGroupCalcStats();\n      var group = vm.savedItems[vm.groupName];\n      var newItems = [];\n      if (group.items) {\n        newItems = group.items.concat([vm.item]);\n      }\n      var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n\n      this.addAffectAmount = {};\n      for (var id in hCodeValues.stats) {\n        if (hCodeValues.stats[id].summaryDisplay) {\n          vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n        }\n      }\n    };\n\n    this.initReplaceAffects = function (itemIndex, item) {\n      if (vm.replaceAffectAmount[itemIndex]) {\n        return;\n      }\n\n      var group = vm.savedItems[vm.groupName];\n      var newItems = [vm.item];\n      angular.forEach(group.items, function (gItem, index) {\n        if (item !== gItem) {\n          newItems.push(gItem);\n        }\n      });\n\n      var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n      var origStats = vm.getGroupCalcStats();\n\n      this.replaceAffectAmount[itemIndex] = {};\n      for (var id in hCodeValues.stats) {\n        if (hCodeValues.stats[id].summaryDisplay) {\n          vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n        }\n      }\n    };\n\n    function calcStatPercent(newVal, origVal) {\n      if (newVal && origVal) {\n        // console.log('orig: ' + origVal + ',new: ' + newVal);\n        return Math.round(10000 * (1 - origVal / newVal)) / 100;\n      } else {\n        return 0;\n      }\n    }\n\n    this.getStat = function (id, stats) {\n      var len = stats.length;\n      for (var i = 0; i < len; ++i) {\n        if (stats[i].id == id) {\n          return stats[i];\n        }\n      }\n      return { id: id, max: 0 };\n    };\n\n    this.getStatName = function (id) {\n      var retVal = '';\n      if (hCodeValues.stats[id].element == 'primary') {\n        var eleId = 0;\n        if (vm.savedItems[vm.groupName].element) {\n          eleId = vm.savedItems[vm.groupName].element.id;\n        }\n        retVal += hCodeValues.elements[eleId].name;\n      } else if (hCodeValues.stats[id].element == 'secondary') {\n        var eleId = 0;\n        if (vm.savedItems[vm.groupName].secondaryElement) {\n          eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n        }\n        retVal += hCodeValues.elements[eleId].name;\n      }\n      return retVal + ' ' + hCodeValues.stats[id].name;\n    };\n\n    this.getGroupItems = function () {\n\n      var itemSplit;\n      function numMatches(str) {\n        if (str) {\n          var matches = 0;\n          for (var i = 0; i < itemSplit.length; ++i) {\n            if (str.indexOf(itemSplit[i]) > 0) {\n              matches++;\n            }\n          }\n          return matches;\n        } else {\n          return -1;\n        }\n      }\n\n      if (vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\n        vm.groupItems = [];\n\n        var existing;\n        if (vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\n          existing = _.find(vm.savedItems[vm.groupName].items, function (item) {\n            return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\n          });\n        }\n\n        var items = [];\n        if (existing) {\n          items.push(existing);\n        } else {\n          _.each(vm.savedItems[vm.groupName].items, function (item) {\n            if (item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\n              if (item.exchangeType == vm.item.exchangeType) {\n                items.push(item);\n              }\n            } else if (item.typeName == vm.item.typeName) {\n              items.push(item);\n            }\n          });\n\n          if (vm.item.name) {\n            itemSplit = vm.item.name.split(' ');\n          }\n          items.sort(function (a, b) {\n            return numMatches(b.name) - numMatches(a.name);\n          });\n        }\n\n        angular.forEach(items, function (item, index) {\n          if (item.name == vm.item.name) {\n            vm.groupItems.push(item);\n          }\n        });\n\n        angular.forEach(items, function (item, index) {\n          if (item.name != vm.item.name) {\n            vm.groupItems.push(item);\n          }\n        });\n      }\n      return vm.groupItems;\n    };\n\n    this.hasMaxExchangable = function () {\n      var cat = itemCategory.byName(this.item.typeName);\n      var items = this.getGroupItems();\n\n      if (vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\n        if (_.find(items, function (item) {\n          return item.sparkTypeId == vm.item.sparkTypeId;\n        })) {\n          return true;\n        }\n      }\n\n      if (cat && cat.maxCat) {\n        if (items.length >= cat.maxCat) {\n          return true;\n        }\n      }\n\n      if (cat && cat.maxExchange) {\n        if (items.length >= cat.maxExchange) {\n          for (var i = 0; i < items.length; ++i) {\n            if (!items[i].exchangeType) {\n              return false;\n            }\n          }\n          // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\n          return true;\n        }\n      }\n      return false;\n    };\n\n    this.nextGroup = function () {\n\n      var uptoItem = false;\n      var nextGroup = null;\n      angular.forEach(vm.groupNames, function (groupName, index) {\n        if (uptoItem) {\n          if (nextGroup == null) {\n            nextGroup = groupName;\n          }\n        }\n        if (groupName == vm.groupName) {\n          uptoItem = true;\n        }\n      });\n\n      if (nextGroup == null) {\n        nextGroup = vm.groupNames[0];\n      }\n\n      vm.groupName = nextGroup;\n      saveGroup();\n      vm.clearGroup();\n    };\n\n    this.prevGroup = function () {\n\n      var foundGroup = false;\n      var prevGroup = null;\n      angular.forEach(vm.groupNames, function (groupName, index) {\n        if (groupName == vm.groupName) {\n          foundGroup = true;\n        }\n\n        if (!foundGroup) {\n          prevGroup = groupName;\n        }\n      });\n\n      if (prevGroup == null) {\n        prevGroup = vm.groupNames[vm.groupNames.length - 1];\n      }\n\n      vm.groupName = prevGroup;\n      saveGroup();\n      vm.clearGroup();\n    };\n\n    this.addToGroup = function () {\n      saveHelper.saveItem(vm.groupName, vm.item);\n      this.savedItems = saveHelper.getSavedItems();\n      vm.clearGroup();\n      vm.onChange();\n    };\n\n    this.replace = function (item) {\n      item.replaceItem = true;\n      var newItemList = [];\n      angular.forEach(vm.savedItems[vm.groupName].items, function (gItem, index) {\n        if (gItem.replaceItem) {\n          // console.log('found replace item');\n          newItemList.push(vm.item);\n        } else {\n          newItemList.push(gItem);\n        }\n      });\n\n      saveHelper.updatedSavedItems(vm.groupName, newItemList);\n      this.savedItems = saveHelper.getSavedItems();\n      vm.clearGroup();\n      vm.onChange();\n    };\n\n    function saveGroup() {\n      saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n    }\n  };\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/group-assignment.js\n// module id = 51\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/group-assignment.js?");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('ItemCtrl', ['$scope', '$window', 'dntData', 'hCodeValues', 'items', 'jobs', 'exportLinkHelper', '$routeParams', 'translations', '$location', 'region', 'itemFactory', '$timeout', 'statHelper', 'saveHelper', function ($scope, $window, dntData, hCodeValues, items, jobs, exportLinkHelper, $routeParams, translations, $location, region, itemFactory, $timeout, statHelper, saveHelper) {\n  'use strict';\n\n  region.setLocationByName($routeParams.region);\n\n  $window.scrollTo(0, 0);\n\n  $scope.jobName = null;\n  // console.log('search string: ', $routeParams.i);\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\n  if ('itemSource' in $scope.item) {\n    $scope.itemType = items[$scope.item.itemSource];\n  }\n\n  $scope.item.setStats = null;\n  $scope.item.setId = null;\n  $scope.detail = null;\n\n  $scope.getDescription = function () {\n    if ($scope.item.description) {\n      return $scope.item.description;\n    } else if ($scope.itemType && $scope.itemType.name == 'title' && translations.isLoaded() && dntData.isLoaded($scope.itemType.mainDnt)) {\n\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\n      if (itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    } else if ($scope.item.fileName && dntData.isLoaded($scope.item.fileName + '.lzjson')) {\n\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\n      if (itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    }\n    return '';\n  };\n\n  $scope.getExchangeType = function () {\n    // console.log('getting exchange');\n    var exchangeDnt = 'exchange.lzjson';\n    if (translations.isLoaded() && dntData.isLoaded(exchangeDnt) && $scope.item.exchangeType > 0) {\n\n      // console.log('finding exchange ' + $scope.item.exchangeType);\n\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\n      // console.log('got ' + exchange.length);\n      if (exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n        // console.log('exchange name: ' + exchange[0].NameID);\n        return translations.translate(exchange[0].NameID).toLowerCase();\n      }\n    }\n    return '';\n  };\n\n  $scope.setDetail = function (detail) {\n    $scope.detail = detail;\n  };\n\n  $scope.getNumInSet = function () {\n\n    var buildName = $scope.getBuildName();\n    if (buildName && $scope.item && $scope.item.setId) {\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\n    }\n\n    return 0;\n  };\n\n  $scope.getBuildName = function () {\n    var buildName = saveHelper.getCurrentBuild();\n    if ($scope.builds) {\n      if (!buildName || !(buildName in $scope.builds)) {\n        var allBuildNames = Object.keys($scope.builds);\n        if (allBuildNames.length) {\n          buildName = allBuildNames[0];\n        }\n      }\n    }\n\n    return buildName;\n  };\n\n  $scope.getSellingPrice = function () {\n    var itemData = itemFactory.getItemData($scope.item);\n    var retVal = '';\n    if ('SellAmount' in itemData && itemData.SellAmount > 0) {\n\n      var gold = Math.floor(itemData.SellAmount / 10000);\n      if (gold) {\n        retVal += gold + 'gold ';\n      }\n\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\n      if (silver) {\n        retVal += silver + 'silver ';\n      }\n\n      var copper = itemData.SellAmount % 100;\n      if (copper) {\n        retVal += copper + 'copper ';\n      }\n    }\n    return retVal;\n  };\n\n  $scope.getServerStorage = function () {\n    var itemData = itemFactory.getItemData($scope.item);\n    var retVal = '';\n\n    if (itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n      if (itemData && 'AbleWStorage' in itemData) {\n        if (itemData.AbleWStorage == 1) {\n          retVal = 'can server storage';\n        } else if (itemData.AbleWStorage == 0) {\n          if (itemData && 'Reversion' in itemData && itemData.Reversion) {\n            retVal = 'not transferable';\n          }\n        }\n      }\n\n      if (itemData && 'Reversion' in itemData) {\n        if (retVal.length) {\n          retVal += ', ';\n        }\n\n        if (itemData.Reversion == 0) {\n          retVal += 'can trade';\n        } else if (itemData.Reversion == 1) {\n          retVal += 'not tradable ';\n        }\n      }\n    }\n    return retVal;\n  };\n\n  $scope.getMoreInfo = function () {\n    var sealTimes = 0;\n    var numStamps = 0;\n\n    if ($scope.moreInfoLoaded()) {\n      var itemData = itemFactory.getItemData($scope.item);\n\n      if (itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n        if (itemData && 'SealID' in itemData && 'SealCount' in itemData) {\n          sealTimes = itemData.SealCount;\n\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\n          if (sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\n\n            var colName = 'Count0';\n            if ($scope.item.enchantmentNum) {\n              colName = 'Count' + $scope.item.enchantmentNum;\n            }\n\n            if (colName in sealData[0]) {\n              numStamps = sealData[0][colName];\n            }\n          }\n        }\n      } else if (itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\n        if (itemData.Reversion == 2) {\n          if (itemData.CashTradeCount) {\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\n          } else {\n            return 'can server storage, can use warranty';\n          }\n        } else if (itemData.AbleWStorage) {\n          return 'can server storage';\n        } else {\n          return 'not tradable';\n        }\n      }\n    }\n\n    if (sealTimes && numStamps) {\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\n    } else {\n      return '';\n    }\n  };\n\n  $scope.moreInfoLoaded = function () {\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') && dntData.isLoaded('sealcounttable.lzjson');\n  };\n\n  $scope.loadMoreInfo = function () {\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\n    dntData.init('sealcounttable.lzjson', null, $timeout);\n  };\n\n  $scope.handleChange = function () {\n    // console.log('changes');\n    if ($scope.item.itemSource != 'custom') {\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\n    } else {\n      setFullStats();\n      $scope.item = angular.copy($scope.item);\n    }\n    getBuilds();\n  };\n\n  function getJobName() {\n    var allJobs = jobs.getAllJobs();\n    angular.forEach(allJobs, function (job, index) {\n      if (job.id == $scope.item.needJobClass) {\n        $scope.jobName = job.name;\n      }\n    });\n  }\n\n  function init() {\n    getBuilds();\n    $scope.preInitItem = $scope.item;\n    $scope.item = null;\n\n    var anyToLoad = false;\n\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function (columns, fileName) {\n      if (!dntData.isLoaded(fileName)) {\n        dntData.init(fileName, columns, reportProgress, tryInit);\n        anyToLoad = true;\n      }\n    });\n\n    if (!translations.isLoaded()) {\n      translations.init(reportProgress, tryInit);\n      anyToLoad = true;\n    }\n\n    if (!jobs.isLoaded()) {\n      jobs.init(reportProgress, tryInit);\n      anyToLoad = true;\n    }\n\n    if (!anyToLoad) {\n      tryInit();\n    }\n  }\n  init();\n\n  function isLoaded() {\n    var anyDntToLoad = false;\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function (columns, fileName) {\n      if (!dntData.isLoaded(fileName)) {\n        anyDntToLoad = true;\n      }\n    });\n\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\n  }\n\n  function tryInit() {\n    if (isLoaded()) {\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\n      if ($scope.item == null) {\n        return;\n      }\n\n      setFullStats();\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\n      if ($scope.item.itemSource != 'custom') {\n\n        if ($scope.item.typeName == 'skills') {\n          if (!$scope.item.pve || $scope.item.pve != 'pvp') {\n            $scope.item.pve = 'pve';\n          } else {\n            $scope.item.pve = 'pvp';\n          }\n        } else {\n          if ($scope.item.needJobClass > 0) {\n            getJobName();\n          }\n        }\n\n        setFileName();\n      }\n\n      setupTabs();\n    }\n  }\n\n  function setupTabs() {\n    var itemData = itemFactory.getItemData($scope.item);\n    if (itemData.DisjointDrop1 > 0) {\n      $scope.canExtract = true;\n    }\n\n    if ((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\n      $scope.canTransfer = true;\n    }\n\n    if (itemData.Type == 0 || itemData.Type == 1) {\n      $scope.canTune = true;\n    }\n\n    if ($scope.item.setId) {\n      $scope.isInSet = true;\n    }\n\n    if ($scope.item.typeId == 5) {\n      $scope.isPlate = true;\n    }\n\n    if ($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\n      $scope.hasContents = true;\n      $scope.detail = 'contents';\n    } else if ($scope.item.typeName != null) {\n      $scope.canUse = true;\n      $scope.detail = 'use';\n    } else if ($scope.canExtract) {\n      $scope.detail = 'extract';\n    } else if ($scope.canTransfer) {\n      $scope.detail = 'transfer';\n    } else if ($scope.canTune) {\n      $scope.detail = 'tuning';\n    } else if ($scope.isPlate) {\n      $scope.detail = 'plate';\n    } else {\n      $scope.detail = 'attainment';\n    }\n  }\n\n  function setFileName() {\n    if (!$scope.item.fileName) {\n      if ($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\n      }\n    }\n  }\n\n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    $scope.item.fullStats = $scope.item.stats;\n\n    if ($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\n    }\n\n    if ($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\n    }\n  }\n\n  function reportProgress(msg) {\n    // $scope.progress += '|' + msg;\n    // console.log('progress: ' + msg);\n  }\n\n  function getBuilds() {\n    var builds = saveHelper.getSavedItems();\n    $scope.builds = builds;\n  }\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item.js\n// module id = 52\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item.js?");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditCtrl', ['hCodeValues', function (hCodeValues) {\n  'use strict';\n\n  var vm = this;\n\n  if (!vm.item) {\n    return;\n  }\n\n  vm.onUpdateItem = function () {\n    vm.updateItem();\n  };\n}]).directive('dngearsimItemEdit', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n      updateItem: '&updateItem'\n    },\n    controller: 'itemEditCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(123)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit.js\n// module id = 53\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit.js?");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditCustomCtrl', ['hCodeValues', '$scope', function (hCodeValues, $scope) {\n  'use strict';\n\n  if (this.item == null) return;\n  if (this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\n    return;\n  }\n\n  var vm = this;\n\n  this.statMap = {};\n\n  // console.log(vm.item.stats);\n  _.forEach(vm.item.stats, function (stat) {\n    // console.log('got stat', stat.id);\n    vm.statMap[stat.id] = stat.max;\n  });\n\n  for (var statId in hCodeValues.stats) {\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function (newValue, oldValue) {\n\n      if (newValue != oldValue) {\n        // console.log(statId);\n        // console.log('watch got stat value', newValue);\n\n        var anyChange = false;\n        var newStats = [];\n        for (var statId in vm.statMap) {\n\n          if (!vm.statMap[statId] || !Number(vm.statMap[statId])) {\n            _.each(vm.item.stats, function (stat) {\n              if (stat.id == statId) {\n                anyChange = true;\n              }\n            });\n          } else {\n            newStats.push({\n              id: Number(statId),\n              max: Number(vm.statMap[statId])\n            });\n\n            var found = false;\n            _.each(vm.item.stats, function (stat) {\n              if (stat.id == statId) {\n                found = true;\n                // console.log('comparing', stat.max, vm.statMap[statId]);\n                if (!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\n                  anyChange = true;\n                }\n              }\n            });\n\n            if (!found) {\n              anyChange = true;\n            }\n          }\n        }\n\n        if (anyChange) {\n          // console.log('GOT CHANGES!', newStats);\n          vm.item.stats = newStats;\n          vm.onChange();\n        }\n      }\n    });\n  }\n}]).directive('dngearsimItemEditCustom', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange'\n    },\n    controller: 'itemEditCustomCtrl',\n    controllerAs: 'editCtrl',\n    template: __webpack_require__(124)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-custom.js\n// module id = 54\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-custom.js?");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditEnchantmentCtrl', [\"dntData\", \"hCodeValues\", \"items\", \"$timeout\", \"translations\", \"itemColumnsToLoad\", \"itemFactory\", function (dntData, hCodeValues, items, $timeout, translations, itemColumnsToLoad, itemFactory) {\n  'use strict';\n\n  var vm = this;\n\n  if (!vm.item || !vm.item.enchantmentId) {\n    return;\n  }\n\n  if ('itemSource' in this.item) {\n    vm.itemType = items[vm.item.itemSource];\n  }\n\n  if (!vm.itemType) {\n    return;\n  }\n  if (!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\n    return;\n  }\n\n  if (vm.itemType.enchantDnt) {\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\n  }\n  if (vm.itemType.enchantDnt2) {\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\n  }\n\n  if (vm.itemType.petLevelDnt) {\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\n  }\n\n  vm.enchantments = null;\n  vm.enchantment = null;\n  vm.enchantmentAfter = null;\n  vm.enchantmentCost = '';\n  vm.enhancementOptions = [];\n  if (vm.item.enchantmentStats == null) {\n    vm.item.enchantmentStats = [];\n  }\n\n  this.setEnchantment = function () {\n    vm.item.enchantmentStats = [];\n\n    if (vm.enchantments && vm.enchantments.length > 0) {\n\n      if (typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 0;\n        vm.onChange();\n      }\n\n      for (var i = 0; i < vm.enchantments.length; ++i) {\n        if (vm.item.enchantmentNum == getEnchantLevel(i)) {\n          vm.enchantment = vm.enchantments[i];\n\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        } else if (vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\n          vm.enchantmentAfter = vm.enchantments[i];\n          if (vm.enchantmentAfter.NeedCoin < 10000) {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000) / 10 + 'g';\n          } else {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\n          }\n        }\n      }\n    }\n  };\n\n  function getEnchantLevel(num) {\n    if ('petLevelDnt' in vm.itemType) {\n      return vm.enchantments[num].PetLevel;\n    } else {\n      return vm.enchantments[num].EnchantLevel;\n    }\n  }\n\n  this.setPetLevel = function () {\n    vm.item.enchantmentStats = [];\n\n    if (vm.enchantments && vm.enchantments.length > 0) {\n\n      if (typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 6;\n        vm.onChange();\n      }\n\n      for (var i = 0; i < vm.enchantments.length; ++i) {\n        if (vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\n          vm.enchantment = vm.enchantments[i];\n\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n      }\n    }\n  };\n\n  this.isMaxEnchantLevel = function () {\n\n    if (vm.enchantments != null && vm.enchantments.length > 0 && typeof vm.item.enchantmentNum == 'number') {\n\n      for (var i = 0; i < vm.enchantments.length; ++i) {\n        if (vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.setEnchantmentNum = function (enhancementOption) {\n    vm.item.enchantmentNum = enhancementOption;\n    vm.enhancementOptions = [];\n    if ('petLevelDnt' in vm.itemType) {\n      vm.setPetLevel();\n    } else {\n      vm.setEnchantment();\n    }\n    vm.onChange();\n  };\n\n  this.nextEnchantment = function () {\n    for (var i = vm.item.enchantmentNum; i == 0 || vm.enchantments[i - 1]; ++i) {\n      if (i == 0) {\n        vm.enhancementOptions.push({ number: 0 });\n      } else {\n        vm.enhancementOptions.push(vm.getOption(i - 1));\n      }\n    }\n  };\n\n  this.prevEnchantment = function () {\n    vm.enhancementOptions = [];\n    for (var i = vm.item.enchantmentNum; i > 0; --i) {\n      vm.enhancementOptions.push(vm.getOption(i - 1));\n    }\n\n    vm.enhancementOptions.push({ number: 0 });\n  };\n\n  this.getOption = function (enchantmentNum) {\n    return {\n      number: getEnchantLevel(enchantmentNum),\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\n    };\n  };\n\n  this.getEnchantments = function () {\n    if (!vm.enchantments && vm.item && vm.item.enchantmentId) {\n      if (vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\n        if (!vm.enchantments.length && vm.itemType.enchantDnt2) {\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\n        }\n        vm.setEnchantment();\n      }\n      if (vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\n        vm.setPetLevel();\n      }\n    }\n\n    return vm.enchantments;\n  };\n\n  var fileName = 'all-items.lzjson';\n\n  this.showMaterials = function () {\n    dntData.init(fileName, null, function () {}, function () {\n      $timeout(function () {\n\n        if (!vm.enchantmentAfter) {\n          return;\n        }\n\n        vm.materials = [];\n        for (var i = 1; i <= 5; ++i) {\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\n          if (itemId > 0 && itemCount > 0) {\n\n            var items = dntData.find(fileName, 'id', itemId);\n            if (items.length == 0) {\n              vm.materials.push({ num: itemCount, name: 'unknown (' + itemId + ')' });\n            } else {\n              var item = items[0];\n              if (item) {\n                var material = {\n                  item: itemFactory.createBasicItem(item),\n                  num: itemCount\n                };\n                vm.materials.push(material);\n              }\n            }\n          }\n        }\n      });\n    });\n  };\n\n  if (dntData.isLoaded(fileName)) {\n    this.showMaterials();\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}]).directive('dngearsimItemEditEnchantment', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange'\n    },\n    controller: 'itemEditEnchantmentCtrl',\n    controllerAs: 'editCtrl',\n    template: __webpack_require__(125)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-enchantment.js\n// module id = 55\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-enchantment.js?");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditPotentialCtrl', ['dntData', 'items', 'hCodeValues', 'itemColumnsToLoad', function (dntData, items, hCodeValues, itemColumnsToLoad) {\n  'use strict';\n\n  var vm = this;\n\n  this.potentials = null;\n  this.potential = null;\n  this.changingPotentials = false;\n  this.potentialStats = {};\n\n  if (this.item == null) return;\n\n  if ('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n\n  if (!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\n    return;\n  }\n\n  if (vm.itemType.potentialDnt) {\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\n  }\n\n  this.getPotentials = function () {\n    if (!vm.potentials) {\n      if (vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\n\n        if (potentials.length == 1) {\n          vm.potential = potentials[0];\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\n          vm.potentialStats = getPotentialStats(vm.potentials);\n        } else if ('potentialDntEx' in vm.itemType) {\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\n\n          if (potentials.length == 1) {\n            vm.potential = potentials[0];\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\n            vm.potentialStats = getPotentialStats(vm.potentials);\n          }\n        }\n      }\n    }\n\n    return vm.potentials;\n  };\n\n  this.nextPotential = function () {\n    for (var i = 0; i < vm.potentials.length; ++i) {\n      if (vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i + 1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  };\n\n  this.prevPotential = function () {\n    for (var i = 0; i < vm.potentials.length; ++i) {\n      if (vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i - 1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  };\n\n  this.changePotential = function (pid) {\n    for (var i = 0; i < vm.potentials.length; ++i) {\n      if (pid == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i];\n        vm.item.pid = vm.potential.id;\n        vm.changingPotentials = false;\n        vm.onChange();\n        return;\n      }\n    }\n  };\n\n  this.isFirstPotential = function () {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\n  };\n\n  this.isLastPotential = function () {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length - 1].id;\n  };\n\n  function getPotentialStats() {\n    var pStats = {};\n    var emptyStatId = null;\n\n    if (vm.potentials != null) {\n      angular.forEach(vm.potentials, function (p, index) {\n        var stats = [];\n        angular.forEach(hCodeValues.getStats(p), function (stat, sIndex) {\n          if (!hCodeValues.stats[stat.id].hide) {\n            stats.push(stat);\n          }\n        });\n\n        if (stats.length > 0) {\n          pStats[p.id] = stats;\n        } else if (!emptyStatId) {\n          pStats[p.id] = [];\n          emptyStatId = p.id;\n        }\n      });\n    }\n\n    return pStats;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}]).directive('dngearsimItemEditPotential', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange'\n    },\n    controller: 'itemEditPotentialCtrl',\n    controllerAs: 'editCtrl',\n    template: __webpack_require__(126)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-potential.js\n// module id = 56\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-potential.js?");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditSkillCtrl', ['$timeout', 'dntData', 'statHelper', function ($timeout, dntData, statHelper) {\n  'use strict';\n\n  if (this.item == null) return;\n  if (this.item.itemSource != 'skills') {\n    return;\n  }\n\n  if (!this.item.enchantmentNum) {\n    this.item.enchantmentNum = 1;\n  }\n\n  var vm = this;\n\n  function getDntFile() {\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\n  }\n\n  this.initSkills = function () {\n    var dntFile = getDntFile();\n    dntData.init(dntFile, null, reportProgress, function () {\n      $timeout(function () {\n        vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\n      });\n    });\n  };\n\n  this.nextEnchantment = function () {\n    if (this.skillData && this.item.enchantmentNum < this.skillData.length) {\n      this.item.enchantmentNum++;\n      vm.onChange();\n    }\n  };\n\n  this.isMaxSkillLevel = function () {\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\n  };\n\n  this.prevEnchantment = function () {\n    if (this.item.enchantmentNum > 0) {\n      this.item.enchantmentNum--;\n    } else {\n      this.item.enchantmentNum = 0;\n    }\n\n    vm.onChange();\n  };\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n  dntData.init(getDntFile(), null, null, vm.initSkills);\n}]).directive('dngearsimItemEditSkill', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange'\n    },\n    controller: 'itemEditSkillCtrl',\n    controllerAs: 'editCtrl',\n    template: __webpack_require__(127)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-skill.js\n// module id = 57\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-skill.js?");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditSparkCtrl', ['dntData', 'hCodeValues', 'items', 'itemColumnsToLoad', function (dntData, hCodeValues, items, itemColumnsToLoad) {\n  'use strict';\n\n  var vm = this;\n\n  if (this.item == null) return;\n  if ('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n\n  if (!vm.itemType || !vm.itemType.sparkDnt) {\n    return;\n  }\n\n  if (vm.itemType.sparkDnt) {\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\n  }\n\n  this.sparks = null;\n\n  this.nextSpark = function () {\n    var index = getPotentialIndex();\n    index++;\n    if (index >= vm.sparks.length) {\n      index = 0;\n    }\n    var spark = vm.sparks[index];\n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  };\n\n  this.isMoreSparks = function () {\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length - 1;\n  };\n\n  this.isFirstSpark = function () {\n    return getPotentialIndex() == 0;\n  };\n\n  this.prevSpark = function () {\n    var index = getPotentialIndex();\n    index--;\n    if (index < 0) {\n      index = vm.sparks.length - 1;\n    }\n    var spark = vm.sparks[index];\n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  };\n\n  this.removeSpark = function () {\n    vm.item.sparkId = null;\n    vm.item.sparkStats = null;\n    vm.onChange();\n  };\n\n  this.getSparks = function () {\n    if (vm.item == null || vm.itemType == null) return null;\n    if (vm.sparks == null) {\n      var sid = vm.item.sparkTypeId;\n      if (sid) {\n        if (dntData.isLoaded(vm.itemType.sparkDnt)) {\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\n        }\n      }\n    }\n\n    return vm.sparks;\n  };\n\n  function getPotentialIndex() {\n    var potentialIndex = -1;\n    if (vm.item.sparkId > 0) {\n      angular.forEach(vm.sparks, function (spark, index) {\n        if (spark.id == vm.item.sparkId) {\n          potentialIndex = index;\n          return;\n        }\n      });\n    }\n\n    return potentialIndex;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}]).directive('dngearsimItemEditSpark', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange'\n    },\n    controller: 'itemEditSparkCtrl',\n    controllerAs: 'editCtrl',\n    template: __webpack_require__(128)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-spark.js\n// module id = 58\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-spark.js?");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemEditTalismanCtrl', [function () {\n  'use strict';\n\n  if (this.item == null) return;\n  if (this.item.itemSource != 'tman') {\n    return;\n  }\n\n  this.setTalisman = function (amount) {\n    if (amount == 0) {\n      this.item.enchantmentNum = null;\n      this.item.enchantmentStats = [];\n    } else {\n      this.item.enchantmentNum = amount;\n\n      var extraStats = [];\n      angular.forEach(this.item.stats, function (stat, index) {\n        extraStats.push({ id: stat.id, max: stat.max * (amount / 100) });\n      });\n\n      this.item.enchantmentStats = extraStats;\n    }\n    this.onChange();\n  };\n}]).directive('dngearsimItemEditTalisman', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange'\n    },\n    controller: 'itemEditTalismanCtrl',\n    controllerAs: 'editCtrl',\n    template: __webpack_require__(129)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-talisman.js\n// module id = 59\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-talisman.js?");

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewAttainmentCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', 'translations', function ($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.attainments = [];\n\n  var files = ['itemgaintable.lzjson', 'itemgaintable_dragonjewel.lzjson', 'itemgaintable_enchant.lzjson', 'itemgaintable_etc.lzjson', 'itemgaintable_reboot.lzjson', 'itemgaintable_talisman.lzjson'];\n\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.init();\n      });\n    });\n  }\n\n  this.init = function () {\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\n        return;\n      }\n    }\n\n    vm.attainments = [];\n    files.forEach(function (file) {\n      var attainments = dntData.find(file, 'id', vm.item.id);\n      if (attainments.length) {\n        attainments.forEach(function (attainment) {\n          var text = attainment.ItemGainText;\n          if (text) {\n            var texts = text.split('{');\n            texts.forEach(function (singleText) {\n              var splitVal = singleText.split('}');\n              if (splitVal.length) {\n                if (splitVal[0].indexOf('#') == -1) {\n                  vm.attainments.push(translations.translate(splitVal[0]));\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n}]).directive('dngearsimItemViewAttainment', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewAttainmentCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(130)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-attainment.js\n// module id = 60\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-attainment.js?");

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewBoxCtrl', ['$timeout', 'dntData', 'itemFactory', 'region', function ($timeout, dntData, itemFactory, region) {\n  'use strict';\n\n  if (this.item == null) return;\n  if (this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\n    console.log('not box item type ' + this.item.typeId);\n    return;\n  }\n\n  var vm = this;\n\n  var pouchFileNames = ['itemdroptable.lzjson', 'itemdroptable_abyss.lzjson', 'itemdroptable_apprentice.lzjson', 'itemdroptable_cook.lzjson', 'itemdroptable_darklair.lzjson', 'itemdroptable_dimension.lzjson', 'itemdroptable_disjoint.lzjson', 'itemdroptable_dnexpedition.lzjson', 'itemdroptable_event.lzjson', 'itemdroptable_farm.lzjson', 'itemdroptable_fishing.lzjson', 'itemdroptable_guildwar.lzjson', 'itemdroptable_item.lzjson', 'itemdroptable_monsteritem.lzjson', 'itemdroptable_propdrop.lzjson', 'itemdroptable_pvp.lzjson', 'itemdroptable_randomcompound.lzjson', 'itemdroptable_stageclear.lzjson', 'itemdroptable_themepark.lzjson', 'itemdroptable_union.lzjson'];\n\n  var allItemFileName = 'all-items.lzjson';\n  var charmItemtable = 'charmitemtable.lzjson';\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\n  this.usedFiles = {};\n  this.lookupId = null;\n\n  var files;\n  if (this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\n  } else if (this.item.typeId == 8) {\n    files = [allItemFileName].concat(pouchFileNames);\n  }\n\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initBoxContents();\n      });\n    });\n  }\n\n  this.initBoxContents = function () {\n    // console.log('init contents', this.item.fileName);\n\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\n    if (datas.length > 0) {\n      var d = datas[0];\n      this.lookupId = d.TypeParam1;\n      vm.items = [];\n\n      if (vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\n        vm.getCharmItems(d.TypeParam1);\n      } else if (vm.item.typeId == 8) {\n        vm.getPouchItems(d.TypeParam1);\n      }\n    }\n  };\n\n  this.getPouchItems = function (boxType) {\n    for (var f = 0; f < pouchFileNames.length; ++f) {\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\n    }\n  };\n\n  this.getPouchItemsFromFile = function (boxType, pouchFileName) {\n\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\n    if (pouchData.length == 0) {} else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if (pouchItem) {\n          if (isGroup) {\n            vm.getPouchItems(pouchItem, pouchFileName);\n          } else {\n            // console.log('adding item ' + pouchItem);\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if (itemds.length > 0) {\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\n              // console.log('found item ' + basicItem.name);\n\n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: basicItem\n              });\n              this.usedFiles[pouchFileName] = true;\n            }\n          }\n        }\n      } while (pouchItem);\n    }\n  };\n\n  this.getCharmItems = function (boxType) {\n    var charmFiles = [charmItemtable, commonCharmItemtable];\n    for (var i = 0; i < charmFiles.length; ++i) {\n\n      var charmData = dntData.getData(charmFiles[i]);\n      // console.log('box: ' + boxType, charmData);\n\n      for (var c = 0; c < charmData.length; ++c) {\n        var cd = charmData[c];\n        if (cd.CharmNum == boxType && cd.Look) {\n\n          if (cd.CharmType) {\n            this.getCharmItems(cd.ItemID);\n          } else {\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\n            if (itemds.length > 0) {\n              vm.items.push({\n                count: cd.Count,\n                gold: cd.Gold,\n                item: itemFactory.createBasicItem(itemds[0])\n              });\n              this.usedFiles[charmFiles[i]] = true;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  this.getFileLink = function (fileName) {\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\n  };\n}]).directive('dngearsimItemViewBox', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewBoxCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(131)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-box.js\n// module id = 61\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-box.js?");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewCraftCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', 'translations', function ($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.crafts = [];\n\n  var cFiles = ['itemcompoundtable.lzjson', 'itemcompoundtable_custom.lzjson', 'itemcompoundtable_glyph.lzjson', 'itemcompoundtable_glyph95.lzjson', 'itemcompoundtable_jewel.lzjson', 'itemcompoundtable_renewal.lzjson', 'itemcompoundtable_set.lzjson'];\n\n  var dropFile = 'itemdroptable.lzjson';\n\n  var allItemFileName = 'all-items.lzjson';\n\n  var files = cFiles.concat([allItemFileName, dropFile]);\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initCrafts();\n      });\n    });\n  }\n\n  this.initCrafts = function () {\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\n        return;\n      }\n    }\n\n    vm.crafts = [];\n    for (var i = 0; i < cFiles.length; ++i) {\n      vm.initCraft(cFiles[i], vm.item.id);\n    }\n\n    for (var di = 1; di <= 20; ++di) {\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\n      if (drops.length) {\n        drops.forEach(function (drop) {\n          for (var i = 0; i < cFiles.length; ++i) {\n            vm.initCraft(cFiles[i], drop.id);\n          }\n        });\n      }\n    }\n\n    var newCrafts = [];\n    for (var i = 0; i < vm.crafts.length; ++i) {\n      var found = false;\n      for (var j = 0; j < newCrafts.length; ++j) {\n        if (vm.crafts[i].gold == newCrafts[j].gold && vm.crafts[i].items.length == newCrafts[j].items.length) {\n\n          found = true;\n          for (var k = 0; k < vm.crafts[i].items.length; ++k) {\n            if (vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id || vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\n              found = false;\n            }\n          }\n        }\n      }\n\n      if (!found) {\n        newCrafts.push(vm.crafts[i]);\n      }\n    }\n\n    vm.crafts = newCrafts;\n  };\n\n  this.initCraft = function (fileName, id) {\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\n\n    for (var i = 0; i < fCrafts.length; ++i) {\n      var c = fCrafts[i];\n\n      var craft = {\n        id: c.id,\n        fileName: fileName.replace('.lzjson', ''),\n        gold: c.Cost / 100 / 100,\n        items: []\n      };\n\n      var j = 0;\n      for (;;) {\n        j++;\n        var itemColName = 'Slot' + j + 'Id';\n        var qtyColName = 'Slot' + j + 'Num';\n        if (!(itemColName in c)) {\n          break;\n        }\n\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\n        if (items.length > 0) {\n          craft.items.push({\n            item: itemFactory.createBasicItem(items[0]),\n            num: c[qtyColName]\n          });\n        }\n      }\n\n      vm.crafts.push(craft);\n    }\n  };\n}]).directive('dngearsimItemViewCraft', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewCraftCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(132)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-craft.js\n// module id = 62\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-craft.js?");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewExtractionCtrl', ['$timeout', 'dntData', 'itemFactory', 'items', function ($timeout, dntData, itemFactory, items) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n\n  var files = [extractFileName, allItemFileName];\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initExtract();\n      });\n    });\n  }\n\n  this.initExtract = function () {\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var disjoint;\n    var d = itemFactory.getItemData(vm.item);\n    if (d && d.DisjointDrop1 > 0) {\n      disjoint = d.DisjointDrop1;\n    }\n\n    var itemType = items[vm.item.itemSource];\n    if (itemType && d.EnchantID) {\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\n      if (!enchantments.length && itemType.enchantDnt2) {\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\n      }\n\n      for (var i = 0; i < enchantments.length; ++i) {\n        if (enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\n          disjoint = enchantments[i].DisjointDrop;\n          break;\n        }\n      }\n    }\n\n    vm.items = [];\n    if (disjoint) {\n      vm.getItems(disjoint);\n    }\n  };\n\n  this.getGold = function () {\n    var d = itemFactory.getItemData(this.item);\n    return Number(d.Disjointamount) / 100 / 100;\n  };\n\n  this.getItems = function (disjoint) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\n    if (pouchData.length == 0) {} else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 1;\n      while ('Item' + itemIndex + 'Index' in pouchData[0]) {\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if (pouchItem) {\n          if (isGroup) {\n            vm.getItems(pouchItem);\n          } else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if (itemds.length > 0) {\n              //console.log('found item ');\n\n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0])\n              });\n            }\n          }\n        }\n        itemIndex++;\n      }\n    }\n  };\n}]).directive('dngearsimItemViewExtraction', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewExtractionCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(133)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-extraction.js\n// module id = 63\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-extraction.js?");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewPlateCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', 'translations', function ($timeout, dntData, itemFactory) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.items = [];\n\n  var plateFile = 'platetable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n\n  var allFiles = [plateFile, allItemFileName];\n  for (var i = 0; i < allFiles.length; ++i) {\n    dntData.init(allFiles[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initSets();\n      });\n    });\n  }\n\n  this.initSets = function () {\n    for (var i = 0; i < allFiles.length; ++i) {\n      if (!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n\n    vm.items = [];\n    getPlates();\n  };\n\n  function getPlates() {\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\n    for (var r = 0; r < rows.length; ++r) {\n      var row = rows[r];\n      var col = 0;\n      for (;;) {\n        col++;\n        var colName = 'CompoundTableIndex' + col;\n        if (!(colName in row)) {\n          break;\n        }\n\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\n        if (itemData.length > 0) {\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\n        }\n      }\n    }\n  }\n}]).directive('dngearsimItemViewPlate', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewPlateCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(134)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-plate.js\n// module id = 64\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-plate.js?");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewSetCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', 'translations', function ($timeout, dntData, itemFactory) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.items = [];\n\n  var files = ['partstable.optimised.json', 'partstable_cash.optimised.json', 'partstable_common2014.optimised.json', 'partstable_common2015.optimised.json', 'partstable_common2016.lzjson', 'partstable_commoncash.lzjson', 'partstable_equipment.optimised.json', 'partstable_event.lzjson', 'partstable_guild.lzjson', 'partstable_pvp.optimised.json', 'partstable_reboot.optimised.json', 'partstable_skilllevelup.lzjson', 'weapontable.optimised.json', 'weapontable_cash.optimised.json', 'weapontable_common2014.optimised.json', 'weapontable_common2015.optimised.json', 'weapontable_common2016.lzjson', 'weapontable_commoncash.lzjson', 'weapontable_equipment.optimised.json', 'weapontable_event.lzjson', 'weapontable_guild.lzjson', 'weapontable_pvp.optimised.json', 'weapontable_reboot.optimised.json'];\n\n  var allItemFileName = 'all-items.lzjson';\n\n  var allFiles = files.concat([allItemFileName]);\n  for (var i = 0; i < allFiles.length; ++i) {\n    dntData.init(allFiles[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initSets();\n      });\n    });\n  }\n\n  this.initSets = function () {\n    for (var i = 0; i < allFiles.length; ++i) {\n      if (!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n\n    vm.items = [];\n    for (var i = 0; i < files.length; ++i) {\n      getSetItems(files[i]);\n    }\n  };\n\n  function getSetItems(fileName) {\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\n    for (var r = 0; r < rows.length; ++r) {\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\n      if (itemData.length > 0) {\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\n      }\n    }\n  }\n}]).directive('dngearsimItemViewSet', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewSetCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(135)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-set.js\n// module id = 65\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-set.js?");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewShopCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', 'translations', function ($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.shopCosts = [];\n\n  var cShopFileName = 'combinedshoptable.lzjson';\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\n  // var shopFileName = 'shoptable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n\n  var files = [cCashShopFileName, cSysShopFileName, cShopFileName, allItemFileName];\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initShops();\n      });\n    });\n  }\n\n  this.initShops = function () {\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    vm.shopCosts = [];\n    getCombinedCosts(cShopFileName);\n    getCombinedCosts(cSysShopFileName);\n    getCombinedCosts(cCashShopFileName);\n    // getShopCosts();\n\n    var newShopCosts = [];\n    for (var i = 0; i < vm.shopCosts.length; ++i) {\n      var found = false;\n      for (var j = 0; j < newShopCosts.length; ++j) {\n        if (vm.shopCosts[i].tabName == newShopCosts[j].tabName && vm.shopCosts[i].gold == newShopCosts[j].gold && vm.shopCosts[i].item1.id == newShopCosts[j].item1.id && vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id && vm.shopCosts[i].item2.id == newShopCosts[j].item2.id && vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        newShopCosts.push(vm.shopCosts[i]);\n      }\n    }\n\n    vm.shopCosts = newShopCosts;\n  };\n\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\n\n  function getCombinedCosts(fileName) {\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\n\n    for (var i = 0; i < shops.length; ++i) {\n      var s = shops[i];\n\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\n\n      var shopCost = {\n        shopName: s.ShopID,\n        tabName: translations.translate(s.TabNameID),\n        gold: 0,\n        nightmarePoints: 0,\n        dungeonPoints: 0,\n        nestPoints: 0,\n        ladderPoints: 0,\n        item1: itemFactory.createBasicItem(item1s[0]),\n        item2: itemFactory.createBasicItem(item2s[0]),\n        numItem1: 0,\n        numItem2: 0\n      };\n\n      if (shopCost.shopName in hCodeValues.shopNames) {\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\n      }\n\n      if (s.PurchaseType1 == 1) {\n        shopCost.gold += s.PurchaseItemValue1;\n      } else if (s.PurchaseType1 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue1;\n      } else if (s.PurchaseType1 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\n      } else if (s.PurchaseType1 == 13) {\n        shopCost.nestPoints += s.PurchaseItemValue1;\n      } else if (s.PurchaseType1 == 14) {\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\n      } else {\n        shopCost.numItem1 = s.PurchaseItemValue1;\n        shopCost.pointsId1 = s.PurchaseType1;\n      }\n\n      if (s.PurchaseType2 == 1) {\n        shopCost.gold += s.PurchaseItemValue2;\n      } else if (s.PurchaseType2 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue2;\n      } else if (s.PurchaseType2 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\n      } else if (s.PurchaseType1 == 13) {\n        shopCost.nestPoints += s.PurchaseItemValue2;\n      } else if (s.PurchaseType1 == 14) {\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\n      } else {\n        shopCost.numItem2 = s.PurchaseItemValue2;\n        shopCost.pointsId2 = s.PurchaseType2;\n      }\n\n      shopCost.gold = shopCost.gold / 100 / 100;\n\n      vm.shopCosts.push(shopCost);\n    }\n  }\n}]).directive('dngearsimItemViewShop', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewShopCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(136)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-shop.js\n// module id = 66\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-shop.js?");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewTransferCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', function ($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.matchingTransfers = [];\n\n  var transferFileName = 'enchanttransfertable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\n\n  var files = [transferFileName, allItemFileName, transferItemsFileName];\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initTransfers();\n      });\n    });\n  }\n\n  this.initTransfers = function () {\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.matchingTransfers = [];\n\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\n    if (transferItem && transferItem.length > 0) {\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\n\n      for (var i = 0; i < transfers.length; ++i) {\n        var t = transfers[i];\n        if (t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\n\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\n\n          vm.matchingTransfers.push({\n            level: t.ResultLevel,\n            enchantmentNum: t.ResultEnchantLevel,\n            gold: t.NeedCoin / 100 / 100,\n            rank: hCodeValues.rankNames[t.ResultRank],\n            numItem1: t.NeedItemCount1,\n            item1: itemFactory.createBasicItem(item1s[0]),\n            numItem2: t.NeedItemCount2,\n            item2: itemFactory.createBasicItem(item2s[0])\n          });\n        }\n      }\n    }\n  };\n}]).directive('dngearsimItemViewTransfer', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewTransferCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(137)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-transfer.js\n// module id = 67\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-transfer.js?");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('itemViewTuningCtrl', ['$timeout', 'dntData', 'itemFactory', 'hCodeValues', function ($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n\n  if (this.item == null) return;\n\n  var vm = this;\n  vm.rewardItems = [];\n\n  var allItemFileName = 'all-items.lzjson';\n  var changeFileName = 'itemchangetable.lzjson';\n\n  var files = [allItemFileName, changeFileName];\n  for (var i = 0; i < files.length; ++i) {\n    dntData.init(files[i], null, function () {}, function () {\n      $timeout(function () {\n        vm.initTransfers();\n      });\n    });\n  }\n\n  this.initTransfers = function () {\n    for (var i = 0; i < files.length; ++i) {\n      if (!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.rewardItems = [];\n\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\n    if (changes && changes.length > 0) {\n      for (var i = 0; i < changes.length; ++i) {\n        var c = changes[i];\n        if (c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\n\n          vm.rewardItems.push({\n            rewardItem: itemFactory.createBasicItem(rItem[0])\n          });\n        }\n      }\n    }\n  };\n}]).directive('dngearsimItemViewTuning', function () {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'itemViewTuningCtrl',\n    controllerAs: 'ctrl',\n    template: __webpack_require__(138)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-tuning.js\n// module id = 68\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-tuning.js?");

/***/ }),
/* 69 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-loading>\\r\\n<div class=row ng-if=\\\"item != null\\\">\\r\\n  <div class=\\\"col-xs-12 col-md-5\\\">\\r\\n    <h4>\\r\\n      <dnsim-item-link item=item></dnsim-item-link><br/>\\r\\n\\r\\n      <small>\\r\\n      <span ng-if=\\\"::item.rank && item.rank.id > 0\\\" class={{::item.rank.name}}-grade>\\r\\n      {{item.rank.name | translate}}\\r\\n      </span>\\r\\n      <span ng-if=::jobName>\\r\\n      {{::jobName.toLowerCase()}}\\r\\n      </span>\\r\\n      {{::getExchangeType()}}\\r\\n      <br/>\\r\\n\\r\\n      <span ng-if=\\\"getSellingPrice().length && moreInfoLoaded()\\\">\\r\\n      selling price: {{getSellingPrice()}}\\r\\n      <br/>\\r\\n      </span>\\r\\n      <span ng-if=\\\"getServerStorage().length && moreInfoLoaded()\\\">\\r\\n      {{getServerStorage()}}\\r\\n      <br/>\\r\\n      </span>\\r\\n      <span ng-if=\\\"getMoreInfo().length && moreInfoLoaded()\\\">\\r\\n      {{getMoreInfo()}}\\r\\n      <br/>\\r\\n      </span>\\r\\n      <span ng-if=\\\"item.typeName != 'custom' && !moreInfoLoaded() && item.fileName\\\">\\r\\n        <button class=\\\"btn btn-link\\\" ng-click=loadMoreInfo()>\\r\\n          &raquo;more info\\r\\n        </button>\\r\\n        <br/>\\r\\n      </span>\\r\\n      <span ng-if=\\\"(item.offensiveGemSlots > 0 || item.increasingGemSlots > 0) && moreInfoLoaded()\\\">\\r\\n        gem slots:\\r\\n        <span ng-if=\\\"::item.offensiveGemSlots > 0\\\">\\r\\n          {{::item.offensiveGemSlots}} {{'offensive' | translate}}\\r\\n          <span ng-if=\\\"::item.increasingGemSlots > 0\\\"> | </span>\\r\\n        </span>\\r\\n        <span ng-if=\\\"::item.increasingGemSlots > 0\\\">{{::item.increasingGemSlots}} {{'increasing' | translate}}</span>\\r\\n      </span>\\r\\n      </small>\\r\\n    </h4>\\r\\n    <small class=hidden-xs ng-if=\\\"::item.typeName != 'custom'\\\">\\r\\n      {{::item.fileName}} {{::item.typeName}}: {{::item.itemSource}} / {{::item.id}} / {{::item.pid}}\\r\\n      <span ng-if=\\\"::item.potentialRatio != null\\\">\\r\\n        <br/>\\r\\n        potential&nbsp;ratio:&nbsp;{{::item.potentialRatio}}\\r\\n      </span>\\r\\n    </small>\\r\\n    <dngearsim-item-edit-potential item=::item on-change=handleChange()>\\r\\n    </dngearsim-item-edit-potential>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-7\\\">\\r\\n    <div class=row ng-if=\\\"item.typeName != 'custom' && item.typeName != 'skills' && item.typeName != 'talisman'\\\">\\r\\n      <!-- virtical layout -->\\r\\n      <div class=\\\"col-xs-12 col-md-5\\\" ng-if=\\\"::item.stats != null && item.stats.length > 0\\\">\\r\\n        <label>stats</label><br/>\\r\\n        <div style=float:left;width:140px>\\r\\n          <span dnsim-stats stats=::item.stats filter=\\\"'dps'\\\" separator=\\\"'<br />'\\\"/>\\r\\n        </div>\\r\\n        <div style=float:left>\\r\\n          <span dnsim-stats stats=::item.stats filter=\\\"'def'\\\" separator=\\\"'<br />'\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-12 col-md-4\\\" ng-if=\\\"item.enchantmentStats && item.enchantmentStats.length > 0\\\">\\r\\n        <label>+{{item.enchantmentNum}} stats</label><br/>\\r\\n        <div dnsim-stats stats=item.enchantmentStats>\\r\\n        </div>\\r\\n        <br/>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-12 col-md-3\\\" ng-if=\\\"::item.setStats != null && item.setStats.length > 0\\\">\\r\\n        <label>set stats</label><br/>\\r\\n        <div dnsim-stats stats=::item.setStats num-in-set=getNumInSet()></div>\\r\\n        <br/>\\r\\n      </div>\\r\\n    </div>\\r\\n    <dngearsim-item-edit item=item on-change=handleChange() update-item=handleChange()>\\r\\n    </dngearsim-item-edit>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"item != null\\\">\\r\\n  <div class=col-xs-12>\\r\\n    {{::getDescription()}}\\r\\n  </div>\\r\\n</div>\\r\\n<div class=col-xs-12>\\r\\n  <br/>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"item != null\\\">\\r\\n  <div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n    |\\r\\n    <span ng-if=hasContents>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('contents')\\\" ng-disabled=\\\"detail == 'contents'\\\">contents</button> |\\r\\n    </span>\\r\\n    <span ng-if=canUse>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('use')\\\" ng-disabled=\\\"detail == 'use'\\\">use</button> |\\r\\n    </span>\\r\\n    <span ng-if=isPlate>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('plate')\\\" ng-disabled=\\\"detail == 'plate'\\\">plate</button> |\\r\\n    </span>\\r\\n    <span ng-if=canExtract>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('extract')\\\" ng-disabled=\\\"detail == 'extract'\\\">extract</button> |\\r\\n    </span>\\r\\n    <span ng-if=canTransfer>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('transfer')\\\" ng-disabled=\\\"detail == 'transfer'\\\">transfer</button> |\\r\\n    </span>\\r\\n    <span ng-if=canTune>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('tuning')\\\" ng-disabled=\\\"detail == 'tuning'\\\">convert</button> |\\r\\n    </span>\\r\\n    <span ng-if=isInSet>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('set')\\\" ng-disabled=\\\"detail == 'set'\\\">set</button> |\\r\\n    </span>\\r\\n    <span>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"setDetail('attainment')\\\" ng-disabled=\\\"detail == 'attainment'\\\">attainment</button> |\\r\\n    </span>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'extract' && item != null\\\">\\r\\n  <dngearsim-item-view-extraction item=item>\\r\\n  </dngearsim-item-view-extraction>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'contents' && item != null\\\">\\r\\n  <dngearsim-item-view-box item=item>\\r\\n  </dngearsim-item-view-box>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'use'\\\">\\r\\n    <dngearsim-group-assignment item=item ng-if=\\\"item != null && getBuildName()\\\" group-name=getBuildName() on-change=handleChange()>\\r\\n    </dngearsim-group-assignment>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'transfer' && item != null\\\">\\r\\n  <dngearsim-item-view-transfer item=item>\\r\\n  </dngearsim-item-view-transfer>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'tuning' && item != null\\\">\\r\\n  <dngearsim-item-view-tuning item=item>\\r\\n  </dngearsim-item-view-tuning>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'attainment' && item != null\\\">\\r\\n  <dngearsim-item-view-attainment item=item>\\r\\n  </dngearsim-item-view-attainment>\\r\\n  <dngearsim-item-view-shop item=item>\\r\\n  </dngearsim-item-view-shop>\\r\\n  <dngearsim-item-view-craft item=item>\\r\\n  </dngearsim-item-view-craft>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'set' && item != null\\\">\\r\\n  <dngearsim-item-view-set item=::item>\\r\\n  </dngearsim-item-view-set>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"detail == 'plate' && item != null\\\">\\r\\n  <dngearsim-item-view-plate item=item>\\r\\n  </dngearsim-item-view-plate>\\r\\n</div>\\r\\n</dnsim-loading>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item.html\n// module id = 69\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item.html?");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar LZString = __webpack_require__(13);\n\nangular.module('dnsim').controller('ExportCtrl', ['$scope', '$window', 'saveHelper', function ($scope, $window, saveHelper) {\n  'use strict';\n\n  document.body.className = 'default-back';\n  $window.document.title = 'dngearsim | EXPORT';\n\n  var rawSavedData = saveHelper.getSavedItems();\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\n\n  $scope.save = function () {\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\n  };\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/export.js\n// module id = 70\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/export.js?");

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('HeaderCtrl', [function () {\n  'use strict';\n\n  var vm = this;\n}]).directive('dngearsimHeader', function () {\n  return {\n    template: __webpack_require__(140)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/header.js\n// module id = 71\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/header.js?");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('NavCtrl', ['$scope', '$location', 'translations', 'region', 'itemCategory', 'saveHelper', function ($scope, $location, translations, region, itemCategory, saveHelper) {\n  'use strict';\n\n  try {\n    var noLocationMenu = [];\n    var normalMenu = [{ path: 'builds', name: 'builds', icon: 'menu-hamburger' }, { path: 'search', name: 'search', icon: 'search' }];\n\n    var buildAction = { path: 'build', name: 'build' };\n\n    var withBuildMenu = [{ path: 'builds', name: 'builds', icon: 'menu-hamburger' }, { path: 'search', name: 'search', icon: 'search' }, buildAction];\n\n    region.init();\n\n    $scope.isSearch = function () {\n      return $location.path().indexOf('/search') == 0;\n    };\n\n    $scope.isLoading = function () {\n      return translations.startedLoading && !translations.isLoaded() && region.tlocation != null && region.tlocation.url != '' && !$scope.noRegion();\n    };\n\n    $scope.noRegion = function () {\n      return region.dntLocation == null;\n    };\n\n    $scope.isHttpOnly = function () {\n      return location.protocol != 'https:' && location.hostname != 'localhost';\n    };\n\n    $scope.getActions = function () {\n      try {\n        var menu = null;\n\n        var currentBuild = saveHelper.getCurrentBuild();\n        if (currentBuild) {\n          if (!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\n            // console.log('loading saved items');\n            $scope.savedItems = saveHelper.getSavedItems();\n          }\n\n          if (!(currentBuild in $scope.savedItems)) {\n            currentBuild = null;\n          }\n        }\n\n        if (region.dntLocation != null && region.dntLocation.url == '') {\n          menu = noLocationMenu;\n        } else if (region.tlocation != null && region.tlocation.url == '') {\n          menu = noLocationMenu;\n        } else if (currentBuild && currentBuild != 'null') {\n          menu = withBuildMenu;\n          buildAction.path = 'build?buildName=' + currentBuild;\n          buildAction.name = currentBuild;\n          if (currentBuild in $scope.savedItems) {\n            buildAction.build = $scope.savedItems[currentBuild];\n          }\n        } else if ($location.path() == '/view-group' || region.dntLocation == null) {\n          menu = normalMenu;\n        } else {\n          menu = normalMenu;\n        }\n\n        var path = $location.path;\n        angular.forEach(menu, function (value, key) {\n          delete value.extraCss;\n          if (path && path.length == 1) {\n            if (value.path.length == 1) {\n              value.extraCss = 'active';\n            }\n          } else if (value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\n            if (value.path != 'builds' || path == '/builds') {\n              value.extraCss = 'active';\n            }\n          }\n        });\n\n        return menu;\n      } catch (ex) {\n        $scope.simError = ex.message;\n        console.error(ex);\n      }\n    };\n  } catch (ex) {\n    $scope.simError = ex.message;\n    console.error(ex);\n  }\n}]).directive('dngearsimNav', function () {\n  return {\n    template: __webpack_require__(141)\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/nav.js\n// module id = 72\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/nav.js?");

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('SetupCtrl', ['$scope', '$window', '$route', '$timeout', 'translations', 'dntInit', 'dntReset', 'region', function ($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\n  'use strict';\n\n  document.body.className = 'default-back';\n  $window.document.title = 'dngearsim | SETUP';\n\n  $scope.advancedSetup = false;\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\n  $scope.translationResults = [];\n  $scope.hostedFiles = region.hostedFiles;\n\n  var noLocation = '';\n  var sessionLocation = region.alternativeFiles.url;\n  if (sessionLocation == null) {\n    sessionLocation = noLocation;\n  }\n\n  $scope.location = sessionLocation;\n  if ($scope.location == noLocation) {\n    $scope.testResults = ['No location set'];\n  } else {\n    $scope.testResults = ['Using location ' + $scope.location];\n  }\n\n  $scope.setLocation = function (url) {\n    $scope.location = url;\n    $scope.isLoading = true;\n    $scope.saveLocation();\n    dntReset();\n\n    $scope.translationResults = [];\n    var existingFile = localStorage.getItem('UIStrings_file');\n    if (existingFile == null || existingFile.indexOf(url) == -1) {\n      sessionStorage.removeItem('UIStrings');\n    }\n    translations.reset();\n    translations.location = url;\n    translations.init(progressTranslations, translationsStatus);\n  };\n\n  $scope.resetSessionData = function () {\n    $scope.testResults = ['session data reset.. reloading page'];\n    region.tlocation = null;\n    region.dntLocation = null;\n    translations.reset();\n    sessionStorage.clear();\n    localStorage.clear();\n    this.saveLocation();\n    $timeout(function () {\n      location.hash = '';\n      location.reload(true);\n    });\n  };\n\n  $scope.loadUiString = function () {\n    $scope.translationResults = [];\n    sessionStorage.removeItem('UIStrings');\n    dntReset();\n    translations.reset();\n    translations.location = region.tlocation.url;\n    translations.region = region.tlocation.region;\n    translations.init(progressTranslations, translationsStatus);\n  };\n\n  function translationsStatus() {\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\n    $scope.isLoading = false;\n  }\n\n  function progress(msg) {\n    $timeout(function () {\n      if ($scope.testResults != null) {\n        $scope.testResults.push(msg);\n      }\n    });\n  }\n\n  function progressTranslations(msg) {\n    $timeout(function () {\n      if ($scope.translationResults != null) {\n        $scope.translationResults.push(msg);\n      }\n    });\n  }\n\n  $scope.saveLocation = function () {\n    dntReset();\n    if ($scope.location != noLocation) {\n      region.setCustomUrl($scope.location);\n\n      region.init();\n      if (region.alternativeFiles.region == region.tlocation.region) {\n        translations.reset();\n        translations.init(progressTranslations, translationsStatus);\n      }\n      $scope.testResults = ['Location saved', 'Using location ' + $scope.location];\n    }\n  };\n\n  $scope.testLocation = function () {\n    if ($scope.location != noLocation) {\n      $scope.testResults = ['Using location ' + $scope.location, 'Loading all data used by the app'];\n\n      translations.init(progress, function () {\n        dntInit(progress);\n      });\n    }\n  };\n}]);\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/setup.js\n// module id = 73\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/setup.js?");

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams', '$location', '$timeout', 'onlineService', 'jobs', buildSearch]);\n\n  function buildSearch($routeParams, $location, $timeout, onlineService, jobs) {\n    'use strict';\n\n    var vm = this;\n\n    vm.maxDisplay = 15;\n    vm.totalNumResults = 0;\n\n    jobs.init(null, function () {\n      if ($routeParams.jobId) {\n        vm.job = jobs.getById($routeParams.jobId);\n        getClassBuilds();\n      }\n    });\n\n    this.setJob = function () {\n      $timeout(function () {\n        $location.search('jobId', vm.job.id);\n      });\n    };\n\n    this.showMoreResults = function (extra) {\n      vm.maxDisplay = vm.totalNumResults + extra;\n      vm.totalNumResults = 0;\n    };\n\n    vm.allResults = null;\n    vm.getFilteredBuilds = function () {\n\n      // init\n      if (vm.allResults == null) {\n        vm.allResults = [];\n        for (var uid in vm.jobBuilds) {\n          for (var buildName in vm.jobBuilds[uid]) {\n            vm.allResults.push({\n              uid: uid,\n              name: buildName,\n              data: vm.jobBuilds[uid][buildName]\n            });\n          }\n        }\n      }\n\n      var results = [];\n      for (var i = 0; i < vm.allResults.length; ++i) {\n\n        var result = vm.allResults[i];\n        if (vm.filter && vm.filter.length > 0) {\n          var f = vm.filter.toUpperCase();\n          if (result.name.toUpperCase().indexOf(f) == -1) {\n            if (!result.data.guild || result.data.guild.toUpperCase().indexOf(f) == -1) {\n\n              continue;\n            }\n          }\n        }\n\n        results.push(result);\n\n        if (results.length >= vm.maxDisplay) {\n          break;\n        }\n      }\n\n      vm.totalNumResults = results.length;\n      return results;\n    };\n\n    function getClassBuilds() {\n      if (vm.job) {\n        onlineService.getClassBuilds(vm.job).then(function (builds) {\n          if (builds) {\n            // console.log('got builds', builds);\n            vm.jobBuilds = builds;\n          } else {\n            // console.log('no builds');\n            vm.jobBuilds = {};\n          }\n        });\n      }\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/build-search.js\n// module id = 74\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/build-search.js?");

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\n\n  function profile($location, $routeParams, onlineService, saveHelper) {\n    'use strict';\n\n    var vm = this;\n    vm.uid = $routeParams.uid;\n\n    getSavedBuilds();\n    getProfile();\n\n    function getSavedBuilds() {\n      onlineService.getUserBuilds(vm.uid).then(function (builds) {\n        if (builds) {\n          vm.storedBuilds = builds;\n        } else {\n          vm.storedBuilds = {};\n        }\n      });\n    }\n\n    function getProfile() {\n      onlineService.getProfile(vm.uid).then(function (profile) {\n        if (profile) {\n          vm.profile = profile;\n        } else {\n          vm.profile = {};\n        }\n      });\n    }\n\n    this.load = function (buildName, build) {\n\n      var newGroupName = saveHelper.importGroup(buildName, build.items);\n\n      saveHelper.saveBuild(newGroupName, newGroupName, build);\n\n      vm.builds = saveHelper.getSavedItems();\n\n      $location.path('/build');\n      $location.search('buildName', newGroupName);\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/profile.js\n// module id = 75\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/profile.js?");

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\n\n  function publish($location, saveHelper, onlineService, $routeParams, region) {\n    'use strict';\n\n    var vm = this;\n\n    vm.show = $routeParams.show;\n\n    onlineService.login().then(function (user) {\n      getSavedBuilds();\n      getProfile();\n\n      vm.builds = saveHelper.getSavedItems();\n    });\n\n    function getSavedBuilds() {\n      var user = vm.getUser();\n      if (user) {\n        onlineService.getUserBuilds(user.uid).then(function (builds) {\n          if (builds) {\n            vm.storedBuilds = builds;\n          } else {\n            vm.storedBuilds = {};\n          }\n        });\n      }\n    }\n\n    function getProfile() {\n      var user = vm.getUser();\n      if (user) {\n        onlineService.getProfile(user.uid).then(function (profile) {\n          if (profile) {\n            vm.profile = profile;\n          } else {\n            vm.profile = {};\n          }\n        });\n      }\n    }\n\n    this.saveProfile = function () {\n      onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\n    };\n\n    this.getUser = function () {\n      return onlineService.getUser();\n    };\n\n    this.save = function (buildName, build) {\n      build.lastUpdate = new Date().getTime();\n      onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\n      vm.publishBuild = null;\n    };\n\n    this.startPublish = function (buildName) {\n      if (buildName in vm.storedBuilds) {\n        if (!vm.builds[buildName].region) {\n          vm.builds[buildName].region = vm.storedBuilds[buildName].region;\n        }\n\n        if (!vm.builds[buildName].about) {\n          vm.builds[buildName].about = vm.storedBuilds[buildName].about;\n        }\n\n        if (!vm.builds[buildName].guild) {\n          vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\n        }\n      }\n\n      if (!vm.builds[buildName].region) {\n        vm.builds[buildName].region = region.dntLocation.region;\n      }\n\n      vm.publishBuild = buildName;\n    };\n\n    function handleError(err) {\n      console.log(err);\n    }\n\n    this.deleteAccount = function () {\n      onlineService.deleteAccount(vm.storedBuilds);\n    };\n\n    this.getBuildLimit = function () {\n      if (vm.profile && vm.profile.maxBuilds) {\n        return vm.profile.maxBuilds;\n      } else {\n        return 15;\n      }\n    };\n\n    this.getNumStoredBuilds = function () {\n      return _.size(vm.storedBuilds);\n    };\n\n    this.getNumBuilds = function () {\n      return _.size(vm.builds);\n    };\n\n    this.load = function (buildName, build) {\n\n      var newGroupName = saveHelper.importGroup(buildName, build.items);\n\n      saveHelper.saveBuild(newGroupName, newGroupName, build);\n\n      vm.builds = saveHelper.getSavedItems();\n    };\n\n    this.signOut = function () {\n      onlineService.signOut();\n    };\n\n    vm.deleteLocal = function (buildName) {\n      vm.localToDelete = buildName;\n    };\n\n    vm.getAllBuildNames = function () {\n      var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\n      return _.uniq(allKeys.sort(), true);\n    };\n\n    vm.reallyDeleteLocal = function (buildName) {\n      saveHelper.updatedSavedItems(buildName, []);\n      vm.localToDelete = null;\n      vm.builds = saveHelper.getSavedItems();\n    };\n\n    vm.deleteServer = function (buildName) {\n      vm.serverToDelete = buildName;\n    };\n\n    vm.reallyDeleteServer = function (buildName) {\n      onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\n      vm.serverToDelete = null;\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/publish.js\n// module id = 76\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/publish.js?");

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\n\n  function published(onlineService, $location, $routeParams, saveHelper, statHelper) {\n    'use strict';\n\n    var vm = this;\n    vm.uid = $routeParams.uid;\n    vm.buildName = $routeParams.buildName;\n\n    getBuild();\n    getProfile();\n\n    vm.copyLocally = function () {\n      var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n\n      saveHelper.saveBuild(newGroupName, newGroupName, vm.build);\n\n      $location.path('/build');\n      $location.search('buildName', newGroupName);\n    };\n\n    function getProfile() {\n      onlineService.getProfile(vm.uid).then(function (profile) {\n        if (profile) {\n          vm.profile = profile;\n        } else {\n          vm.profile = {};\n        }\n      });\n    }\n\n    function getBuild() {\n      onlineService.getBuild(vm.uid, vm.buildName).then(function (build) {\n        if (build) {\n          vm.build = build;\n          vm.stats = statHelper.getBuildStats(build);\n        } else {\n          vm.build = {};\n        }\n      });\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/published.js\n// module id = 77\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/published.js?");

/***/ }),
/* 78 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row>\\r\\n  <div class=col-xs-12 ng-if=\\\"!ctrl.profile || !ctrl.build\\\">\\r\\n    {{'loading...' | translate}}\\r\\n  </div>\\r\\n  <div class=col-xs-12 ng-if=\\\"ctrl.profile && ctrl.build\\\">\\r\\n    <h3>\\r\\n      <dnsim-job-icon item=::ctrl.build.job></dnsim-job-icon>\\r\\n      {{ctrl.buildName}} \\r\\n      <span ng-if=ctrl.build.guild>[{{ctrl.build.guild}}]</span>\\r\\n      <small>\\r\\n        <span ng-if=ctrl.build.region>in {{ctrl.build.region}}</span>\\r\\n        <span ng-if=ctrl.build.about>\\r\\n          <br/>\\r\\n          <em>\\r\\n            {{ctrl.build.about}}\\r\\n          </em>\\r\\n        </span>\\r\\n        <br/>\\r\\n        <span dnsim-stats build=ctrl.build stats=ctrl.stats.calculatedStats separator=\\\"'|'\\\" filter=\\\"'summaryDisplay'\\\"/>\\r\\n      </small>\\r\\n    </h3>\\r\\n    \\r\\n    <p>\\r\\n      {{'created by:' | translate}} &raquo;<a ng-href=\\\"profile/?uid={{ctrl.uid}}\\\">{{ctrl.profile.name || 'unnamed user'}}</a>\\r\\n      <br/>\\r\\n      <em>{{ctrl.profile.about}}</em>\\r\\n    </p>\\r\\n    \\r\\n    <button class=\\\"btn btn-default\\\" ng-click=ctrl.copyLocally()>\\r\\n      {{'copy into local builds' | translate}}\\r\\n    </button>\\r\\n\\r\\n    <dngearsim-build server=true build-name=ctrl.buildName build=ctrl.build>\\r\\n    </dngearsim-build>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/published.html\n// module id = 78\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/published.html?");

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim').controller('RegionCtrl', ['$timeout', '$route', '$routeParams', '$location', 'translations', 'region', '$http', function ($timeout, $route, $routeParams, $location, translations, region, $http) {\n  'use strict';\n\n  var vm = this;\n\n  vm.override = region.getOverride();\n  region.init();\n  translations.init(function (msg) {\n    // console.log(msg);\n  }, function () {\n    $timeout();\n  });\n\n  vm.region = region;\n  vm.tHoverLocation = region.tlocation;\n  vm.hoverLocation = region.dntLocation;\n  vm.edit = region.dntLocation == null;\n  vm.dntVersion = '';\n  setDntVersion();\n\n  function setDntVersion() {\n    // console.log('setting version for ', vm.region.dntLocation);\n    if (vm.region.dntLocation && vm.region.dntLocation.url) {\n      $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function (res) {\n        if (res && res.data) {\n          var newLineDetails = res.data.split('\\r\\n');\n          if (newLineDetails.length) {\n            var spaceDetails = newLineDetails[0].split(' ');\n            if (spaceDetails.length > 1) {\n              vm.dntVersion = 'v' + spaceDetails[1];\n            }\n          }\n        }\n      });\n    }\n  }\n\n  vm.getDntLocation = function () {\n    return region.dntLocation;\n  };\n  vm.getTlocation = function () {\n    return region.tlocation;\n  };\n\n  vm.getHostedFiles = function () {\n    // console.log('getting hosted files');\n    return region.hostedFiles;\n  };\n\n  vm.getWorldName = function () {\n    if (translations.isLoaded()) {\n      return translations.translate(10169);\n    } else {\n      return '';\n    }\n  };\n\n  vm.setTLocation = function (location) {\n    region.setTLocation(location);\n    vm.edit = false;\n  };\n\n  vm.setLocation = function (location) {\n    if (!vm.override) {\n      vm.setTLocation(null);\n    }\n\n    if ($routeParams.region) {\n      $routeParams.region = location.region;\n      $route.updateParams($routeParams);\n      $route.reload();\n    } else {\n      region.setLocation(location);\n    }\n    vm.edit = false;\n    setDntVersion();\n  };\n\n  vm.setOverride = function (value) {\n    region.setOverride(value);\n    vm.override = value;\n    vm.edit = value;\n  };\n}]).directive('dngearsimRegion', function () {\n  return {\n    template: __webpack_require__(146),\n    controllerAs: 'ctrl'\n  };\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/region/region.js\n// module id = 79\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/region/region.js?");

/***/ }),
/* 80 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row>\\r\\n  <div class=col-xs-12>\\r\\n    <h4>{{'full item search' | translate}} <small>{{'find anything' | translate}}</small></h4>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row>\\r\\n  <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n     <label>{{'seach by name:' | translate}}</label>\\r\\n     <input ng-change=items.changeSearch() type=text class=form-control ng-model=items.nameSearch ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-sm-2\\\">\\r\\n     <label>{{'min&nbsp;lvl:' | translate}}\\r\\n     </label>\\r\\n     <input ng-change=items.changeSearch() type=number dnsim-string-to-number step=any class=form-control ng-model=items.minLevel ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-sm-2\\\">\\r\\n     <label>{{'max&nbsp;lvl:' | translate}}\\r\\n     </label>\\r\\n     <input ng-change=items.changeSearch() type=number dnsim-string-to-number step=any class=form-control ng-model=items.maxLevel ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-4 col-sm-2\\\">\\r\\n     <label>{{'version' | translate}}\\r\\n     </label>\\r\\n     <select ng-change=items.changeSearch() ng-model=items.version class=form-control ng-options=\\\"v for v in items.versions track by v\\\">\\r\\n     </select>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<dnsim-loading>\\r\\n  <div class=\\\"row table-look\\\" infinite-scroll=items.showMoreResults()>\\r\\n    <div class=\\\"col-xs-12 col-md-6\\\" ng-repeat=\\\"result in items.results track by $index\\\">\\r\\n      <div class=dnsim-card>\\r\\n        <dnsim-item-link item=result />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=col-xs-12 ng-if=\\\"items.results && items.maxDisplay <= items.results.length\\\">\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=items.showMoreResults()>{{'show more' | translate}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</dnsim-loading>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/everything-search.html\n// module id = 80\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/everything-search.html?");

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dngearsimCustomItems', function () {\n    return {\n      scope: {},\n      bindToController: {},\n      controller: ['$window', 'saveHelper', '$location', 'hCodeValues', 'itemCategory', '$timeout', customItemCtrl],\n      controllerAs: 'customItems',\n      template: __webpack_require__(149)\n    };\n  });\n\n  function customItemCtrl($window, saveHelper, $location, hCodeValues, itemCategory, $timeout) {\n    'use strict';\n\n    var vm = this;\n\n    this.customItems = hCodeValues.customItems;\n\n    this.maxDisplay = 10;\n    this.currentResults = 0;\n\n    if (this.nameSearch == null) {\n      this.nameSearch = '';\n    }\n\n    this.getResults = function () {\n      return this.customItems;\n    };\n\n    this.getNewStatName = function () {\n      if (this.nameSearch == '' || this.nameSearch == null) {\n        return 'unnamed custom item';\n      } else {\n        return this.nameSearch;\n      }\n    };\n\n    this.createCustomItem = function () {\n      if (this.nameSearch == '' || this.nameSearch == null) {\n        this.nameSearch = this.getNewStatName();\n      }\n      $location.path('/item/_custom:.' + this.nameSearch);\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/custom-items.js\n// module id = 81\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/custom-items.js?");

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  everythingSearchCtrl.$inject = [\"$window\", \"$timeout\", \"$routeParams\", \"$location\", \"hCodeValues\", \"region\", \"translations\", \"dntData\"];\n  angular.module('dnsim').directive('dngearsimEverythingSearch', function () {\n    return {\n      scope: {},\n      bindToController: {\n        nameSearch: '=nameSearch'\n      },\n      controller: everythingSearchCtrl,\n      controllerAs: 'items',\n      template: __webpack_require__(80)\n    };\n  });\n\n  function everythingSearchCtrl($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\n\n    var vm = this;\n\n    vm.everything = null;\n    vm.maxDisplay = 32;\n    vm.currentResults = 0;\n    vm.results = null;\n    vm.minLevel = 1;\n    vm.maxLevel = 99;\n    vm.version = 'all';\n    vm.versions = [vm.version];\n\n    var minLevel = Number(localStorage.getItem('minLevel'));\n    if ($routeParams.minLevel) {\n      minLevel = Number($routeParams.minLevel);\n    }\n    if (minLevel > 0 && minLevel < 100) {\n      vm.minLevel = minLevel;\n    }\n    vm.origMinLevel = minLevel;\n\n    var maxLevel = Number(localStorage.getItem('maxLevel'));\n    if ($routeParams.maxLevel) {\n      maxLevel = Number($routeParams.maxLevel);\n    }\n    if (maxLevel > 0 && maxLevel < 100) {\n      vm.maxLevel = maxLevel;\n    }\n    vm.origMaxLevel = maxLevel;\n\n    if (!vm.nameSearch) {\n      vm.nameSearch = localStorage.getItem('nameSearch');\n      if ($routeParams.name) {\n        vm.nameSearch = $routeParams.name;\n      }\n      if (vm.nameSearch == null) {\n        vm.nameSearch = '';\n      }\n    }\n\n    $window.document.title = 'dngearsim | ALL ITEM SEARCH';\n\n    vm.initeverything = function () {\n      if (dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\n        vm.everything = [];\n\n        var versionMap = {};\n        var datas = dntData.getData(fileName);\n        // console.log(datas.length + ' everything');\n        for (var i = 0; i < datas.length; ++i) {\n          var data = datas[i];\n          if (data.NameID > 0) {\n            var item = {\n              id: data.id,\n              name: translations.translate(data.NameID, data.NameIDParam),\n              rank: hCodeValues.rankNames[data.Rank],\n              icon: data.IconImageIndex,\n              levelLimit: data.LevelLimit,\n              fileName: data.fileName,\n              version: data.version\n            };\n            vm.everything.push(item);\n\n            if (data.version) {\n              versionMap[data.version] = true;\n            }\n          }\n        }\n\n        for (var version in versionMap) {\n          vm.versions.push(version);\n        }\n\n        vm.everything = _.sortBy(vm.everything, 'name');\n\n        $timeout(function () {\n          vm.showMoreResults();\n        });\n      }\n    };\n\n    vm.getResults = function () {\n      if (vm.everything == null) {\n        vm.initeverything();\n      }\n\n      if (vm.everything == null) {\n        return [];\n      }\n\n      var newResults = [];\n      var numeverything = vm.everything.length;\n      var curDisplay = 0;\n      for (var i = 0; i < numeverything && curDisplay < vm.maxDisplay; ++i) {\n        var e = vm.everything[i];\n\n        if (e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || !e.levelLimit) {\n          continue;\n        }\n\n        if (vm.version != 'all' && vm.version != e.version) {\n          continue;\n        }\n\n        if (vm.nameSearch != '') {\n          var nameSearches = vm.nameSearch.split(' ');\n          if (nameSearches.length == 0) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for (var ns = 0; ns < nameSearches.length; ++ns) {\n            if (e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n\n          if (!allMatch) {\n            continue;\n          }\n        }\n\n        newResults.push(e);\n        curDisplay++;\n      }\n\n      vm.totalNumResults = newResults.length;\n      return newResults;\n    };\n\n    vm.changeSearch = function () {\n      if (vm.minLevel != vm.origMinLevel) {\n        localStorage.setItem('minLevel', vm.minLevel);\n        $location.search('minLevel', vm.minLevel);\n        vm.origMinLevel = vm.minLevel;\n      }\n\n      if (vm.maxLevel != vm.origMaxLevel) {\n        localStorage.setItem('maxLevel', vm.maxLevel);\n        $location.search('maxLevel', vm.maxLevel);\n        vm.origMaxLevel = vm.maxLevel;\n      }\n\n      localStorage.setItem('nameSearch', vm.nameSearch);\n      $location.search('name', vm.nameSearch);\n\n      vm.maxDisplay = 64;\n      vm.results = vm.getResults();\n    };\n\n    vm.showMoreResults = function () {\n      $timeout(function () {\n        // console.log('show more', vm.maxDisplay);\n        vm.maxDisplay += 18;\n        vm.results = vm.getResults();\n      });\n    };\n\n    var fileName = 'all-items.lzjson';\n    dntData.init(fileName, null, function () {}, function () {\n      vm.initeverything();\n    }, false);\n\n    translations.init(null, vm.initeverything);\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/everything-search.js\n// module id = 82\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/everything-search.js?");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  var controllerParams = ['$scope', '$window', '$routeParams', '$timeout', '$location', '$route', 'translations', 'itemCategory', 'jobs', 'hCodeValues', 'itemFactory', 'region', 'saveHelper', itemSearchCtrl];\n\n  angular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\n\n  function itemSearchCtrl($scope, $window, $routeParams, $timeout, $location, $route, translations, itemCategory, jobs, hCodeValues, itemFactory, region, saveHelper) {\n    'use strict';\n\n    var vm = this;\n\n    vm.itemCategory = itemCategory.byPath($routeParams.cat);\n    if (!vm.itemCategory) {\n      var catName = localStorage.getItem('selectedItemCategory');\n      if (!catName) {\n        catName = 'titles';\n      }\n\n      vm.itemCategory = itemCategory.byName(catName);\n      if (!vm.itemCategory || vm.itemCategory.hideInSearch) {\n        catName = 'titles';\n        vm.itemCategory = itemCategory.byName('titles');\n      }\n      if (vm.itemCategory) {\n        // console.log('moving');\n        $location.search('cat', vm.itemCategory.path);\n        $route.reload();\n      }\n      return;\n    }\n\n    $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\n\n    vm.job = { id: -1, name: '' };\n    vm.jobs = [vm.job];\n    vm.allJobs = [];\n    vm.minLevel = 1;\n    vm.maxLevel = 99;\n    vm.maxDisplay = 10;\n    vm.totalNumResults = 0;\n    vm.grades = hCodeValues.rankNames;\n    vm.stat = { id: -1, name: '' };\n    vm.stats = [vm.stat];\n    vm.results = null;\n\n    angular.forEach(hCodeValues.stats, function (stat, statId) {\n      if (stat.searchable) {\n        vm.stats.push(stat);\n      }\n    });\n\n    var minLevel = Number(localStorage.getItem('minLevel'));\n    if ($routeParams.minLevel) {\n      minLevel = Number($routeParams.minLevel);\n    }\n    if (minLevel > 0 && minLevel < 100) {\n      vm.minLevel = minLevel;\n    }\n    vm.origMinLevel = minLevel;\n\n    var maxLevel = Number(localStorage.getItem('maxLevel'));\n    if ($routeParams.maxLevel) {\n      maxLevel = Number($routeParams.maxLevel);\n    }\n    if (maxLevel > 0 && maxLevel < 100) {\n      vm.maxLevel = maxLevel;\n    }\n    vm.origMaxLevel = maxLevel;\n\n    vm.nameSearch = localStorage.getItem('nameSearch');\n    if ($routeParams.name) {\n      vm.nameSearch = $routeParams.name;\n    }\n    if (!vm.nameSearch) {\n      vm.nameSearch = '';\n    }\n\n    vm.origSavedSearchStatId = localStorage.getItem('searchStat');\n    if ($routeParams.stat) {\n      vm.origSavedSearchStatId = $routeParams.stat;\n    }\n    if (vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\n      vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\n    }\n\n    vm.navigate = function () {\n      var catName = localStorage.getItem('selectedItemCategory');\n      if (catName) {\n        vm.itemCategory = itemCategory.byName(catName);\n        if (vm.itemCategory) {\n          // console.log('navigating to ', vm.itemCategory.path);\n          $location.search('cat', vm.itemCategory.path);\n          vm.save();\n          $route.reload();\n        }\n      }\n    };\n\n    vm.save = function () {\n      if (!vm.itemCategory.hideLevel) {\n        if (vm.minLevel != vm.origMinLevel) {\n          localStorage.setItem('minLevel', vm.minLevel);\n          $location.search('minLevel', vm.minLevel);\n          vm.origMinLevel = vm.minLevel;\n        }\n\n        if (vm.maxLevel != vm.origMaxLevel) {\n          localStorage.setItem('maxLevel', vm.maxLevel);\n          $location.search('maxLevel', vm.maxLevel);\n          vm.origMaxLevel = vm.maxLevel;\n        }\n      } else {\n        $location.search('minLevel', null);\n        $location.search('maxLevel', null);\n      }\n\n      if (!vm.itemCategory.hideJob) {\n        if (vm.job != null) {\n          if (vm.origJobNumber != vm.job.id) {\n            localStorage.setItem('jobNumber', vm.job.id);\n            if (vm.job.id > -1) {\n              $location.search('job', vm.job.id);\n            } else {\n              $location.search('job', null);\n            }\n            vm.origJobNumber = vm.job.id;\n          }\n        }\n      } else {\n        $location.search('job', null);\n      }\n\n      if (vm.stat) {\n        if (vm.origSavedSearchStatId != vm.stat.id) {\n          localStorage.setItem('searchStat', vm.stat.id);\n          if (vm.stat.id > -1) {\n            $location.search('stat', vm.stat.id);\n          } else {\n            $location.search('stat', null);\n          }\n\n          vm.origSavedSearchStatId = vm.stat.id;\n        }\n      }\n\n      localStorage.setItem('nameSearch', vm.nameSearch);\n      $location.search('name', vm.nameSearch);\n    };\n\n    function init() {\n      jobs.init(reportProgress, jobInit);\n    }\n\n    function reportProgress(msg) {\n      // console.log('progress: ' + msg);\n    }\n\n    function jobInit() {\n      // console.log('called the job init func');\n      if (translations.isLoaded() && jobs.isLoaded()) {\n        // console.log('trying to init jobs');\n        // console.log('job dropdown should be set');\n        var newJobs = jobs.getFinalJobs();\n\n        newJobs.splice(0, 0, vm.jobs[0]);\n        vm.jobs = newJobs;\n        vm.allJobs = jobs.getAllJobs();\n\n        var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n        if ($routeParams.job && $routeParams.job) {\n          lastJobNumber = Number($routeParams.job);\n        }\n        if (lastJobNumber != null) {\n          angular.forEach(newJobs, function (value, key) {\n            if (value.id == lastJobNumber) {\n              vm.job = value;\n              return;\n            }\n          });\n        }\n\n        itemCategory.init(vm.itemCategory.name, loadResults);\n      }\n    }\n\n    vm.rankChecked = hCodeValues.checkedRank;\n\n    vm.changeSearch = function () {\n      vm.save();\n      loadResults();\n    };\n\n    function loadResults() {\n      vm.maxDisplay = 24;\n      vm.results = getResults();\n    }\n\n    function getResults() {\n      var allItems = itemCategory.getItems(vm.itemCategory.name);\n      if (allItems == null) {\n        return null;\n      }\n\n      allItems = allItems.sort(function (item1, item2) {\n        return item2.levelLimit - item1.levelLimit;\n      });\n\n      var pcStatId = -1;\n      if ('pc' in vm.stat) {\n        pcStatId = vm.stat.pc;\n      }\n\n      var altStatId = -1;\n      if ('altStat' in vm.stat) {\n        altStatId = vm.stat.altStat;\n      }\n\n      var statVals = [];\n      var newResults = [];\n      var numEquip = allItems.length;\n      var curDisplay = 0;\n      for (var i = 0; i < numEquip && (curDisplay < vm.maxDisplay || vm.stat.id >= 0); ++i) {\n        var e = allItems[i];\n        if (e) {\n\n          if (!vm.itemCategory.hideLevel) {\n            if (e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\n              continue;\n            }\n          }\n\n          if (!vm.itemCategory.hideRank) {\n            if (e.rank && !vm.rankChecked[e.rank.id]) {\n              continue;\n            }\n          }\n\n          if (!vm.itemCategory.hideJob) {\n            if (vm.job && vm.job.id > -1) {\n              if (!vm.job.isClassJob(e.needJobClass)) {\n                continue;\n              }\n            }\n          }\n\n          itemFactory.initItem(e);\n          if (e.typeName != vm.itemCategory.name) {\n            continue;\n          }\n          // console.log('name filter', vm.nameSearch); \n\n          if (vm.nameSearch != '') {\n            // console.log('filtering on name');\n            var nameSearches = vm.nameSearch.split(' ');\n            if (!nameSearches.length) {\n              nameSearches = [vm.nameSearch];\n            }\n            var allMatch = true;\n            for (var ns = 0; ns < nameSearches.length; ++ns) {\n              if (e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n                allMatch = false;\n                break;\n              }\n            }\n\n            if (!allMatch) {\n              continue;\n            }\n          }\n\n          if (vm.stat.id >= 0) {\n            var statFound = false;\n\n            var statVal = {};\n            for (var s = 0; s < e.stats.length; ++s) {\n              var stat = e.stats[s];\n              if (stat.id == vm.stat.id) {\n                statFound = true;\n                statVal.i = curDisplay;\n                statVal.s = Number(stat.max);\n                break;\n              } else if (stat.id == pcStatId) {\n                statFound = true;\n                statVal.i = curDisplay;\n                statVal.s = Number(stat.max);\n              } else if (stat.id == altStatId) {\n                statFound = true;\n                statVal.i = curDisplay;\n                statVal.s = Number(stat.max);\n              }\n            }\n\n            if (!statFound) {\n              continue;\n            } else {\n              statVals.push(statVal);\n            }\n          }\n\n          newResults.push(e);\n          curDisplay++;\n        }\n      }\n\n      if (vm.stat.id >= 0) {\n\n        var currentResults = Math.min(curDisplay, vm.maxDisplay);\n\n        statVals = statVals.sort(function (value1, value2) {\n          return value2.s - value1.s;\n        });\n\n        var statResults = [];\n        for (var i = 0; i < currentResults; ++i) {\n          statResults.push(newResults[statVals[i].i]);\n        }\n        newResults = statResults;\n      }\n\n      vm.totalNumResults = newResults.length;\n\n      return newResults;\n    }\n\n    vm.showMoreResults = function () {\n      $timeout(function () {\n        vm.maxDisplay += 18;\n        vm.results = getResults();\n      });\n    };\n\n    region.init();\n    translations.init(reportProgress, init);\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/search.js\n// module id = 83\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/search.js?");

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dngearsimSkillSearch', function () {\n    return {\n      scope: {},\n      bindToController: {\n        job: '=job',\n        jobs: '=jobs'\n      },\n      controller: ['$window', '$timeout', 'saveHelper', 'region', 'jobs', 'translations', 'dntData', 'hCodeValues', 'itemCategory', '$location', skillSearchCtrl],\n      controllerAs: 'skillSearch',\n      template: __webpack_require__(150)\n    };\n  });\n\n  function skillSearchCtrl($window, $timeout, saveHelper, region, jobs, translations, dntData, hCodeValues, itemCategory, $location) {\n\n    var vm = this;\n\n    vm.allJobs = [];\n    vm.dntName = '';\n    vm.skills = [];\n    vm.loadedJobId = -1;\n\n    vm.itemCategory = itemCategory.byName('skills');\n\n    vm.nameSearch = localStorage.getItem('nameSearch');\n    if (!vm.nameSearch) {\n      vm.nameSearch = '';\n    }\n\n    region.init();\n    if (translations.isLoaded()) {\n      init();\n    } else {\n      translations.init(reportProgress, function () {\n        $timeout(init);\n      });\n    }\n\n    vm.navigate = function () {\n      $timeout(function () {\n        if (vm.itemCategory) {\n          $location.path(vm.itemCategory.path);\n        }\n      });\n    };\n\n    vm.isLoading = function () {\n\n      if (!translations.isLoaded()) {\n        // console.log('transations not loaded');\n        if (!translations.startedLoading) {\n          translations.init(reportProgress, function () {});\n        }\n\n        return true;\n      }\n\n      var baseName = jobs.getBaseJobName(vm.job);\n      var dntName = getDntName(baseName);\n      if (dntName) {\n        if (!dntData.isLoaded(dntName)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    function getDntName(baseClassName) {\n      // console.log('got base class :' + baseClassName);\n      if (baseClassName != null) {\n        return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\n      } else {\n        return null;\n      }\n    }\n\n    function getSkills() {\n      // console.log('getting skills for ' + vm.job.name);\n      if (vm.loadedJobId == vm.job.id) {\n        return vm.skills;\n      } else {\n\n        var baseJobNames = [];\n        if (vm.job.id >= 0) {\n          var baseName = jobs.getBaseJobName(vm.job);\n          baseJobNames.push(baseName);\n        }\n\n        angular.forEach(baseJobNames, function (baseName, index) {\n          var dntName = getDntName(baseName);\n          if (dntName) {\n            if (!dntData.isLoaded(dntName)) {\n              // console.log('loading skills for ' + baseName);\n              dntData.init(dntName, null, reportProgress, function () {\n                $timeout(function () {\n                  setupSkills(baseJobNames, vm.job);\n                });\n              });\n            } else {\n              setupSkills(baseJobNames, vm.job);\n            }\n          }\n        });\n      }\n    }\n\n    function setupSkills(baseJobNames, job) {\n\n      vm.skills = [];\n      var allReady = true;\n      angular.forEach(baseJobNames, function (baseName, index) {\n        var dntName = getDntName(baseName);\n        if (!dntData.isLoaded(dntName)) {\n          allReady = false;\n        }\n      });\n\n      if (allReady) {\n        angular.forEach(baseJobNames, function (baseName, index) {\n          var dntName = getDntName(baseName);\n\n          var skills = dntData.getData(dntName);\n          var numSkills = skills.length;\n          for (var s = 0; s < numSkills; ++s) {\n            if (skills[s].NameID == 0) {\n              continue;\n            }\n\n            if (skills[s].EffectClass1 > 0 || skills[s].EffectClass2 > 0 || skills[s].EffectClass3 > 0 || skills[s].EffectClass4 > 0 || skills[s].EffectClass5 > 0 || skills[s].EffectClass6 > 0) {\n\n              var newItem = { d: skills[s] };\n\n              newItem.id = skills[s].id;\n              newItem.typeName = 'skills';\n              newItem.itemSource = 'skills';\n              newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\n              newItem.needJobClass = skills[s].NeedJob;\n              newItem.rank = hCodeValues.rankNames[0];\n              newItem.baseJobName = baseName.toLowerCase();\n              newItem.icon = skills[s].IconImageIndex;\n\n              vm.skills.push(newItem);\n            }\n          }\n        });\n\n        vm.loadedJobId = job.id;\n      }\n    }\n\n    vm.getResults = function () {\n\n      var skills = getSkills();\n      if (skills == null) {\n        return [];\n      }\n\n      if (vm.job && vm.job.id >= 0) {\n        localStorage.setItem('jobNumber', vm.job.id);\n      }\n      localStorage.setItem('nameSearch', vm.nameSearch);\n\n      var newResults = [];\n      var numSkills = skills.length;\n      var curDisplay = 0;\n      for (var i = 0; i < numSkills; ++i) {\n        var e = skills[i];\n\n        if (vm.nameSearch != '') {\n          var nameSearches = vm.nameSearch.split(' ');\n          if (!nameSearches.length) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for (var ns = 0; ns < nameSearches.length; ++ns) {\n            if (e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n\n          if (!allMatch) {\n            continue;\n          }\n        }\n\n        if (vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\n          continue;\n        }\n\n        newResults.push(e);\n      }\n      return newResults;\n    };\n\n    function reportProgress(msg) {\n      // console.log('progress: ' + msg);\n    }\n\n    function jobInit() {\n      if (translations.isLoaded() && jobs.isLoaded()) {\n        var newJobs = jobs.getFinalJobs();\n\n        if (vm.jobs && vm.jobs.length) {\n          newJobs.splice(0, 0, vm.jobs[0]);\n        }\n        vm.jobs = newJobs;\n        vm.allJobs = jobs.getAllJobs();\n\n        var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n        // console.log('using job', lastJobNumber);\n        if (lastJobNumber != null) {\n          angular.forEach(newJobs, function (value, key) {\n            if (value.id == lastJobNumber) {\n              vm.job = value;\n              // console.log('using job', value);\n              return;\n            }\n          });\n        }\n\n        vm.getResults();\n      }\n    }\n\n    function init() {\n      // console.log('skill init');\n      if (jobs.isLoaded()) {\n        $timeout(jobInit);\n      } else {\n        jobs.init(reportProgress, function () {\n          $timeout(jobInit);\n        });\n      }\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/skill-search.js\n// module id = 84\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/skill-search.js?");

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimChooseClass', chooseClass);\n\n  function chooseClass() {\n    return {\n      restrict: 'E',\n      scope: {},\n      bindToController: {\n        job: '=job',\n        onSetJob: '&onSetJob'\n      },\n      template: __webpack_require__(151),\n      controllerAs: 'ctrl',\n      controller: ['$window', '$location', '$routeParams', '$timeout', 'saveHelper', 'dntData', 'jobs', 'hCodeValues', 'itemColumnsToLoad', 'character', chooseClassController]\n    };\n  }\n\n  function chooseClassController($window, $location, $routeParams, $timeout, saveHelper, dntData, jobs, hCodeValues, itemColumnsToLoad, character) {\n    this.getFinalJobs = function () {\n      var allJobs = jobs.getFinalJobs();\n      var finalJobs = [];\n      for (var j = 0; j < allJobs.length; ++j) {\n        if (jobs.getBaseJobName(allJobs[j]) == this.bJob) {\n          finalJobs.push(allJobs[j]);\n        }\n      }\n      return finalJobs;\n    };\n\n    this.getBaseJobs = function () {\n      return jobs.getBaseJobs();\n    };\n\n    this.getJobName = function (englishName) {\n      var allJobs = jobs.getAllJobs();\n      for (var j = 0; j < allJobs.length; ++j) {\n        if (allJobs[j].d.EnglishName == englishName) {\n          return allJobs[j].name;\n        }\n      }\n    };\n\n    this.setJob = function (job) {\n      this.job = job;\n      if (job) {\n        this.onSetJob();\n      }\n    };\n\n    jobs.init(reportProgress, $timeout);\n    function reportProgress(msg) {\n      // console.log('progress: ' + msg);\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/choose-class.js\n// module id = 85\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/choose-class.js?");

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  dnsimCategoryLinksController.$inject = [\"itemCategory\", \"$window\", \"translations\", \"$translate\"];\n  angular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\n\n  function dnsimCategoryLinks() {\n    return {\n      restrict: 'E',\n      scope: {},\n      bindToController: {\n        collapse: '=collapse',\n        cat: '=cat',\n        buildScreen: '=buildScreen',\n        onChange: '&onChange'\n      },\n      template: __webpack_require__(152),\n      controller: dnsimCategoryLinksController,\n      controllerAs: 'ctrl'\n    };\n  };\n\n  function dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\n\n    var vm = this;\n\n    vm.categories = itemCategory.categories;\n    vm.collapsed = true;\n\n    vm.shouldShow = function (action) {\n      if (vm.buildScreen) {\n        return !action.hideInBuild;\n      } else {\n        return !action.hideInSearch;\n      }\n    };\n\n    vm.isLoading = function () {\n      return !translations.loaded;\n    };\n\n    vm.setCategory = function (action) {\n\n      if (vm.collapse) {\n        // console.log('collapsing cat', action);\n        vm.collapsed = !vm.collapsed;\n        $window.scrollTo(0, 0);\n      }\n\n      // console.log('setting cat', action);\n      if (vm.cat != action) {\n        vm.cat = action;\n        localStorage.setItem('selectedItemCategory', action.name);\n\n        if (vm.onChange) {\n          vm.onChange();\n        }\n      }\n    };\n\n    vm.getName = function (action) {\n      if (action.tId) {\n        return translations.translate(action.tId).toLowerCase();\n      } else {\n        return $translate.instant(action.name);\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-category-links.js\n// module id = 86\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-category-links.js?");

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper', '$location', 'region', dnsimItemIcon]);\n\n  function dnsimItemIcon(exportLinkHelper, $location, region) {\n    return {\n      restrict: 'E',\n      scope: {\n        item: '=item'\n      },\n      template: __webpack_require__(153),\n      link: function link($scope, element, attrs) {\n\n        $scope.$watch('item', function (newValue, oldValue) {\n          if (newValue) {\n            $scope.iconImage = $scope.getIcon();\n          }\n        });\n\n        $scope.getIcon = function () {\n          if ($scope.item && $scope.item.icon > 0) {\n            var fileIndex = Math.floor($scope.item.icon / 200 + 1);\n\n            var prefix;\n            if ($scope.item.typeName == 'skills') {\n              prefix = 'skillicon';\n            } else {\n              prefix = 'itemicon';\n            }\n\n            if (fileIndex > 9) {\n              return prefix + fileIndex + '.png';\n            } else {\n              return prefix + '0' + fileIndex + '.png';\n            }\n          }\n          return null;\n        };\n\n        $scope.iconImage = $scope.getIcon();\n\n        $scope.getIconXPostion = function () {\n          if ($scope.item && $scope.item.icon > 0) {\n            return $scope.item.icon % 10 * 40 + 5;\n          }\n          return 0;\n        };\n\n        $scope.getIconYPostion = function () {\n          if ($scope.item && $scope.item.icon > 0) {\n            return Math.floor($scope.item.icon % 200 / 10) * 40 + 4;\n          }\n          return 0;\n        };\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-item-icon.js\n// module id = 87\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-item-icon.js?");

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper', '$location', 'region', dnsimItemLink]);\n\n  function dnsimItemLink(exportLinkHelper, $location, region) {\n    return {\n      restrict: 'E',\n      scope: {\n        item: '=item',\n        noClick: '=noClick'\n      },\n      template: __webpack_require__(154),\n      link: function link($scope, element, attrs) {\n        $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n        // var basePath = angular.element(document.querySelector('base')).attr('href');\n\n        $scope.$watch('item', function (newValue, oldValue) {\n          if (newValue) {\n            $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n          }\n        });\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-item-link.js\n// module id = 88\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-item-link.js?");

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\n\n  function dnsimJobIcon() {\n    return {\n      restrict: 'E',\n      scope: {},\n      bindToController: {\n        item: '=item',\n        small: '=small'\n      },\n      template: __webpack_require__(155),\n      controller: dnsimJobIconController,\n      controllerAs: 'ctrl'\n    };\n  }\n\n  function dnsimJobIconController() {\n\n    if (this.small) {\n      this.sizeValue = '205px 205px';\n      this.iconSize = 22;\n      this.iconOffset = 0;\n    } else {\n      this.sizeValue = '410px 410px';\n      this.iconSize = 44;\n      this.iconOffset = 5;\n    }\n\n    this.getIconXPostion = function () {\n      if (this.item && this.item.d && this.item.d.JobIcon > 0) {\n        return this.item.d.JobIcon % 9 * this.iconSize + this.iconOffset;\n      }\n      return 0;\n    };\n\n    this.getIconYPostion = function () {\n      if (this.item && this.item.d && this.item.d.JobIcon > 0) {\n        return Math.floor(this.item.d.JobIcon / 9) * this.iconSize + this.iconOffset;\n      }\n      return 0;\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-job-icon.js\n// module id = 89\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-job-icon.js?");

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimLoading', ['dntData', 'translations', '$timeout', 'region', dnsimLoading]);\n\n  function dnsimLoading(dntData, translations, $timeout, region) {\n    'use strict';\n\n    return {\n      restrict: 'E',\n      transclude: true,\n      scope: {\n        alsoShowFor: '=alsoShowFor'\n      },\n      template: __webpack_require__(156),\n      link: function link($scope, element, attrs) {\n        $scope.$on('TRANSLATION_LOAD_EVENT', function () {\n          $scope.setLoadCount();\n        });\n\n        $scope.$on('DNTDATA_LOAD_EVENT', function () {\n          $scope.setLoadCount();\n        });\n\n        $scope.$on('DNTDATA_LOAD_ERROR', function () {\n          $timeout(function () {\n            $scope.loadError = true;\n          });\n        });\n\n        $scope.$on('TRANSLATION_LOAD_ERROR', function () {\n          $timeout(function () {\n            $scope.loadError = true;\n          });\n        });\n\n        $scope.numLoading = 0;\n        $scope.setLoadCount = function () {\n          $scope.noRegion = !region.dntLocation;\n\n          var n = dntData.anyLoading();\n          if (!translations.isLoaded()) {\n            n++;\n          }\n\n          // $timeout(function() {\n          if ($scope.numLoading < n || !$scope.totalToLoad) {\n            $scope.totalToLoad = n;\n          }\n          $scope.numLoading = n;\n          // });\n          $timeout();\n        };\n\n        $scope.loadError = false;\n        $scope.setLoadCount();\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-loading.js\n// module id = 90\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-loading.js?");

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\n\n  function dnsimSelectAllOnClick() {\n    'use strict';\n\n    return {\n      restrict: 'A',\n      link: function link(scope, element, attrs) {\n        var hasSelectedAll = false;\n        element.on('click', function ($event) {\n          if (!hasSelectedAll) {\n            try {\n              //IOs, Safari, thows exception on Chrome etc\n              this.selectionStart = 0;\n              this.selectionEnd = this.value.length + 1;\n              hasSelectedAll = true;\n            } catch (err) {\n              //Non IOs option if not supported, e.g. Chrome\n              this.select();\n              hasSelectedAll = true;\n            }\n          }\n        });\n        //On blur reset hasSelectedAll to allow full select\n        element.on('blur', function ($event) {\n          hasSelectedAll = false;\n        });\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-select-all-on-click.js\n// module id = 91\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-select-all-on-click.js?");

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimStats', ['hCodeValues', '$translate', dnsimStats]);\n\n  function dnsimStats(hCodeValues, $translate) {\n    return {\n      restrict: 'A',\n      scope: {\n        stats: '=stats',\n        build: '=build',\n        altStats: '=altStats',\n        separator: '=separator',\n        filter: '=filter',\n        numInSet: '=numInSet'\n      },\n      link: function link($scope, element, attrs) {\n\n        var sep;\n        if (!$scope.separator) {\n          sep = '';\n        } else {\n          sep = '&nbsp;' + $scope.separator + ' ';\n        }\n\n        var addedElements = [];\n        var originalDisplay = element.css('display');\n\n        function showStats() {\n          element.css('display', 'none');\n          var stats = $scope.stats;\n          if (!stats) {\n            stats = $scope.altStats;\n          }\n\n          angular.forEach(addedElements, function (value, key) {\n            value.remove();\n          });\n\n          var first = true;\n          var lastElement = element;\n\n          function append(text) {\n            var newElement = element.clone();\n            newElement.css('display', originalDisplay);\n            newElement.html(text);\n\n            lastElement.after(newElement);\n            lastElement = newElement;\n            addedElements.push(newElement);\n          }\n\n          // get stats that are used to summarise\n          var summaryForStats = {};\n          angular.forEach(stats, function (stat, key) {\n            var def = hCodeValues.stats[stat.id];\n            if (def && def.summaryFor) {\n              summaryForStats[def.summaryFor] = stat;\n            }\n          });\n\n          angular.forEach(stats, function (stat, key) {\n            var output = '';\n\n            // console.log('processing stat', stat);\n\n            if (stat.id in hCodeValues.stats) {\n\n              var def = hCodeValues.stats[stat.id];\n              if (!$scope.filter && 'hide' in def && def.hide) {\n                return;\n              }\n\n              if ($scope.filter && !def[$scope.filter]) {\n                return;\n              }\n\n              if (def.summaryFor) {\n                return;\n              }\n              // console.log('no summaryFor');\n\n              if (!first) {\n                output += sep;\n              }\n              first = false;\n\n              if ('needSetNum' in stat) {\n                if (stat.needSetNum <= $scope.numInSet) {\n                  output += '*';\n                }\n                output += stat.needSetNum + '&nbsp;';\n              }\n\n              output += '<strong>';\n\n              if ($scope.build) {\n                if (def.element == 'primary') {\n                  var eleId = 0;\n                  if ($scope.build.element) {\n                    eleId = $scope.build.element.id;\n                  }\n                  output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\n                } else if (def.element == 'secondary') {\n                  var eleId = 0;\n                  if ($scope.build.secondaryElement) {\n                    eleId = $scope.build.secondaryElement.id;\n                  }\n                  output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\n                }\n              }\n\n              output += $translate.instant(def.name) + ':</strong>&nbsp;' + def.display(stat);\n              if (def.combineWith > 0) {\n                angular.forEach(stats, function (stat2, key2) {\n                  if (stat2.id == def.combineWith) {\n                    if (stat2.max != stat.max) {\n                      output += '-' + def.display(stat2);\n                    }\n                  }\n                });\n              }\n\n              if (stat.id in summaryForStats) {\n                var sStat = summaryForStats[stat.id];\n                var sDef = hCodeValues.stats[sStat.id];\n                output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\n                output += '</em>';\n              }\n            } else {\n              if (!first) {\n                output += sep;\n              }\n              first = false;\n\n              if ('needSetNum' in stat) {\n                output += stat.needSetNum + '-Increases&nbsp;';\n              }\n\n              output += stat.id + ':&nbsp;' + stat.max;\n            }\n\n            append(output);\n          });\n        }\n\n        $scope.$watch('stats', function (newValue, oldValue) {\n          if (newValue) {\n            showStats();\n          }\n        });\n\n        $scope.$watch('altStats', function (newValue, oldValue) {\n          if (newValue) {\n            showStats();\n          }\n        });\n\n        $scope.$watch('numInSet', function (newValue, oldValue) {\n          if (newValue >= 0) {\n            showStats();\n          }\n        });\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-stats.js\n// module id = 92\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-stats.js?");

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\n\n  function dnsimStringToNumber() {\n    return {\n      require: 'ngModel',\n      link: function link(scope, element, attrs, ngModel) {\n        ngModel.$parsers.push(function (value) {\n          return '' + value;\n        });\n        ngModel.$formatters.push(function (value) {\n          return parseFloat(value, 10);\n        });\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-string-to-number.js\n// module id = 93\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-string-to-number.js?");

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\n\n  function dnsimStringToNumber() {\n    return {\n      require: 'ngModel',\n      link: function link(scope, element, attrs, ngModel) {\n        ngModel.$parsers.push(function (value) {\n          return '' + value / 100.0;\n        });\n        ngModel.$formatters.push(function (value) {\n          return parseFloat(value, 10) * 100;\n        });\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-string-to-percent.js\n// module id = 94\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-string-to-percent.js?");

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n        'use strict';\n\n        angular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\n\n        function fileChangeFunction($parse) {\n\n                return {\n                        restrict: 'A',\n                        link: function link($scope, element, attrs) {\n\n                                // Get the function provided in the file-change attribute.\n                                // Note the attribute has become an angular expression,\n                                // which is what we are parsing. The provided handler is \n                                // wrapped up in an outer function (attrHandler) - we'll \n                                // call the provided event handler inside the handler()\n                                // function below.\n                                var attrHandler = $parse(attrs['fileChange']);\n\n                                // This is a wrapper handler which will be attached to the\n                                // HTML change event.\n                                var handler = function handler(e) {\n\n                                        $scope.$apply(function () {\n\n                                                // Execute the provided handler in the directive's scope.\n                                                // The files variable will be available for consumption\n                                                // by the event handler.\n                                                attrHandler($scope, { $event: e, files: e.target.files });\n                                        });\n                                };\n\n                                // Attach the handler to the HTML change event \n                                element[0].addEventListener('change', handler, false);\n                        }\n                };\n        }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/file-change.js\n// module id = 95\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/file-change.js?");

/***/ }),
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = \"<div class=row>\\r\\n  <div class=\\\"col-xs-12 col-sm-8\\\">\\r\\n    <h3>contact</h3>\\r\\n    <p>\\r\\n      If you have any problems or want to make a suggestion come to my <a href=https://discord.gg/011C92KwJWoCfRcEY>&raquo;discord server</a><br/>\\r\\n      or<br/>\\r\\n      * use the <a href=https://github.com/spacem/dngearsim/issues>&raquo;github issue tracker</a><br/>\\r\\n      * use the <a href=http://feathub.com/spacem/dngearsim>&raquo;feathub feature voting</a><br/>\\r\\n    </p>\\r\\n    <h3>faq</h3>\\r\\n    <h4>How is average damage calculated and what is eqhp?</h4>\\r\\n    <p>\\r\\n      Something like:\\r\\n      <pre>damage = element% x (1 - element resist %) x skill% x fd% x (avg(dmg) + ((crit dmg-100%) x crit chance x (1 - crit resist%) x avg(dmg)))</pre>\\r\\n      I believe Rune Dragon is 20% critical resist but you can override this value for each build.\\r\\n      If you want to see the full calculations in the code these are in statService.js\\r\\n      <pre>eqhp = ( (hp / (1-pdef%)) + (hp / (1-mdef%)) ) / 2</pre>\\r\\n      eqhp is equivalent hp.\\r\\n      This is essentially the amount of damage you will take before you die.\\r\\n      It takes both hp and defence into acount.\\r\\n      There is magic and phisical defence so I work out both magic and physical eqhp and show the average.\\r\\n    </p>\\r\\n    <h4>Some skills do not work correctly?</h4>\\r\\n    <p>\\r\\n      I have implemented many skills now however there numerous classes I do not play.\\r\\n      Feel free to get in touch if you want to work with me to implement any extra skill for your class.\\r\\n    </p>\\r\\n    <h4>What is with all these items that do not exist in-game?</h4>\\r\\n    <p>\\r\\n      I show everything I can from the data files.\\r\\n      Some items may not exist also some items have duplicates but it is useful to see what might be coming.\\r\\n    </p>\\r\\n    <h4>How is the data stored?</h4>\\r\\n    <p>\\r\\n      Only published builds are saved to the server. Other builds may be lost if your browser is reset.\\r\\n      If you want to keep any builds without logging in you can export them as json files that can be shared and imported into another browser.\\r\\n      When you log in your log in to publish your build your details are sent directly from your browser to google firebase for authentication.\\r\\n    </p>\\r\\n    <h4>Growth spirits cannot be enhanced?</h4>\\r\\n    <p>\\r\\n      Stats for this are random so please create a custom item with the stats you get.\\r\\n    </p>\\r\\n    <h4>Why are the calcuations not accurate?</h4>\\r\\n    <p>\\r\\n      I believe they are - or at least out only by a tiny bit.\\r\\n      If your stats are marginally different most likely you are missing some item or passive skill, etc.\\r\\n      Feel free to ask if things do not look right.\\r\\n      If you publish your build I can have a look to see if there is a glitch that needs fixing.\\r\\n    </p>\\r\\n\\r\\n    <h3>advanced</h3>\\r\\n    <p>\\r\\n      For advanced configuration settings use <a ng-href=setup>&raquo;this link</a>\\r\\n    </p>\\r\\n  </div>\\r\\n    \\r\\n  <div class=\\\"col-sm-4 hidden-xs\\\">\\r\\n    <img src=\" + __webpack_require__(311) + \" />\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/about/about.html\n// module id = 108\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/about/about.html?");

/***/ }),
/* 109 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-12>\\r\\n  <div class=row>\\r\\n    <!-- Header -->\\r\\n    <div class=\\\"col-xs-12 col-md-5 col-lg-6 group-header\\\" ng-if=::!buildCtrl.server>\\r\\n        <h3 class=text-left>\\r\\n        <dnsim-job-icon item=::buildCtrl.build.job></dnsim-job-icon>\\r\\n        {{::buildCtrl.buildName}}\\r\\n        <small>\\r\\n          <span ng-show=\\\"::buildCtrl.build.playerLevel > 0 && buildCtrl.build.job && buildCtrl.build.job.id > 0 && buildCtrl.build.enemyLevel > 0\\\">\\r\\n            lv{{::buildCtrl.build.playerLevel}}&nbsp;{{::buildCtrl.build.job.name}}&nbsp;vs&nbsp;lv{{::buildCtrl.build.enemyLevel}}&nbsp;\\r\\n          </span>\\r\\n          <br/>\\r\\n          <span class=hidden-xs>{{::buildCtrl.getSaveDate()}} {{::buildCtrl.getSaveTime()}} <br/></span>\\r\\n          <span dnsim-stats build=buildCtrl.build stats=buildCtrl.stats.calculatedStats separator=\\\"'|'\\\" filter=\\\"'summaryDisplay'\\\"/>\\r\\n        </small>\\r\\n        </h3>\\r\\n    </div>\\r\\n    <dnsim-loading>\\r\\n    <!-- Small screen categories -->\\r\\n    <div class=\\\"col-xs-12 visible-xs-block\\\">\\r\\n      <dnsim-category-links collapse=true cat=buildCtrl.category build-screen=true on-change=buildCtrl.changeCategory() />\\r\\n    </div>\\r\\n    <!-- Small screen view switcher -->\\r\\n    <div class=\\\"col-xs-12 visible-xs-block\\\">\\r\\n      <button ng-click=\\\"buildCtrl.xsView = null\\\" class=\\\"btn btn-default\\\" ng-disabled=!buildCtrl.xsView>\\r\\n        {{'equip' | translate}}\\r\\n      </button>\\r\\n      <button ng-click=\\\"buildCtrl.xsView = 'actions'\\\" class=\\\"btn btn-default\\\" ng-disabled=\\\"buildCtrl.xsView == 'actions'\\\">\\r\\n        {{'build actions' | translate}}\\r\\n      </button>\\r\\n      <button ng-click=\\\"buildCtrl.xsView = 'stats'\\\" class=\\\"btn btn-default\\\" ng-disabled=\\\"buildCtrl.xsView == 'stats'\\\">\\r\\n        {{'build stats' | translate}}\\r\\n      </button>\\r\\n    </div>\\r\\n    <!-- actions -->\\r\\n    <div class=\\\"col-xs-12 col-md-7 col-lg-6\\\" ng-if=::!buildCtrl.server ng-class=\\\"{'hidden-xs': buildCtrl.xsView != 'actions'}\\\">\\r\\n      <br class=\\\"hidden-xs hidden-sm\\\"/><br class=\\\"hidden-xs hidden-sm\\\"/>\\r\\n      <dngearsim-build-actions build-name=buildCtrl.buildName build=buildCtrl.build on-change=buildCtrl.handleChange()>\\r\\n      </dngearsim-build-actions>\\r\\n    </div>\\r\\n    <div class=col-xs-6 ng-show=\\\"::buildCtrl.stats.calculatedStats.length == 0\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-10 col-md-12 alert alert-danger\\\" role=alert ng-if=\\\"buildCtrl.stats.calculatedStats.length == 0 || buildCtrl.stats.nakedStats.length == 0\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=true></span> \\r\\n      {{'you must edit the build and set both level and class' | translate}}\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-xs-12 col-md-9\\\" ng-class=\\\"{'hidden-xs': buildCtrl.xsView}\\\">\\r\\n      <br/>\\r\\n      <div class=row>\\r\\n        <!-- categories for large screens -->\\r\\n        <div class=\\\"hidden-xs col-sm-4 col-md-4\\\">\\r\\n          <dnsim-category-links cat=buildCtrl.category build-screen=true on-change=buildCtrl.changeCategory() />\\r\\n        </div>\\r\\n    \\r\\n        <!-- categories for large screens -->\\r\\n        <div class=\\\"col-xs-12 col-sm-8 col-md-8 dnsim-fade\\\" ng-if=!buildCtrl.categoryChanging>\\r\\n          <!-- links above items (quick add/new custom items/position talismans) -->\\r\\n          <div class=\\\"row table-look\\\">\\r\\n            <div class=col-xs-12 ng-if=::!buildCtrl.server>\\r\\n              <dngearsim-quick-add build=buildCtrl.build build-name=::buildCtrl.buildName category=buildCtrl.category on-change=buildCtrl.handleChange() ng-if=buildCtrl.allowMoreItems()></dngearsim-quick-add>\\r\\n              <span ng-if=\\\"buildCtrl.category.name == 'talisman'\\\">&nbsp;\\r\\n                <a class=\\\"btn btn-link\\\" ng-href=talismans>\\r\\n                  <span class=\\\"glyphicon glyphicon-move\\\" aria-hidden=true></span>&nbsp;{{'position' | translate}}\\r\\n                </a>\\r\\n              </span>\\r\\n              <span ng-if=\\\"buildCtrl.category.name == 'custom'\\\">\\r\\n                &nbsp;\\r\\n                <button class=\\\"btn btn-link\\\" ng-click=buildCtrl.newCustom()>\\r\\n                  <span class=\\\"glyphicon glyphicon-plus-sign\\\" aria-hidden=true></span>&nbsp;{{'new custom item' | translate}}\\r\\n                </button>\\r\\n              </span>\\r\\n              <span style=float:right ng-if=!buildCtrl.canMove()>\\r\\n              <strong>{{buildCtrl.getItemCount()}} <span class=hidden-xs>{{buildCtrl.category.name}}</span></strong>\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- build item list -->\\r\\n          <dngearsim-build-item-list category=buildCtrl.category build=buildCtrl.build build-name=buildCtrl.buildName server=buildCtrl.server on-change=buildCtrl.handleChange()>\\r\\n          </dngearsim-build-item-list>\\r\\n\\r\\n          <!-- search link -->\\r\\n          <div class=\\\"row table-look\\\" ng-if=\\\"buildCtrl.category.name != 'custom'\\\">\\r\\n            <div class=col-xs-12 ng-if=::!buildCtrl.server>\\r\\n              <a ng-href=\\\"search?cat={{buildCtrl.category.path}}\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-search\\\" aria-hidden=true></span>\\r\\n                {{'search' | translate}} {{buildCtrl.category.name}}\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <!-- stats -->\\r\\n    <div class=\\\"col-xs-12 col-md-3 group-header\\\" ng-class=\\\"{'hidden-xs': buildCtrl.xsView != 'stats'}\\\">\\r\\n      <div class=row>\\r\\n       <dngearsim-build-stats stats=buildCtrl.stats build=::buildCtrl.build build-name=::buildCtrl.buildName>\\r\\n       </dngearsim-build-stats>\\r\\n      </div>\\r\\n    </div>\\r\\n    </dnsim-loading>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build.html\n// module id = 109\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build.html?");

/***/ }),
/* 110 */
/***/ (function(module, exports) {

eval("module.exports = \"<span class=hidden-xs>\\r\\n<button class=\\\"btn btn-default\\\" ng-click=buildActions.editGroup()>\\r\\n    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=true></span>\\r\\n    {{'edit' | translate}}\\r\\n</button>\\r\\n<!--\\r\\n<button class=\\\"btn btn-default\\\" ng-click=\\\"buildActions.reloadGroup()\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    reload\\r\\n</button> \\r\\n-->\\r\\n<button class=\\\"btn btn-default\\\" ng-click=buildActions.copyGroup()>\\r\\n    <span class=\\\"glyphicon glyphicon-copy\\\" aria-hidden=true></span>\\r\\n    {{'copy' | translate}}\\r\\n</button>\\r\\n<button class=\\\"btn btn-default\\\" ng-click=buildActions.deleteGroup()>\\r\\n    <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=true></span>\\r\\n    {{'delete' | translate}}\\r\\n</button>\\r\\n<dngearsim-build-export-action style=padding:4px build=buildActions.build build-name=buildActions.buildName>\\r\\n</dngearsim-build-export-action>\\r\\n<a class=\\\"btn btn-default\\\" ng-href=publish>\\r\\n    <span class=\\\"glyphicon glyphicon-log-in\\\" aria-hidden=true></span>\\r\\n    {{'publish' | translate}}\\r\\n</a>\\r\\n</span>\\r\\n\\r\\n<span class=visible-xs-block>\\r\\n<br/>\\r\\n<button class=\\\"btn btn-default btn-block\\\" ng-click=buildActions.editGroup()>\\r\\n    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=true></span>\\r\\n    {{'edit' | translate}}\\r\\n</button>\\r\\n<button class=\\\"btn btn-default btn-block\\\" ng-click=buildActions.copyGroup()>\\r\\n    <span class=\\\"glyphicon glyphicon-copy\\\" aria-hidden=true></span>\\r\\n    {{'copy' | translate}}\\r\\n</button>\\r\\n<!--\\r\\n<button class=\\\"btn btn-default btn-block\\\" ng-click=\\\"buildActions.reloadGroup()\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    reload\\r\\n</button> \\r\\n-->\\r\\n<button class=\\\"btn btn-default btn-block\\\" ng-click=buildActions.deleteGroup()>\\r\\n    <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=true></span>\\r\\n    {{'delete' | translate}}\\r\\n</button>\\r\\n<dngearsim-build-export-action build=buildActions.build build-name=buildActions.buildName>\\r\\n</dngearsim-build-export-action>\\r\\n<a class=\\\"btn btn-default btn-block\\\" ng-href=publish>\\r\\n    <span class=\\\"glyphicon glyphicon-log-in\\\" aria-hidden=true></span>\\r\\n    {{'publish' | translate}}\\r\\n</a>\\r\\n</span>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-actions.html\n// module id = 110\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-actions.html?");

/***/ }),
/* 111 */
/***/ (function(module, exports) {

eval("module.exports = \"<span class=hidden-xs>\\r\\n<button ng-click=ctrl.export() class=\\\"btn btn-default\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-export\\\" aria-hidden=true></span>\\r\\n    <span class=hidden-xs>\\r\\n    {{'export' | translate}}\\r\\n    </span>\\r\\n</button>\\r\\n</span>\\r\\n\\r\\n<button ng-click=ctrl.export() class=\\\"btn btn-default btn-block visible-xs-block\\\" style=margin-top:5px;margin-bottom:5px>\\r\\n    <span class=\\\"glyphicon glyphicon-export\\\" aria-hidden=true></span>\\r\\n    {{'export' | translate}}\\r\\n</button>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-export-action.html\n// module id = 111\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-export-action.html?");

/***/ }),
/* 112 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row>\\r\\n    <div class=col-xs-12>\\r\\n    <h3>\\r\\n        {{'import build' | translate}}\\r\\n        <small>{{'choose a file containing dngearsim build data' | translate}}</small>\\r\\n    </h3>\\r\\n    <br/>\\r\\n    <input type=file file-change=\\\"ctrl.onFileChange($event, files)\\\" accept=.json>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=row ng-if=ctrl.build>\\r\\n  <div class=col-xs-12 ng-if=ctrl.build>\\r\\n    <h3>\\r\\n      <dnsim-job-icon item=::ctrl.build.job></dnsim-job-icon>\\r\\n      {{ctrl.buildName}} \\r\\n      <span ng-if=ctrl.build.guild>[{{ctrl.build.guild}}]</span>\\r\\n      <small>\\r\\n        <span ng-if=ctrl.build.region>in {{ctrl.build.region}}</span>\\r\\n        <span ng-if=ctrl.build.about>\\r\\n          <br/>\\r\\n          <em>\\r\\n            {{ctrl.build.about}}\\r\\n          </em>\\r\\n        </span>\\r\\n        <br/>\\r\\n        <span dnsim-stats build=ctrl.build stats=ctrl.stats.calculatedStats separator=\\\"'|'\\\" filter=\\\"'summaryDisplay'\\\"/>\\r\\n      </small>\\r\\n    </h3>\\r\\n    \\r\\n    <button class=\\\"btn btn-default\\\" ng-click=ctrl.copyLocally()>\\r\\n      {{'copy into local builds' | translate}}\\r\\n    </button>\\r\\n\\r\\n    <dngearsim-build server=true build-name=ctrl.buildName build=ctrl.build>\\r\\n    </dngearsim-build>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-import.html\n// module id = 112\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-import.html?");

/***/ }),
/* 113 */
/***/ (function(module, exports) {

eval("module.exports = \"<div style=float:right;clear:right ng-if=\\\"ctrl.item.itemSource == 'gem'\\\" class=container-fluid>\\r\\n  <div ng-show=ctrl.changingGemSlot class=btn-group-vertical ng-if=ctrl.editMode>\\r\\n    <button ng-class=\\\"{'btn': true, 'btn-default': true, 'disabled': ctrl.item.gemSlot == gemSlot.id}\\\" ng-click=\\\"ctrl.item.gemSlot = gemSlot.id;ctrl.onChange()\\\" ng-repeat=\\\"gemSlot in ctrl.gemSlots track by $index\\\">\\r\\n      <span>\\r\\n        {{gemSlot.name}}\\r\\n      </span>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<div style=float:clear>\\r\\n  <dnsim-item-link item=ctrl.item></dnsim-item-link>\\r\\n</div>\\r\\n<div style=float:left;width:140px>\\r\\n  <span dnsim-stats stats=ctrl.item.fullStats alt-stats=ctrl.item.stats filter=\\\"'dps'\\\" separator=\\\"'<br />'\\\"/>\\r\\n</div>\\r\\n<div style=float:left>\\r\\n  <span dnsim-stats stats=ctrl.item.fullStats alt-stats=ctrl.item.stats filter=\\\"'def'\\\" separator=\\\"'<br />'\\\"/>\\r\\n</div>\\r\\n<div style=clear:both ng-if=ctrl.editMode class=container-fluid>\\r\\n  <dngearsim-item-edit item=ctrl.item on-change=ctrl.onChange() update-item=ctrl.updateItem()></dngearsim-item-edit>\\r\\n  <br/>\\r\\n</div>\\r\\n<div ng-if=ctrl.editMode style=float:right>\\r\\n  <button class=\\\"btn btn-default\\\" ng-click=ctrl.onChange()>\\r\\n    {{'apply' | translate}}\\r\\n  </button>\\r\\n  <button class=\\\"btn btn-default\\\" ng-click=ctrl.cancelEdit()>\\r\\n    {{'cancel' | translate}}\\r\\n  </button>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-item.html\n// module id = 113\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-item.html?");

/***/ }),
/* 114 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"row table-look\\\" ng-repeat=\\\"(exchange, subCat) in buildCtrl.getSubCategories() track by $index\\\" ng-class=\\\"{'dnsim-card': subCat}\\\">\\r\\n    <!-- subcategory summary -->\\r\\n    <span style=float:right ng-if=\\\"subCat && !buildCtrl.moveItem\\\">\\r\\n        {{buildCtrl.getNumTaken(subCat)}}/{{subCat.slots}} {{'equipped' | translate}}\\r\\n    </span>\\r\\n    <em ng-if=\\\"subCat && !buildCtrl.moveItem\\\" ng-repeat=\\\"subCatName in subCat.names track by $index\\\">\\r\\n        {{subCatName}}<br/>\\r\\n    </em>\\r\\n\\r\\n    <!-- buttons to move to/from the subcategory -->\\r\\n    <button class=\\\"btn btn-defualt btn-block dnsim-card\\\" ng-if=\\\"subCat && buildCtrl.moveItem && buildCtrl.isInSubCat(buildCtrl.moveItem, subCat)\\\" ng-click=\\\"buildCtrl.move(buildCtrl.moveItem, subCat);buildCtrl.moveItem = null;\\\">\\r\\n        <span style=float:right>\\r\\n        {{buildCtrl.getNumTaken(subCat)}}/{{subCat.slots}} {{'equipped' | translate}}\\r\\n        </span>\\r\\n        {{'keep on' | translate}}<br/>\\r\\n        <em ng-repeat=\\\"subCatName in subCat.names track by $index\\\">\\r\\n        {{subCatName}}<br/>\\r\\n        </em>\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-defualt btn-block dnsim-card\\\" ng-if=\\\"subCat && buildCtrl.moveItem && !buildCtrl.isInSubCat(buildCtrl.moveItem, subCat)\\\" ng-click=\\\"buildCtrl.move(buildCtrl.moveItem, subCat);buildCtrl.moveItem = null;\\\">\\r\\n        <span style=float:right>\\r\\n        {{buildCtrl.getNumTaken(subCat)}}/{{subCat.slots}} {{'equipped' | translate}}\\r\\n        </span>\\r\\n        {{'move to' | translate}}<br/>\\r\\n        <em ng-repeat=\\\"subCatName in subCat.names track by $index\\\">\\r\\n        {{subCatName}}<br/>\\r\\n        </em>\\r\\n    </button>\\r\\n\\r\\n    <!-- quick add -->\\r\\n    <div ng-if=\\\"subCat && !buildCtrl.moveItem && buildCtrl.getNumTaken(subCat) < subCat.slots\\\">\\r\\n        <dngearsim-quick-add gem-slot=buildCtrl.getGemSlot(subCat) build=buildCtrl.build build-name=::buildCtrl.buildName category=buildCtrl.category on-change=buildCtrl.handleChange() ng-if=buildCtrl.allowMoreItems()></dngearsim-quick-add>\\r\\n    </div>\\r\\n\\r\\n    <!-- moving label -->\\r\\n    <span ng-if=\\\"buildCtrl.moveItem && buildCtrl.isInSubCat(buildCtrl.moveItem, subCat)\\\">moving:</span>\\r\\n\\r\\n    <!-- moving item -->\\r\\n    <dngearsim-build-item item=buildCtrl.moveItem ng-if=\\\"buildCtrl.moveItem && buildCtrl.isInSubCat(buildCtrl.moveItem, subCat)\\\" on-change=buildCtrl.handleItemEdit() cancel-edit=buildCtrl.cancelEdit()></dngearsim-build-item>\\r\\n\\r\\n    <!--items within the subcategory -->\\r\\n    <div class=\\\"col-xs-12 dnsim-card dnsim-disolve\\\" ng-repeat=\\\"result in buildCtrl.getCategoryItems()\\\" ng-if=\\\"buildCtrl.isInSubCat(result, subCat) && !buildCtrl.moveItem\\\">\\r\\n        <dngearsim-build-item item=result on-change=buildCtrl.handleItemEdit() cancel-edit=buildCtrl.cancelEdit() edit-mode=\\\"buildCtrl.editItem == result\\\"></dngearsim-build-item>\\r\\n        <div ng-if=\\\"!buildCtrl.server && buildCtrl.editItem != result\\\" style=float:right>\\r\\n        <button class=\\\"btn btn-default\\\" ng-click=\\\"buildCtrl.moveItem = result\\\" ng-if=\\\"buildCtrl.canMove() && !buildCtrl.moveItem\\\">\\r\\n            {{'move' | translate}}\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-default\\\" ng-click=\\\"buildCtrl.editItem = result\\\" ng-if=\\\"buildCtrl.canEdit(result) && !buildCtrl.moveItem\\\">\\r\\n            {{'edit' | translate}}\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-default\\\" ng-click=buildCtrl.removeItem(result); ng-if=!buildCtrl.moveItem>\\r\\n            {{'remove' | translate}}\\r\\n        </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-item-list.html\n// module id = 114\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-item-list.html?");

/***/ }),
/* 115 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-6 col-md-12\\\" ng-show=\\\"statsCtrl.stats.calculatedStats.length > 0\\\">\\r\\n  <h4>{{'calculated&nbsp;stats' | translate}}</h4>\\r\\n  <div dnsim-stats stats=statsCtrl.stats.calculatedStats build=build></div>\\r\\n  <button class=\\\"btn btn-link\\\" ng-click=statsCtrl.exportStatCard()>&raquo;{{'export&nbsp;divinitor&nbsp;statcard' | translate}}</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-6 col-md-12\\\" ng-show=\\\"statsCtrl.stats.setStats.length > 0\\\">\\r\\n  <h4>{{'set&nbsp;stats' | translate}}</h4>\\r\\n  <button class=\\\"btn btn-link\\\" ng-show=!statsCtrl.showSetStats ng-click=\\\"statsCtrl.showSetStats = true\\\">&raquo;show&nbsp;set&nbsp;stats</button>\\r\\n  <div ng-if=statsCtrl.showSetStats dnsim-stats stats=statsCtrl.stats.setStats></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-6 col-md-12\\\">\\r\\n  <h4>{{'item&nbsp;stats' | translate}}</h4>\\r\\n  <button class=\\\"btn btn-link\\\" ng-show=!statsCtrl.showItemStats ng-click=\\\"statsCtrl.showItemStats = true\\\">&raquo;show&nbsp;item&nbsp;stats</button>\\r\\n  <div ng-if=statsCtrl.showItemStats dnsim-stats stats=statsCtrl.stats.combinedStats></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-6 col-md-12\\\" ng-show=\\\"statsCtrl.stats.heroStats != null && statsCtrl.stats.heroStats.length > 0\\\">\\r\\n  <h4>{{'hero&nbsp;stats' | translate}}</h4>\\r\\n  <button class=\\\"btn btn-link\\\" ng-show=!statsCtrl.showHeroStats ng-click=\\\"statsCtrl.showHeroStats = true\\\">&raquo;{{'show&nbsp;hero&nbsp;stats' | translate}}</button>\\r\\n  <div ng-if=statsCtrl.showHeroStats dnsim-stats stats=statsCtrl.stats.heroStats></div>\\r\\n</div>\\r\\n<div class=\\\"col-xs-6 col-md-12\\\" ng-show=\\\"statsCtrl.stats.nakedStats.length > 0\\\">\\r\\n  <h4>{{'naked&nbsp;stats' | translate}}</h4>\\r\\n  <button class=\\\"btn btn-link\\\" ng-show=!statsCtrl.showNakedStats ng-click=\\\"statsCtrl.showNakedStats = true\\\">&raquo;{{'show&nbsp;naked&nbsp;stats' | translate}}</button>\\r\\n  <div ng-if=statsCtrl.showNakedStats dnsim-stats stats=statsCtrl.stats.nakedStats></div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-stats.html\n// module id = 115\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-stats.html?");

/***/ }),
/* 116 */
/***/ (function(module, exports) {

eval("module.exports = \"<h3 class=text-left>\\r\\n  <dnsim-job-icon item=::buildCtrl.build.job></dnsim-job-icon>\\r\\n  {{::buildCtrl.buildName}}\\r\\n<small>\\r\\n  <span ng-show=\\\"::buildCtrl.build.playerLevel > 0\\\">lv{{::buildCtrl.build.playerLevel}}&nbsp;</span>\\r\\n  <span ng-show=\\\"::buildCtrl.build.job && buildCtrl.build.job.id > 0\\\">{{::buildCtrl.build.job.name}}&nbsp;</span>\\r\\n  <span ng-show=\\\"::buildCtrl.build.enemyLevel > 0\\\">{{'vs' | translate}}&nbsp;lv{{::buildCtrl.build.enemyLevel}}&nbsp;</span>\\r\\n  <br/>\\r\\n  <span ng-if=buildCtrl.getSaveDate()>\\r\\n  {{::buildCtrl.getSaveDate()}} {{::buildCtrl.getSaveTime()}}<span class=hidden-xs> |&nbsp; </span><br class=visible-xs />\\r\\n  </span>\\r\\n  <span dnsim-stats build=::buildCtrl.build stats=::buildCtrl.stats.calculatedStats separator=\\\"'|'\\\" filter=\\\"'summaryDisplay'\\\"></span><br/>\\r\\n</small>\\r\\n</h3>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-summary.html\n// module id = 116\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-summary.html?");

/***/ }),
/* 117 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row>\\r\\n  <div class=\\\"col-sm-4 text-right hidden-xs\\\">\\r\\n    <h4>\\r\\n    {{'position talismans for' | translate}}:\\r\\n    </h4>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 visible-xs-block\\\">\\r\\n    <h4>\\r\\n    {{'position talismans for' | translate}}:\\r\\n    </h4>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-sm-8\\\">\\r\\n    <div class=row ng-if=ctrl.groupName>\\r\\n      <div class=col-xs-12>\\r\\n        <h4><a ng-href=\\\"build?buildName={{ctrl.groupName}}\\\">{{ctrl.groupName}}</a><br/> <small> <span dnsim-stats build=ctrl.getBuild() stats=ctrl.getGroupCalcStats() separator=\\\"'|'\\\" filter=\\\"'summaryDisplay'\\\"/> </small> </h4>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=row>\\r\\n  <div class=col-xs-12 ng-if=\\\"ctrl.selectedIndex == -1\\\">\\r\\n    <br/>\\r\\n    {{'click a talisman to change its location' | translate}}\\r\\n  </div>\\r\\n  <div class=col-xs-12 ng-if=\\\"ctrl.selectedIndex > -1\\\">\\r\\n    <br/>\\r\\n    {{'now click where you want to move it or' | translate}} <btn class=btn-link ng-click=\\\"ctrl.selectedIndex = -1\\\">{{'cancel' | translate}}</btn>\\r\\n  </div>\\r\\n  <div class=col-xs-12>&nbsp;</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=row ng-repeat=\\\"r in ctrl.rows track by $index\\\">\\r\\n  <div class=col-xs-3 ng-repeat=\\\"c in r track by $index\\\">\\r\\n    <div class=row>\\r\\n\\r\\n    <button class=\\\"btn row btn-block btn-default talisman-toggle\\\" ng-disabled=\\\"c == null && ctrl.selectedIndex == -1\\\" ng-click=ctrl.click(c)>\\r\\n      <div class=\\\"col-xs-12 col-sm-4 col-md-2 text-center\\\">\\r\\n        <dnsim-item-icon item=c.item />\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-12 col-sm-8 col-md-10\\\" style=height:50px>\\r\\n        <div dnsim-stats stats=c.item.fullStats alt-stats=c.item.stats ng-if=\\\"c.index >= 0\\\"></div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=col-xs-12 style=height:70px>\\r\\n        <small ng-if=\\\"ctrl.selectedIndex != c.index && ctrl.selectedIndex >= 0 && ctrl.getReplaceAffectAmount(statId, c.index, c.item)\\\" ng-repeat=\\\"statId in ctrl.summaryStatIds\\\">\\r\\n\\r\\n          <b ng-if=\\\"ctrl.getReplaceAffectAmount(statId, c.index, c.item) > 0\\\">+</b>{{ctrl.getReplaceAffectAmount(statId, c.index, c.item)}}%\\r\\n          {{ctrl.getStatName(statId)}}\\r\\n          <br/>\\r\\n        </small>\\r\\n      </div>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=row>&nbsp;</div>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div class=row>  \\r\\n  <div class=col-xs-12>\\r\\n    &nbsp;\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=row>\\r\\n  <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=ctrl.save()>\\r\\n      <span class=\\\"glyphicon glyphicon-floppy-disk\\\" aria-hidden=true></span>\\r\\n      {{'save' | translate}}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/build-talismans.html\n// module id = 117\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/build-talismans.html?");

/***/ }),
/* 118 */
/***/ (function(module, exports) {

eval("module.exports = \"<h2>{{'delete build?' | translate}}<br/><small>{{deleteBuild.name}}</small></h2>\\r\\n\\r\\n<p>{{'Are you sure you want to delete this build?' | translate}}</p>\\r\\n\\r\\n<p>\\r\\n<button class=\\\"btn btn-default\\\" ng-click=deleteBuild.delete()><span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=true></span> {{'delete' | translate}}</button>\\r\\n</p>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/delete-build.html\n// module id = 118\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/delete-build.html?");

/***/ }),
/* 119 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-loading>\\r\\n<button class=\\\"btn btn-link\\\" ng-if=\\\"!quickAdd.hasStarted() && quickAdd.hasOptions()\\\" ng-click=quickAdd.start()>\\r\\n<span class=\\\"glyphicon glyphicon-plus-sign\\\" aria-hidden=true></span>\\r\\n  {{'quick add' | translate}} <span ng-if=quickAdd.gemSlot>{{'here' | translate}}</span>\\r\\n</button>\\r\\n<div class=row ng-if=quickAdd.hasStarted()>\\r\\n  <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-link\\\" ng-click=quickAdd.back() ng-disabled=\\\"quickAdd.stepNumber == 0\\\">&lt; {{'back' | translate}}</button>\\r\\n    |\\r\\n    <button class=\\\"btn btn-link\\\" ng-click=quickAdd.cancel()>{{'cancel' | translate}}</button>\\r\\n  </div>\\r\\n  <div class=col-xs-12>\\r\\n    {{'quick add' | translate}}:\\r\\n    <span ng-repeat=\\\"data in quickAdd.datas track by $index\\\">\\r\\n      {{data.value.name}}\\r\\n    </span>&nbsp;\\r\\n  </div>\\r\\n  <div class=col-xs-12>\\r\\n    <span ng-if=\\\"quickAdd.options.length == 0\\\">\\r\\n      {{'no matching items found...' | translate}}\\r\\n    </span>\\r\\n      \\r\\n    <button class=\\\"btn btn-default btn-block dnsim-card\\\" ng-click=quickAdd.selectOption(option) ng-repeat=\\\"option in quickAdd.options track by $index\\\">\\r\\n      <span ng-if=option.name>\\r\\n        {{option.name}}\\r\\n      </span>\\r\\n      <div ng-if=\\\"option.stats != null\\\" style=margin:auto class=text-left>\\r\\n        <div style=width:100px;float:left;min-height:10px class=hidden-xs>\\r\\n          &nbsp;\\r\\n        </div>\\r\\n        <div style=width:140px;float:left;min-height:10px>\\r\\n          <span dnsim-stats stats=option.stats filter=\\\"'dps'\\\" separator=\\\"'<br />'\\\"/>\\r\\n        </div>\\r\\n        <div style=float:left>\\r\\n          <span dnsim-stats stats=option.stats filter=\\\"'def'\\\" separator=\\\"'<br />'\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n</dnsim-loading>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/quick-add.html\n// module id = 119\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/quick-add.html?");

/***/ }),
/* 120 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-loading>\\r\\n<div ng-if=!ctrl.reloaded>\\r\\n<h2>{{'reload build?' | translate}}<br/><small>{{ctrl.name}}</small></h2>\\r\\n    <p>{{'Are you sure you want to reload this build?' | translate}}</p>\\r\\n    <p>{{'This will update stats of all items using data of the selected region. Items not in this region may be lost.' | translate}}</p>\\r\\n    \\r\\n    <p>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=ctrl.reload()><span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=true></span> {{'reload' | translate}}</button>\\r\\n    </p>\\r\\n</div>\\r\\n</dnsim-loading>\\r\\n<div ng-if=ctrl.reloaded>\\r\\n    <br/>\\r\\n    {{'reload complete' | translate}}<br/><br/>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=ctrl.goToBuild()><span class=\\\"glyphicon glyphicon-arrow-left\\\" aria-hidden=true></span> {{'back' | translate}}</button>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/reload-build.html\n// module id = 120\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/reload-build.html?");

/***/ }),
/* 121 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row ng-hide=anyItems>\\r\\n  <div class=col-xs-12>\\r\\n  {{'nothing saved' | translate}}\\r\\n  </div>\\r\\n</div>\\r\\n<div id=savedGroup>\\r\\n<dnsim-loading>\\r\\n  <div class=col-xs-12>\\r\\n    <a class=\\\"btn btn-link\\\" ng-href={{build.shortUrl}} ng-show=\\\"build.shortUrl != null\\\">\\r\\n      {{build.shortUrl}}\\r\\n    </a>\\r\\n  </div>\\r\\n  \\r\\n  <dngearsim-build-summary build-name=buildName build=build>\\r\\n  </dngearsim-build-summary>\\r\\n\\r\\n  <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=copyGroup()>\\r\\n      <span class=\\\"glyphicon glyphicon-save-file\\\">\\r\\n      </span>\\r\\n      {{'copy into saved groups' | translate}}\\r\\n    </button>\\r\\n    <br/>\\r\\n    <br/>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-2 group-header\\\">\\r\\n    <div class=row>\\r\\n     <dngearsim-build-stats stats=stats>\\r\\n     </dngearsim-build-stats>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-10\\\">\\r\\n    <table class=table>\\r\\n    <tr class=row ng-repeat=\\\"result in build.items track by $index\\\">\\r\\n      <td>\\r\\n      <div class=col-xs-12>\\r\\n        <dnsim-item-link item=result />\\r\\n      </div>\\r\\n      <div class=col-xs-12>\\r\\n        <span dnsim-stats stats=result.fullStats alt-stats=result.stats separator=\\\"'|'\\\"/>\\r\\n      </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</dnsim-loading>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds/view-group.html\n// module id = 121\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds/view-group.html?");

/***/ }),
/* 122 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <div ng-if=::!editCtrl.groupName>\\r\\n  <p>\\r\\n    <a ng-href=new-build>{{'Create a build to see how this item will affect your damage.' | translate}}</a>\\r\\n  </p>\\r\\n  </div>\\r\\n  <div class=row ng-if=::editCtrl.groupName>\\r\\n    <div class=\\\"col-xs-12 col-md-5\\\">\\r\\n      <h4>\\r\\n        <dnsim-job-icon item=editCtrl.getBuild().job></dnsim-job-icon>\\r\\n        <a ng-href=\\\"build?buildName={{editCtrl.groupName}}\\\">{{editCtrl.groupName}}</a>\\r\\n        <br ng-if=!editCtrl.compact />\\r\\n        <small class=hidden-xs ng-if=!editCtrl.compact>\\r\\n          <span dnsim-stats build=editCtrl.getBuild() stats=editCtrl.getGroupCalcStats() separator=\\\"'|'\\\" filter=\\\"'summaryDisplay'\\\"/>\\r\\n        </small>\\r\\n      </h4>\\r\\n      <div>\\r\\n        <button class=\\\"btn btn-link\\\" ng-show=\\\"::editCtrl.groupNames.length > 1\\\" ng-dblclick=editCtrl.prevGroup() ng-click=editCtrl.prevGroup()>&lt; prev build</button>\\r\\n        <span ng-if=\\\"::editCtrl.groupNames.length > 1\\\"> | </span>\\r\\n        <button class=\\\"btn btn-link\\\" ng-show=\\\"::editCtrl.groupNames.length > 1\\\" ng-dblclick=editCtrl.nextGroup() ng-click=editCtrl.nextGroup()>next build &gt;</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-md-7\\\" ng-if=!editCtrl.hasMaxExchangable() style=padding-top:8px>\\r\\n      <div style=float:left;height:85px;padding-right:10px>\\r\\n      <button class=\\\"btn btn-default\\\" ng-dblclick=editCtrl.addToGroup() ng-click=editCtrl.addToGroup()>add</button>\\r\\n      <br/><br/><br/>\\r\\n      </div>\\r\\n      \\r\\n      <span ng-if=\\\"editCtrl.getAddAffectAmount(statId) != 0\\\" ng-repeat=\\\"statId in editCtrl.summaryStatIds track by statId\\\">\\r\\n        <b ng-if=\\\"editCtrl.getAddAffectAmount(statId) > 0\\\">{{'increase' | translate}}</b>\\r\\n        <b ng-if=\\\"editCtrl.getAddAffectAmount(statId) < 0\\\">{{'decreases' | translate}}</b>\\r\\n        {{editCtrl.getStatName(statId)}} {{editCtrl.getAddAffectAmount(statId)}}%\\r\\n        <br/>\\r\\n      </span>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 bg-danger\\\" ng-if=\\\"editCtrl.getGroupCalcStats().length == 0\\\">\\r\\n        {{'this build needs to be set up before stats can be shown' | translate}}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row dnsim-fade\\\" ng-repeat=\\\"groupItem in editCtrl.getGroupItems()\\\" ng-init=\\\"listIndex = $index\\\">\\r\\n    <div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n      <div class=dnsim-card>\\r\\n        <dngearsim-build-item item=groupItem></dngearsim-build-item>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-md-6\\\" style=padding-top:8px>\\r\\n      <button class=\\\"btn btn-default\\\" ng-dblclick=editCtrl.replace(groupItem) ng-click=editCtrl.replace(groupItem)>{{'replace' | translate}}</button>\\r\\n      <div style=padding-top:8px>\\r\\n      <div ng-if=\\\"editCtrl.getReplaceAffectAmount(statId, listIndex, groupItem) != 0\\\" ng-repeat=\\\"statId in editCtrl.summaryStatIds track by statId\\\">\\r\\n        <b ng-if=\\\"editCtrl.getReplaceAffectAmount(statId, listIndex, groupItem) > 0\\\">{{'increase' | translate}}</b>\\r\\n        <b ng-if=\\\"editCtrl.getReplaceAffectAmount(statId, listIndex, groupItem) < 0\\\">{{'decreases' | translate}}</b>\\r\\n        {{editCtrl.getStatName(statId)}} {{editCtrl.getReplaceAffectAmount(statId, listIndex, groupItem)}}%\\r\\n      </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/group-assignment.html\n// module id = 122\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/group-assignment.html?");

/***/ }),
/* 123 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row>\\r\\n  <dngearsim-item-edit-enchantment item=ctrl.item on-change=ctrl.onUpdateItem()>\\r\\n  </dngearsim-item-edit-enchantment>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"ctrl.item.typeName == 'talisman'\\\">\\r\\n  <dngearsim-item-edit-talisman item=ctrl.item on-change=ctrl.onUpdateItem()>\\r\\n  </dngearsim-item-edit-talisman>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"ctrl.item.typeName == 'custom'\\\">\\r\\n  <dngearsim-item-edit-custom item=ctrl.item on-change=ctrl.onUpdateItem()>\\r\\n  </dngearsim-item-edit-custom>\\r\\n</div>\\r\\n<div class=row ng-if=\\\"ctrl.item.typeName == 'skills'\\\">\\r\\n  <dngearsim-item-edit-skill item=ctrl.item on-change=ctrl.onUpdateItem()>\\r\\n  </dngearsim-item-edit-skill>\\r\\n</div>\\r\\n<div class=row>\\r\\n  <dngearsim-item-edit-spark item=ctrl.item on-change=ctrl.onUpdateItem()>\\r\\n  </dngearsim-item-edit-spark>\\r\\n</div>\\r\\n      \";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit.html\n// module id = 123\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit.html?");

/***/ }),
/* 124 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-12>\\r\\n  <button ng-disabled=\\\"editCtrl.customView=='basic' || !editCtrl.customView\\\" class=\\\"btn btn-link\\\" ng-click=\\\"editCtrl.customView='basic'\\\">\\r\\n    {{'basic' | translate}}\\r\\n  </button> |\\r\\n  <button ng-disabled=\\\"editCtrl.customView=='dmg'\\\" class=\\\"btn btn-link\\\" ng-click=\\\"editCtrl.customView='dmg'\\\">\\r\\n    {{'dmg' | translate}}\\r\\n  </button> |\\r\\n  <button ng-disabled=\\\"editCtrl.customView=='def'\\\" class=\\\"btn btn-link\\\" ng-click=\\\"editCtrl.customView='def'\\\">\\r\\n    {{'def' | translate}}\\r\\n  </button> |\\r\\n  <button ng-disabled=\\\"editCtrl.customView=='special'\\\" class=\\\"btn btn-link\\\" ng-click=\\\"editCtrl.customView='special'\\\">\\r\\n    {{'special' | translate}}\\r\\n  </button> |\\r\\n  <button ng-disabled=\\\"editCtrl.customView=='stats'\\\" class=\\\"btn btn-link\\\" ng-click=\\\"editCtrl.customView='stats'\\\">\\r\\n    {{'overview' | translate}}\\r\\n  </button> |\\r\\n  <button ng-disabled=\\\"editCtrl.customView=='name'\\\" class=\\\"btn btn-link\\\" ng-click=\\\"editCtrl.customView='name'\\\">\\r\\n    {{'name' | translate}}\\r\\n  </button>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-switch=editCtrl.customView>\\r\\n  <div class=row ng-switch-when=stats>\\r\\n    <div class=col-xs-12 dnsim-stats stats=editCtrl.item.stats>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=row ng-switch-default>\\r\\n    <div class=col-xs-4>\\r\\n      <label>str</label>\\r\\n      <input ng-model=editCtrl.statMap[0] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>str %</label>\\r\\n      <input ng-model=editCtrl.statMap[50] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>skill str %</label>\\r\\n      <input ng-model=editCtrl.statMap[4050] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-4>\\r\\n      <label>agi</label>\\r\\n      <input ng-model=editCtrl.statMap[1] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>agi %</label>\\r\\n      <input ng-model=editCtrl.statMap[51] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>skill agi %</label>\\r\\n      <input ng-model=editCtrl.statMap[4051] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-4>\\r\\n      <label>int</label>\\r\\n      <input ng-model=editCtrl.statMap[2] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>int %</label>\\r\\n      <input ng-model=editCtrl.statMap[52] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>skill int %</label>\\r\\n      <input ng-model=editCtrl.statMap[4052] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-4>\\r\\n      <label>vit</label>\\r\\n      <input ng-model=editCtrl.statMap[3] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>vit %</label>\\r\\n      <input ng-model=editCtrl.statMap[53] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-4>\\r\\n      <label>skill vit %</label>\\r\\n      <input ng-model=editCtrl.statMap[4053] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=row ng-switch-when=dmg>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>min pdmg</label>\\r\\n      <input ng-model=editCtrl.statMap[4] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>max pdmg</label>\\r\\n      <input ng-model=editCtrl.statMap[5] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>pdmg%</label>\\r\\n      <input ng-model=editCtrl.statMap[101] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>skill pdmg%</label>\\r\\n      <input ng-model=editCtrl.statMap[3001] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>min mdmg</label>\\r\\n      <input ng-model=editCtrl.statMap[6] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>max mdmg</label>\\r\\n      <input ng-model=editCtrl.statMap[7] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>mdmg%</label>\\r\\n      <input ng-model=editCtrl.statMap[102] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>skill mdmg%</label>\\r\\n      <input ng-model=editCtrl.statMap[3002] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>fire%</label>\\r\\n      <input ng-model=editCtrl.statMap[16] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>ice%</label>\\r\\n      <input ng-model=editCtrl.statMap[17] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>light%</label>\\r\\n      <input ng-model=editCtrl.statMap[18] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>dark%</label>\\r\\n      <input ng-model=editCtrl.statMap[19] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=row ng-switch-when=def>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>def</label>\\r\\n      <input ng-model=editCtrl.statMap[8] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>def%</label>\\r\\n      <input ng-model=editCtrl.statMap[58] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>mdef</label>\\r\\n      <input ng-model=editCtrl.statMap[9] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>mdef%</label>\\r\\n      <input ng-model=editCtrl.statMap[59] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>hp</label>\\r\\n      <input ng-model=editCtrl.statMap[25] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>hp%</label>\\r\\n      <input ng-model=editCtrl.statMap[75] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>skill hp%</label>\\r\\n      <input ng-model=editCtrl.statMap[4075] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=row ng-switch-when=special>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>crit</label>\\r\\n      <input ng-model=editCtrl.statMap[12] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>crit%</label>\\r\\n      <input ng-model=editCtrl.statMap[62] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>skill crit</label>\\r\\n      <input ng-model=editCtrl.statMap[4012] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>skill crit%</label>\\r\\n      <input ng-model=editCtrl.statMap[1012] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>crit dmg</label>\\r\\n      <input ng-model=editCtrl.statMap[103] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>crit dmg%</label>\\r\\n      <input ng-model=editCtrl.statMap[104] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n\\r\\n    <div class=col-xs-3>\\r\\n      <label>fd</label>\\r\\n      <input ng-model=editCtrl.statMap[29] type=number dnsim-string-to-number class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=col-xs-3>\\r\\n      <label>skill fd%</label>\\r\\n      <input ng-model=editCtrl.statMap[1029] type=number dnsim-string-to-percent class=form-control step=any ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=row ng-switch-when=name>\\r\\n    <div class=col-xs-12>\\r\\n      <label>name</label>\\r\\n      <input ng-model=editCtrl.item.name type=text class=form-control ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-custom.html\n// module id = 124\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-custom.html?");

/***/ }),
/* 125 */
/***/ (function(module, exports) {

eval("module.exports = \"\\r\\n<div class=col-xs-12 ng-if=\\\"editCtrl.getEnchantments() && editCtrl.getEnchantments().length > 0\\\">\\r\\n  <div class=form-group ng-if=\\\"editCtrl.enhancementOptions.length == 0\\\">\\r\\n    <button class=\\\"btn btn-default\\\" ng-dblclick=editCtrl.prevEnchantment() ng-click=editCtrl.prevEnchantment() ng-disabled=\\\"editCtrl.item.enchantmentNum < 1\\\">- reduce</button>\\r\\n    <button class=\\\"btn btn-default\\\" ng-dblclick=editCtrl.nextEnchantment() ng-click=editCtrl.nextEnchantment() ng-disabled=editCtrl.isMaxEnchantLevel()>+ increase</button>\\r\\n  </div>\\r\\n  <div class=form-group ng-if=\\\"editCtrl.enhancementOptions.length > 0\\\">\\r\\n    <button class=\\\"btn btn-default btn-block\\\" ng-dblclick=editCtrl.setEnchantmentNum(enhancementOption.number) ng-click=editCtrl.setEnchantmentNum(enhancementOption.number) ng-repeat=\\\"enhancementOption in editCtrl.enhancementOptions track by $index\\\">\\r\\n        +{{enhancementOption.number}}<br/>\\r\\n        <span dnsim-stats stats=enhancementOption.stats separator=\\\"'|'\\\"></span>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-if=\\\"editCtrl.materials == null && !editCtrl.isMaxEnchantLevel() && editCtrl.enchantmentAfter != null\\\">\\r\\n  <button ng-click=editCtrl.showMaterials() class=\\\"btn btn-link\\\">&raquo;show enhancement info</button>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-hide=\\\"editCtrl.enchantmentAfter == null || editCtrl.isMaxEnchantLevel() || editCtrl.enhancementOptions.length > 0\\\" ng-if=\\\"editCtrl.materials != null\\\">\\r\\n  <label>when enhancing:</label><br/>\\r\\n  cost: {{editCtrl.enchantmentCost}} | min down: {{editCtrl.enchantmentAfter.MinDown}} | max down: {{editCtrl.enchantmentAfter.MaxDown}}<br/>\\r\\n  enchant ratio: {{editCtrl.enchantmentAfter.EnchantRatio | percentage}} | break ratio: {{editCtrl.enchantmentAfter.BreakRatio | percentage}}<br/>\\r\\n  <span ng-if=\\\"editCtrl.enchantmentAfter && editCtrl.enchantmentAfter.ProtectItemCount > 0 && editCtrl.materials != null\\\">\\r\\n  {{editCtrl.enchantmentAfter.ProtectItemCount}} Jellies required for protection\\r\\n  <br/>\\r\\n  </span>\\r\\n  <div ng-repeat=\\\"material in editCtrl.materials track by $index\\\">\\r\\n    <div><dnsim-item-link item=material.item /></div>x{{material.num}}\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-enchantment.html\n// module id = 125\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-enchantment.html?");

/***/ }),
/* 126 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row ng-if=\\\"editCtrl.getPotentials() != null && editCtrl.getPotentials().length > 1\\\">\\r\\n  <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=\\\"editCtrl.changingPotentials = true\\\" ng-show=!editCtrl.changingPotentials>change potential</button>\\r\\n    <!--\\r\\n    <button class=\\\"btn btn-default\\\" ng-disabled=\\\"editCtrl.isFirstPotential()\\\" ng-dblclick=\\\"editCtrl.prevPotential()\\\" ng-click=\\\"editCtrl.prevPotential()\\\">prev</button>\\r\\n    <button class=\\\"btn btn-default\\\" ng-disabled=\\\"editCtrl.isLastPotential()\\\" ng-dblclick=\\\"editCtrl.nextPotential()\\\" ng-click=\\\"editCtrl.nextPotential()\\\">next</button>\\r\\n    -->\\r\\n    <div ng-show=editCtrl.changingPotentials class=btn-group-vertical>\\r\\n      <button ng-class=\\\"{'btn': true, 'btn-default': true, 'disabled': editCtrl.potential.id == pid}\\\" ng-click=editCtrl.changePotential(pid) ng-repeat=\\\"(pid, stats) in editCtrl.potentialStats track by $index\\\">\\r\\n        <span>\\r\\n          <span ng-if=\\\"stats.length == 0\\\">clean</span>\\r\\n          <span dnsim-stats stats=stats separator=\\\"'|'\\\"></span>\\r\\n        </span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-potential.html\n// module id = 126\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-potential.html?");

/***/ }),
/* 127 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-3>\\r\\n  <input type=radio ng-model=editCtrl.item.pve value=pve ng-click=editCtrl.onChange() id=pveRadio><label for=pveRadio>&nbsp;pve</label>\\r\\n  <br/>\\r\\n  <input type=radio ng-model=editCtrl.item.pve value=pvp ng-click=editCtrl.onChange() id=pvpRadio><label for=pvpRadio>&nbsp;pvp</label>\\r\\n</div>\\r\\n\\r\\n<div class=col-xs-9>\\r\\n  Skill Level: {{editCtrl.item.enchantmentNum}}\\r\\n  <br/><br/>\\r\\n\\r\\n  <button class=\\\"btn btn-default\\\" ng-dblclick=editCtrl.prevEnchantment() ng-click=editCtrl.prevEnchantment() ng-disabled=\\\"editCtrl.item.enchantmentNum <= 1\\\">- reduce</button>\\r\\n  <button class=\\\"btn btn-default\\\" ng-dblclick=editCtrl.nextEnchantment() ng-click=editCtrl.nextEnchantment() ng-disabled=editCtrl.isMaxSkillLevel()>+ increase</button>\\r\\n</div>\\r\\n\\r\\n<div class=col-xs-12 ng-show=\\\"editCtrl.item.stats.length > 0\\\">\\r\\n  <label>stats</label>\\r\\n</div>\\r\\n\\r\\n<div class=col-xs-12>\\r\\n  <span dnsim-stats stats=editCtrl.item.stats separator=\\\"'|'\\\">\\r\\n</span></div>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-skill.html\n// module id = 127\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-skill.html?");

/***/ }),
/* 128 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-12 ng-if=\\\"editCtrl.item.sparkTypeId > 0 && editCtrl.getSparks() != null\\\">\\r\\n  <br/>\\r\\n  <label>hidden ability:</label>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-show=\\\"editCtrl.getSparks() != null && editCtrl.getSparks().length > 0 && !editCtrl.item.sparkId\\\">\\r\\n  <button class=\\\"btn btn-default\\\" ng-click=editCtrl.nextSpark() ng-disabled=editCtrl.isMaxEnchantLevel()>add hidden ability</button>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-show=\\\"editCtrl.item.sparkStats != null\\\">\\r\\n  <span dnsim-stats stats=editCtrl.item.sparkStats separator=\\\"'|'\\\">\\r\\n  </span>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-show=\\\"editCtrl.getSparks() != null && editCtrl.getSparks().length > 0 && editCtrl.item.sparkId != null\\\">\\r\\n  <button class=\\\"btn btn-default\\\" ng-click=editCtrl.removeSpark()>remove</button>\\r\\n  <button class=\\\"btn btn-default\\\" ng-disabled=editCtrl.isFirstSpark() ng-dblclick=editCtrl.prevSpark() ng-click=editCtrl.prevSpark()>prev</button>\\r\\n  <button class=\\\"btn btn-default\\\" ng-disabled=editCtrl.isMoreSparks() ng-dblclick=editCtrl.nextSpark() ng-click=editCtrl.nextSpark()>next</button>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-spark.html\n// module id = 128\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-spark.html?");

/***/ }),
/* 129 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-5 col-md-3\\\">\\r\\n  <br/>\\r\\n  <button class=\\\"btn btn-block btn-default\\\" ng-disabled=\\\"editCtrl.item.enchantmentNum == null\\\" ng-click=editCtrl.setTalisman(0)>+0%</button>\\r\\n  <button class=\\\"btn btn-block btn-default\\\" ng-disabled=\\\"editCtrl.item.enchantmentNum == 25\\\" ng-click=editCtrl.setTalisman(25)>+25%</button>\\r\\n  <button class=\\\"btn btn-block btn-default\\\" ng-disabled=\\\"editCtrl.item.enchantmentNum == 75\\\" ng-click=editCtrl.setTalisman(75)>+75%</button>\\r\\n  <button class=\\\"btn btn-block btn-default\\\" ng-disabled=\\\"editCtrl.item.enchantmentNum == 100\\\" ng-click=editCtrl.setTalisman(100)>+100%</button>\\r\\n</div>\\r\\n<div class=col-xs-7>\\r\\n  <br/>\\r\\n  <span dnsim-stats stats=editCtrl.item.stats separator=\\\"'|'\\\">\\r\\n  </span>\\r\\n</div>\\r\\n<div class=col-xs-7 ng-show=\\\"editCtrl.item.enchantmentNum > 0\\\">\\r\\n  <br/>\\r\\n  <label>extra:</label><br/>\\r\\n  <span dnsim-stats stats=editCtrl.item.enchantmentStats separator=\\\"'|'\\\">\\r\\n  </span>\\r\\n  <br/><br/>\\r\\n  <label>total:</label><br/>\\r\\n  <span dnsim-stats stats=editCtrl.item.fullStats separator=\\\"'|'\\\">\\r\\n  </span>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-edit-talisman.html\n// module id = 129\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-edit-talisman.html?");

/***/ }),
/* 130 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\" ng-if=\\\"ctrl.attainments && ctrl.attainments.length > 0\\\">\\r\\n  <h3><small>in-game tooltip:</small></h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"a in ctrl.attainments track by $index\\\">\\r\\n {{a}}\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-attainment.html\n// module id = 130\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-attainment.html?");

/***/ }),
/* 131 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-12>\\r\\n  <h3>contains:</h3>\\r\\n</div>\\r\\n<div class=col-xs-12>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"item in ctrl.items track by $index\\\">\\r\\n  <dnsim-item-link item=item.item></dnsim-item-link>\\r\\n  <span ng-if=\\\"item.count > 1\\\">&nbsp;x{{item.count}}</span>\\r\\n  <span ng-if=\\\"item.gold > 0\\\">{{item.gold/100/100}}g</span>\\r\\n</div>\\r\\n<div ng-if=\\\"ctrl.items && ctrl.items.length\\\" class=col-xs-12>\\r\\n  <br/>\\r\\n  <p ng-if=\\\"ctrl.item.typeId == 8\\\">\\r\\n    Data found looking up id: {{ctrl.lookupId}} from:\\r\\n  </p>\\r\\n  <p ng-if=\\\"ctrl.item.typeId != 8\\\">\\r\\n      Data found looking up CharmNum: {{ctrl.lookupId}} from:\\r\\n    <a ng-repeat=\\\"(fileName, used) in ctrl.usedFiles\\\" ng-href={{ctrl.getFileLink(fileName)}} target=_blank>\\r\\n      {{fileName}}\\r\\n    </a>\\r\\n  </p>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-box.html\n// module id = 131\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-box.html?");

/***/ }),
/* 132 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <h3><small>crafting costs:</small></h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-if=\\\"ctrl.crafts == 0\\\">\\r\\n  item not found to be craftable\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"c in ctrl.crafts track by $index\\\">\\r\\n  <div class=row>\\r\\n    <h4 class=col-xs-12> <!-- {{c.id}} / {{c.fileName}}: -->\\r\\n    <small ng-if=\\\"c.gold > 0\\\">{{c.gold}} gold</small>\\r\\n    </h4>\\r\\n    <div class=\\\"col-xs-12 col-sm-3\\\" ng-repeat=\\\"i in c.items track by $index\\\">\\r\\n      <dnsim-item-link item=i.item></dnsim-item-link>\\r\\n      <span ng-if=\\\"i.num > 1\\\">&nbsp;x{{i.num}}</span>\\r\\n    </div>\\r\\n    <div class=col-xs-12><br/></div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-craft.html\n// module id = 132\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-craft.html?");

/***/ }),
/* 133 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <h3>extraction costs {{ctrl.getGold()}} gold<br><small>and can give:</small></h3>\\r\\n</div>\\r\\n<div class=col-xs-12>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"item in ctrl.items\\\">\\r\\n  <dnsim-item-link item=item.item></dnsim-item-link>\\r\\n  <span ng-if=\\\"item.count > 1\\\">&nbsp;x{{item.count}}</span>\\r\\n  <span ng-if=\\\"item.gold > 0\\\">{{item.gold/100/100}}g</span>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-extraction.html\n// module id = 133\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-extraction.html?");

/***/ }),
/* 134 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <h3>makes:</h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"i in ctrl.items track by i.id\\\">\\r\\n  <dnsim-item-link item=i></dnsim-item-link>\\r\\n  <br/><br/>\\r\\n  <div class=row>\\r\\n    <dngearsim-item-view-craft item=i>\\r\\n    </dngearsim-item-view-craft>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-plate.html\n// module id = 134\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-plate.html?");

/***/ }),
/* 135 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <h3>items in this set include:</h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"i in ctrl.items track by i.id\\\">\\r\\n  <dnsim-item-link item=i></dnsim-item-link>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-set.html\n// module id = 135\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-set.html?");

/***/ }),
/* 136 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <h3><small>npc price:</small></h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-if=\\\"ctrl.shopCosts == 0\\\">\\r\\n  item not found in the shops\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"s in ctrl.shopCosts track by $index\\\">\\r\\n  <div class=row>\\r\\n    <h4 class=col-xs-12>{{s.shopName.toString().toLowerCase()}} shop / {{s.tabName.toLowerCase()}}:\\r\\n    <br/>\\r\\n    <small ng-if=\\\"s.ladderPoints > 0\\\">{{s.ladderPoints}} ladder points</small>\\r\\n    <small ng-if=\\\"s.nightmarePoints > 0\\\">{{s.nightmarePoints}} nightmare points,</small>\\r\\n    <small ng-if=\\\"s.dungeonPoints > 0\\\">{{s.dungeonPoints}} dungeon points,</small>\\r\\n    <small ng-if=\\\"s.nestPoints > 0\\\">{{s.nestPoints}} nest points,</small>\\r\\n    <small ng-if=\\\"s.pointsId1 > 2\\\">unknown point #({{s.pointsId1}})</small>\\r\\n    <small ng-if=\\\"s.pointsId2 > 2\\\">unknown point #{{s.pointsId2}}</small>\\r\\n    <small ng-if=\\\"s.gold > 0\\\">{{s.gold}} gold</small>\\r\\n    </h4>\\r\\n    <div class=\\\"col-xs-12 col-sm-3\\\" ng-if=\\\"s.numItem1 > 0\\\">\\r\\n      <dnsim-item-link item=s.item1></dnsim-item-link>\\r\\n      <span ng-if=\\\"s.numItem1 > 1\\\">&nbsp;x{{s.numItem1}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-9\\\" ng-if=\\\"s.numItem2 > 0\\\">\\r\\n      <dnsim-item-link item=s.item2></dnsim-item-link>\\r\\n      <span ng-if=\\\"s.numItem2 > 1\\\">&nbsp;x{{s.numItem2}}</span>\\r\\n    </div>\\r\\n    <div class=col-xs-12><br/></div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-shop.html\n// module id = 136\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-shop.html?");

/***/ }),
/* 137 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n  <h3><small>options are:</small></h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-if=\\\"ctrl.matchingTransfers == 0\\\">\\r\\n  enhancement cannot be transfered\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"transfer in ctrl.matchingTransfers track by $index\\\">\\r\\n  <div class=row>\\r\\n    <h4 class=\\\"col-xs-12 {{transfer.rank.name}}-grade\\\">level {{transfer.level}} +{{transfer.enchantmentNum}} {{transfer.rank.name}}<br/><small>costs: {{transfer.gold}} gold, and...</small></h4>\\r\\n    <div class=\\\"col-xs-12 col-sm-3\\\" ng-if=\\\"transfer.numItem1 > 0\\\">\\r\\n      <dnsim-item-link item=transfer.item1></dnsim-item-link>\\r\\n      <span ng-if=\\\"transfer.numItem1 > 1\\\">&nbsp;x{{transfer.numItem1}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-9\\\" ng-if=\\\"transfer.numItem2 > 0\\\">\\r\\n      <dnsim-item-link item=transfer.item2></dnsim-item-link>\\r\\n      <span ng-if=\\\"transfer.numItem2 > 1\\\">&nbsp;x{{transfer.numItem2}}</span>\\r\\n    </div>\\r\\n    <div class=col-xs-12><br/></div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-transfer.html\n// module id = 137\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-transfer.html?");

/***/ }),
/* 138 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"col-xs-12 item-type-grouping\\\">\\r\\n    <h3>\\r\\n        <small>converting can give:</small>\\r\\n    </h3>\\r\\n</div>\\r\\n<div class=col-xs-12 ng-if=\\\"ctrl.rewardItems == 0\\\">\\r\\n    conversion data not found\\r\\n</div>\\r\\n<div class=col-xs-12 ng-repeat=\\\"transfer in ctrl.rewardItems track by $index\\\">\\r\\n    <dnsim-item-link item=transfer.rewardItem></dnsim-item-link>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item/item-view-tuning.html\n// module id = 138\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item/item-view-tuning.html?");

/***/ }),
/* 139 */
/***/ (function(module, exports) {

eval("module.exports = \"<textarea class=form-control rows=15 spellcheck=false autocomplete=off ng-model=exportData>\\r\\n</textarea>\\r\\n\\r\\n\\r\\n<button class=\\\"btn btn-default\\\" ng-click=save()>\\r\\n  {{'save' | translate}}\\r\\n</button> danger - this may corrupt your build\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/export.html\n// module id = 139\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/export.html?");

/***/ }),
/* 140 */
/***/ (function(module, exports) {

eval("module.exports = \"<header>\\r\\n  <div class=\\\"container-fluid chunkyness\\\" id=head>\\r\\n      <div class=container>\\r\\n        <a href=/dngearsim>\\r\\n          <div class=dnsim-logo>\\r\\n            <span class=dnsim-logo-dn>DN</span>\\r\\n            <br/>\\r\\n            <span class=dnsim-logo-gearsim>gearsim</span>\\r\\n          </div>\\r\\n        </a>\\r\\n        <div class=\\\"toggle-box row\\\">\\r\\n          <div class=col-xs-12>\\r\\n            <div class=\\\"header-title text-right\\\">\\r\\n            &nbsp;\\r\\n            <h1 class=\\\"hidden-xs header-title\\\">\\r\\n            {{'dragon nest gear simulator' | translate}}\\r\\n            </h1>\\r\\n            &nbsp;\\r\\n            <dngearsim-region ng-controller=\\\"RegionCtrl as ctrl\\\">\\r\\n            </dngearsim-region>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</header>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/header.html\n// module id = 140\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/header.html?");

/***/ }),
/* 141 */
/***/ (function(module, exports) {

eval("module.exports = \"<ul class=\\\"nav nav-tabs\\\" ng-if=!noRegion()>\\r\\n  <li class=\\\"nav-tab nav-{{::action.name}}\\\" ng-repeat=\\\"action in getActions() track by $index\\\"> \\r\\n    <a class=\\\"list-group-item {{action.extraCss}}\\\" ng-href={{action.path}}>\\r\\n      <span class=\\\"glyphicon glyphicon-{{::action.icon}}\\\" ng-if=::action.icon aria-hidden=true></span>\\r\\n      <dnsim-job-icon size=\\\"'50%'\\\" item=action.build.job small=true></dnsim-job-icon>\\r\\n      &nbsp;\\r\\n      <span class=hidden-xs>\\r\\n      {{action.name | translate}}\\r\\n      </span>\\r\\n    </a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-tab nav-about pull-right\\\">\\r\\n    <a class=list-group-item ng-href=about>\\r\\n      <span class=\\\"glyphicon glyphicon-question-sign\\\" aria-hidden=true></span>\\r\\n      <span class=hidden-xs>\\r\\n      {{ 'about' | translate }}\\r\\n      </span>\\r\\n    </a>\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"container-fluid sim-error\\\" ng-if=simError>\\r\\n  {{simError}}\\r\\n</div>\\r\\n<div class=\\\"container-fluid sim-error\\\" ng-if=isHttpOnly()>\\r\\n  <div class=container>\\r\\n    <div class=\\\"col-xs-12 text-right\\\">\\r\\n      please use https: <a href=https://spacem.github.io/dngearsim>https://spacem.github.io/dngearsim</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/nav.html\n// module id = 141\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/nav.html?");

/***/ }),
/* 142 */
/***/ (function(module, exports) {

eval("module.exports = \"\\r\\n<div class=row>\\r\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\r\\n    <div class=form-group>\\r\\n    <label>Custom location of dnt files (for ALT region):</label>\\r\\n    <input type=text class=form-control ng-model=location />\\r\\n    </div>\\r\\n    <span ng-repeat=\\\"hostedFile in hostedFiles track by $index\\\">\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=\\\"$parent.location = hostedFile.url\\\" title={{hostedFile.name}}>{{ hostedFile.region }}</button>\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-3\\\">\\r\\n    <div class=form-group>\\r\\n    <label></label><br/>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=saveLocation()>Save Location</button>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=testLocation()>Test Location</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-5\\\">\\r\\n    <div ng-repeat=\\\"testResult in testResults track by $index\\\">\\r\\n      {{testResult}}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row>\\r\\n  &nbsp;\\r\\n</div>\\r\\n<div class=row>\\r\\n  <div class=col-xs-12>\\r\\n    <div class=row>\\r\\n      &nbsp;\\r\\n    </div>\\r\\n    <div class=bg-danger>\\r\\n      <button class=\\\"btn btn-default\\\" ng-click=resetSessionData()>Reset Session</button>\\r\\n      <label>WARNING: Will reset all session data - including all builds</label>\\r\\n    </div>\\r\\n    <div class=row>\\r\\n      &nbsp;\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row>\\r\\n  &nbsp;\\r\\n</div>\\r\\n<div class=row>\\r\\n  <div class=col-xs-12>\\r\\n    <div class=row>\\r\\n      &nbsp;\\r\\n    </div>\\r\\n    <div>\\r\\n      <button class=\\\"btn btn-default\\\" ng-click=loadUiString()>Reload Translations</button>\\r\\n    </div>\\r\\n    <div class=row>\\r\\n      &nbsp;\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row>\\r\\n  &nbsp;\\r\\n</div>\\r\\n<div class=row>\\r\\n  <div class=col-xs-12>\\r\\n    <div class=row ng-repeat=\\\"result in translationResults track by $index\\\"> \\r\\n      <div class=col-xs-12>\\r\\n        {{result}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav/setup.html\n// module id = 142\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav/setup.html?");

/***/ }),
/* 143 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-choose-class ng-show=!ctrl.job job=ctrl.job on-set-job=ctrl.setJob()></dnsim-choose-class>\\r\\n\\r\\n<h3 ng-if=ctrl.job>{{ctrl.job.name}} {{'builds' | translate}}\\r\\n  <small>\\r\\n    <button class=\\\"btn btn-link\\\" ng-click=\\\"ctrl.job = null\\\">\\r\\n      {{'change class' | translate}}\\r\\n    </button>\\r\\n  </small>\\r\\n</h3>\\r\\n<span ng-if=\\\"ctrl.job && !ctrl.jobBuilds\\\">loading..</span>\\r\\n\\r\\n<p ng-if=\\\"ctrl.job && ctrl.jobBuilds\\\">\\r\\n<label>{{'filter' | translate}}</label>\\r\\n<input class=form-control ng-model=ctrl.filter>\\r\\n</p>\\r\\n\\r\\n<table ng-if=\\\"ctrl.job && ctrl.jobBuilds\\\" class=table>\\r\\n  <tr ng-repeat=\\\"build in ctrl.getFilteredBuilds() track by $index\\\">\\r\\n    <td>\\r\\n    {{build.data.region}}\\r\\n    lv{{build.data.lev}}\\r\\n    <a ng-href=\\\"published/?uid={{build.uid}}&buildName={{build.name | escape}}\\\">{{build.name}}</a>\\r\\n    <span ng-if=build.data.guild>\\r\\n    [{{build.data.guild}}]\\r\\n    </span>\\r\\n    <br/>\\r\\n    <em>\\r\\n    {{build.data.about}}\\r\\n    </em>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n<div class=row ng-show=\\\"ctrl.totalNumResults >= ctrl.maxDisplay\\\">\\r\\n  <div class=col-xs-1></div>\\r\\n  <div class=col-xs-11>\\r\\n    <button class=\\\"btn btn-link\\\" ng-click=ctrl.showMoreResults(20)>{{'show more' | translate}}</button> | \\r\\n    <button class=\\\"btn btn-link\\\" ng-click=ctrl.showMoreResults(200)>{{'show lots more' | translate}}</button>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/build-search.html\n// module id = 143\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/build-search.html?");

/***/ }),
/* 144 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-loading>\\r\\n  <div class=row>\\r\\n    <div class=col-xs-12 ng-if=ctrl.profile>\\r\\n      <h3>{{'viewing builds for' | translate}}:<small> {{ctrl.profile.name || 'unnamed user'}}</small>\\r\\n      </h3>\\r\\n      <p>{{ctrl.profile.about}}</p>\\r\\n    </div>\\r\\n    <div class=col-xs-12 ng-if=\\\"!ctrl.profile || !ctrl.storedBuilds\\\">\\r\\n      {{'loading...' | translate}}\\r\\n    </div>\\r\\n    \\r\\n    <div class=col-xs-12 ng-if=ctrl.storedBuilds ng-repeat=\\\"(buildName, build) in ctrl.storedBuilds\\\">\\r\\n      <a class=\\\"btn btn-link btn-block group-header-btn\\\" ng-href=\\\"published?uid={{ctrl.uid}}&buildName={{buildName | escape}}\\\">\\r\\n        <dngearsim-build-summary build-name=buildName build=ctrl.storedBuilds[buildName]>\\r\\n        </dngearsim-build-summary>\\r\\n      </a>\\r\\n      <button ng-hide=\\\"ctrl.reallyDelete == buildName\\\" class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.load(buildName, ctrl.storedBuilds[buildName])\\\">{{'load to browser' | translate}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n</dnsim-loading>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/profile.html\n// module id = 144\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/profile.html?");

/***/ }),
/* 145 */
/***/ (function(module, exports) {

eval("module.exports = \"<dnsim-loading>\\r\\n\\r\\n<div class=row ng-if=!ctrl.getUser()>\\r\\n  <div class=col-xs-12>\\r\\n    <br/>\\r\\n    {{'loading...' | translate}}\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row ng-if=ctrl.getUser()>\\r\\n  <div class=col-xs-12>\\r\\n    <h4>{{'Logged In' | translate}}</h4>\\r\\n    {{'Welcome' | translate}} {{ctrl.getUser().displayName || ctrl.getUser().email}}\\r\\n    <br/><br/>\\r\\n  </div>\\r\\n  <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-link\\\" ng-disabled=\\\"ctrl.show == 'profile' || !ctrl.show\\\" ng-click=\\\"ctrl.show = 'profile'\\\">{{'profile' | translate}}</button> |\\r\\n    <button class=\\\"btn btn-link\\\" ng-disabled=\\\"ctrl.show == 'builds'\\\" ng-click=\\\"ctrl.show = 'builds'\\\">{{'builds' | translate}}</button> |\\r\\n    <button class=\\\"btn btn-link\\\" ng-disabled=\\\"ctrl.show == 'delete'\\\" ng-click=\\\"ctrl.show = 'delete'\\\">{{'delete account' | translate}}</button> |\\r\\n    <button class=\\\"btn btn-link\\\" ng-click=ctrl.signOut()>{{'log out' | translate}}</button>\\r\\n    <br/><br/>\\r\\n  </div>\\r\\n  \\r\\n  <div class=col-xs-12 ng-if=\\\"ctrl.show == 'delete'\\\">\\r\\n    <br/>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=ctrl.deleteAccount()>{{'really delete?' | translate}}\\r\\n      <br/>{{'all data will be lost' | translate}}\\r\\n      <br/>{{'click to proceed' | translate}}</button>\\r\\n    <br/><br/>\\r\\n  </div>\\r\\n      \\r\\n  <div class=col-xs-6 ng-if=\\\"!ctrl.profile && (!ctrl.show || ctrl.show == 'profile')\\\">\\r\\n    {{'loading...' | translate}}\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"col-xs-12 form-group\\\" ng-if=\\\"ctrl.profile && (!ctrl.show || ctrl.show == 'profile')\\\">\\r\\n    <label>{{'display name' | translate}} </label><br/>\\r\\n    <input ng-model=ctrl.profile.name>\\r\\n    <br/><br/>\\r\\n    <label>{{'about you' | translate}}</label>\\r\\n    <textarea ng-model=ctrl.profile.about class=form-control rows=5></textarea>\\r\\n    <br/>\\r\\n    <button ng-click=ctrl.saveProfile() ng-disabled=!ctrl.profile.name class=\\\"btn btn-default\\\">{{'save' | translate}}</button>\\r\\n    \\r\\n    <a class=\\\"btn btn-link\\\" ng-href=\\\"profile/?uid={{ctrl.getUser().uid}}\\\">{{'view profile page' | translate}}</a>\\r\\n    <br/>\\r\\n  </div>\\r\\n  \\r\\n  <div class=col-xs-12 ng-if=\\\"ctrl.show == 'builds'\\\">\\r\\n    <div class=row>\\r\\n      <div class=col-xs-6>\\r\\n        <h4>{{'local builds' | translate}} ({{ctrl.getNumBuilds()}})</h4>\\r\\n      </div>\\r\\n      <div class=col-xs-6 ng-if=ctrl.storedBuilds>\\r\\n        <h4>{{'published builds' | translate}} ({{ctrl.getNumStoredBuilds()}} / {{ctrl.getBuildLimit()}})</h4>\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      <div class=col-xs-6 ng-if=!ctrl.storedBuilds>\\r\\n        {{'loading...' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=row ng-repeat=\\\"buildName in ctrl.getAllBuildNames()\\\" ng-if=ctrl.storedBuilds>\\r\\n      \\r\\n      <div class=col-xs-6 ng-if=!ctrl.builds[buildName]>\\r\\n        &nbsp;\\r\\n      </div>\\r\\n\\r\\n      <div class=col-xs-6 ng-if=ctrl.builds[buildName]>\\r\\n        <a class=\\\"btn btn-link btn-block group-header-btn\\\" ng-href=\\\"build?buildName={{buildName}}\\\">\\r\\n          <dngearsim-build-summary build-name=buildName build=ctrl.builds[buildName]>\\r\\n          </dngearsim-build-summary>\\r\\n        </a>\\r\\n        <button ng-disabled=\\\"ctrl.getNumStoredBuilds() >= ctrl.getBuildLimit()\\\" ng-hide=\\\"ctrl.localToDelete == buildName\\\" class=\\\"btn btn-default\\\" ng-click=ctrl.startPublish(buildName)>{{'save online' | translate}}</button>\\r\\n        <button ng-hide=\\\"ctrl.localToDelete == buildName\\\" class=\\\"btn btn-default\\\" ng-click=ctrl.deleteLocal(buildName)>{{'delete' | translate}}</button>\\r\\n        <button class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.localToDelete == buildName\\\" ng-click=ctrl.reallyDeleteLocal(buildName)>{{'press to actually delete' | translate}}</button>\\r\\n        <button class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.localToDelete == buildName\\\" ng-click=\\\"ctrl.deleteLocal('')\\\">{{'cancel delete' | translate}}</button>\\r\\n      </div>\\r\\n      \\r\\n      <div class=col-xs-6 ng-if=\\\"!ctrl.storedBuilds[buildName] && ctrl.publishBuild != buildName\\\">\\r\\n        &nbsp;\\r\\n      </div>\\r\\n\\r\\n      <div class=col-xs-6 ng-if=\\\"ctrl.publishBuild == buildName\\\">\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=col-xs-12>\\r\\n            <br/>\\r\\n            <h3>{{'publish' | translate}} {{buildName}}</h3>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-sm-4\\\">\\r\\n            <label>{{'region' | translate}}</label>\\r\\n            <select ng-model=ctrl.builds[buildName].region class=form-control>\\r\\n              <option>cdn</option>\\r\\n              <option>eu</option>\\r\\n              <option>ina</option>\\r\\n              <option>jdn</option>\\r\\n              <option>kdn</option>\\r\\n              <option>na</option>\\r\\n              <option>ru</option>\\r\\n              <option>sea</option>\\r\\n              <option>tdn</option>\\r\\n              <option>other</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-sm-8\\\">\\r\\n            <label>{{'guild' | translate}}</label><br/>\\r\\n            <input ng-model=ctrl.builds[buildName].guild class=form-control>\\r\\n          </div>\\r\\n          <div class=col-xs-12>\\r\\n            <label>{{'about' | translate}}</label>\\r\\n            <input ng-model=ctrl.builds[buildName].about class=form-control>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 text-right\\\">\\r\\n            <br/>\\r\\n            <button class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.publishBuild = null\\\">{{'cancel' | translate}}</button>\\r\\n            <button class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.save(buildName, ctrl.builds[buildName])\\\">{{'publish' | translate}}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=col-xs-6 ng-if=\\\"ctrl.storedBuilds && ctrl.storedBuilds[buildName] && ctrl.publishBuild != buildName\\\">\\r\\n        <a class=\\\"btn btn-link btn-block group-header-btn\\\" ng-href=\\\"published?uid={{ctrl.getUser().uid}}&buildName={{buildName | escape}}\\\">\\r\\n          <dngearsim-build-summary build-name=buildName build=ctrl.storedBuilds[buildName]>\\r\\n          </dngearsim-build-summary>\\r\\n        </a>\\r\\n        <p>\\r\\n          {{ctrl.storedBuilds[buildName].region}} <span ng-if=ctrl.storedBuilds[buildName].guild>[{{ctrl.storedBuilds[buildName].guild}}]</span>\\r\\n          <em>{{ctrl.storedBuilds[buildName].about}}</em>\\r\\n        </p>\\r\\n        <button ng-hide=\\\"ctrl.serverToDelete == buildName\\\" class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.load(buildName, ctrl.storedBuilds[buildName])\\\">{{'load to browser' | translate}}</button>\\r\\n        <button ng-hide=\\\"ctrl.serverToDelete == buildName\\\" class=\\\"btn btn-default\\\" ng-click=ctrl.deleteServer(buildName)>{{'delete' | translate}}</button>\\r\\n        <button class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.serverToDelete == buildName\\\" ng-click=ctrl.reallyDeleteServer(buildName)>{{'press to actually delete' | translate}}</button>\\r\\n        <button class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.serverToDelete == buildName\\\" ng-click=\\\"ctrl.deleteServer('')\\\">{{'cancel delete' | translate}}</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</dnsim-loading>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online/publish.html\n// module id = 145\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online/publish.html?");

/***/ }),
/* 146 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=toggle-box>\\r\\n  <button class=\\\"light-toggle toggle-box-button\\\" ng-click=\\\"ctrl.edit = !ctrl.edit;\\\" title={{ctrl.getDntLocation().name}}>\\r\\n    {{ctrl.getDntLocation().region}}\\r\\n  </button>\\r\\n  <span>\\r\\n    &nbsp;{{ctrl.dntVersion}}\\r\\n  </span>\\r\\n</div>\\r\\n  <!-- <button class=\\\"toggle-text\\\" ng-click=\\\"edit = true\\\">&nbsp;{{getWorldName()}}&nbsp;</button> -->\\r\\n<div ng-if=ctrl.edit class=toggle-box>\\r\\n  <div class=container>\\r\\n    <div class=row>\\r\\n      <div class=\\\"col-xs-12 region-heading\\\">\\r\\n        <br/>\\r\\n        select region<br><small>지역 선택 / 选择地区 </small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=row ng-repeat=\\\"currentLocation in ::ctrl.getHostedFiles() track by currentLocation.region\\\">\\r\\n      <a ng-href=# class=region-hover ng-click=ctrl.setLocation(currentLocation) ng-mouseover=\\\"ctrl.hoverLocation = currentLocation\\\" ng-mouseleave=\\\"ctrl.hoverLocation = ctrl.getDntLocation()\\\">\\r\\n        \\r\\n        <div class=\\\"col-xs-10 col-sm-11 text-right toggle-text\\\">\\r\\n          {{::currentLocation.name}}\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 col-sm-1\\\">\\r\\n  \\r\\n          <button class=toggle-box-button ng-class=\\\"{'dark-toggle' : currentLocation != ctrl.hoverLocation, 'light-toggle' : currentLocation == ctrl.hoverLocation}\\\" ng-click=ctrl.setLocation(currentLocation) title={{::currentLocation.name}}>\\r\\n            {{::currentLocation.region}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=row>\\r\\n      <div class=\\\"col-xs-12 region-heading\\\">\\r\\n        <br/>\\r\\n        translation override\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=row>\\r\\n      <div class=\\\"col-xs-6 col-sm-10\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-3 col-sm-1\\\">\\r\\n        <button class=toggle-box-button ng-class=\\\"{'dark-toggle' : !ctrl.override, 'light-toggle' : ctrl.override}\\\" ng-click=ctrl.setOverride(true) title=yes>\\r\\n          yes\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-3 col-sm-1\\\">\\r\\n        <button class=toggle-box-button ng-class=\\\"{'dark-toggle' : ctrl.override, 'light-toggle' : !ctrl.override}\\\" ng-click=ctrl.setOverride(false) title=no>\\r\\n          no\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=row ng-if=ctrl.override>\\r\\n      <div class=col-xs-12>\\r\\n        <br/>\\r\\n        translations\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=row ng-repeat=\\\"currentLocation in ::ctrl.getHostedFiles() track by currentLocation.region\\\" ng-if=ctrl.override>\\r\\n      <a ng-href=# class=region-hover ng-click=ctrl.setTLocation(currentLocation) ng-mouseover=\\\"ctrl.tHoverLocation = currentLocation\\\" ng-mouseleave=\\\"ctrl.tHoverLocation = ctrl.getTlocation()\\\">\\r\\n        \\r\\n        <div class=\\\"col-xs-10 col-sm-11 text-right toggle-text\\\">\\r\\n          {{::currentLocation.name}}\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 col-sm-1\\\">\\r\\n  \\r\\n          <button class=toggle-box-button ng-class=\\\"{'dark-toggle' : currentLocation != ctrl.tHoverLocation, 'light-toggle' : currentLocation == ctrl.tHoverLocation}\\\" ng-click=ctrl.setTLocation(currentLocation) title={{::currentLocation.name}}>\\r\\n            {{::currentLocation.region}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </a>\\r\\n    </div>\\r\\n    \\r\\n    <br/>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/region/region.html\n// module id = 146\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/region/region.html?");

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').config(['$routeProvider', config]);\n\n  function config($routeProvider) {\n\n    $routeProvider.when('/about', {\n      template: __webpack_require__(108),\n      controller: 'AboutCtrl as about'\n    }).when('/setup', {\n      template: __webpack_require__(142),\n      controller: 'SetupCtrl'\n    }).when('/items', {\n      template: __webpack_require__(80),\n      controller: 'ItemsCtrl as items',\n      reloadOnSearch: false\n    }).when('/', {\n      template: __webpack_require__(221)\n    }).when('/builds', {\n      template: __webpack_require__(39),\n      controller: 'BuildListCtrl as buildList'\n    }).when('/build', {\n      template: __webpack_require__(39),\n      controller: 'BuildListCtrl as buildList'\n    }).when('/view-group', {\n      template: __webpack_require__(121),\n      controller: 'ViewGroupCtrl'\n    }).when('/edit-build', {\n      template: __webpack_require__(45),\n      controller: 'EditBuildCtrl as editGroup'\n      // reloadOnSearch: false,\n    }).when('/new-build', {\n      template: __webpack_require__(45),\n      controller: 'EditBuildCtrl as editGroup'\n      // reloadOnSearch: false,\n    }).when('/delete-build', {\n      template: __webpack_require__(118),\n      controller: 'DeleteBuildCtrl as deleteBuild'\n      // reloadOnSearch: false,\n    }).when('/reload-build', {\n      template: __webpack_require__(120),\n      controller: 'ReloadBuildCtrl as ctrl'\n      // reloadOnSearch: false,\n    }).when('/search', {\n      template: __webpack_require__(148),\n      controller: 'ItemSearchCtrl as ctrl',\n      reloadOnSearch: false\n    }).when('/item', {\n      template: __webpack_require__(69),\n      controller: 'ItemCtrl'\n      // reloadOnSearch: false,\n    }).when('/item', {\n      template: __webpack_require__(69),\n      controller: 'ItemCtrl'\n      // reloadOnSearch: false,\n    }).when('/export', {\n      template: __webpack_require__(139),\n      controller: 'ExportCtrl'\n    }).when('/talismans', {\n      template: __webpack_require__(117),\n      controller: 'BuildTalismansCtrl as ctrl'\n    }).when('/publish', {\n      template: __webpack_require__(145),\n      controller: 'PublishCtrl as ctrl'\n    }).when('/profile', {\n      template: __webpack_require__(144),\n      controller: 'ProfileCtrl as ctrl'\n    }).when('/published', {\n      template: __webpack_require__(78),\n      controller: 'PublishedCtrl as ctrl'\n    }).when('/import', {\n      template: __webpack_require__(112),\n      controller: 'BuildImportCtrl as ctrl'\n    }).when('/published', {\n      template: __webpack_require__(78),\n      controller: 'PublishedCtrl as ctrl'\n    }).when('/build-search', {\n      template: __webpack_require__(143),\n      controller: 'BuildSearchCtrl as ctrl'\n    }).otherwise({\n      redirectTo: '/'\n    });\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/routes.js\n// module id = 147\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/routes.js?");

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = \"<div class=row>\\r\\n<div class=\\\"col-xs-12 col-lg-9\\\">\\r\\n\\r\\n<div class=row>\\r\\n  \\r\\n<div class=\\\"visible-xs-block col-xs-12\\\">\\r\\n  <dnsim-category-links on-change=ctrl.navigate() cat=ctrl.itemCategory collapse=true></dnsim-category-links>\\r\\n</div>\\r\\n<div class=\\\"hidden-xs col-sm-4 col-md-3\\\">\\r\\n  <dnsim-category-links on-change=ctrl.navigate() cat=ctrl.itemCategory></dnsim-category-links>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-8 col-md-9\\\" ng-if=::!ctrl.itemCategory.searchType>\\r\\n<dnsim-loading>\\r\\n  <!-- For small screens this is the search box with filter button -->\\r\\n  <div class=\\\"row visible-xs\\\" ng-if=::!ctrl.itemCategory.searchType>\\r\\n    <div class=\\\"col-xs-12 input-group\\\">\\r\\n      <input placeholder=Search ng-change=ctrl.changeSearch() type=text class=form-control ng-model=ctrl.nameSearch ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n      <span class=input-group-btn>\\r\\n        <button class=\\\"btn btn-default\\\" ng-click=\\\"ctrl.filters = !ctrl.filters\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-filter\\\" aria-hidden=true></span>\\r\\n        </button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- For small screens the potentially hidden search options -->\\r\\n  <div class=\\\"row visible-xs\\\" ng-if=\\\"!ctrl.itemCategory.searchType && ctrl.filters\\\">\\r\\n    <div class=\\\"col-xs-6 form-group\\\" ng-if=::!ctrl.itemCategory.hideRank ng-repeat=\\\"(id,value) in ctrl.grades track by $index\\\">\\r\\n      <label class=checkbox-inline>\\r\\n        <input ng-change=ctrl.changeSearch() type=checkbox ng-model=ctrl.rankChecked[id] value={{id}}> {{value.name | translate}}\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" ng-hide=::ctrl.itemCategory.hideLevel>\\r\\n      <label>{{'min&nbsp;lvl:' | translate}}\\r\\n      </label>\\r\\n      <input ng-change=ctrl.changeSearch() type=number dnsim-string-to-number step=any class=form-control ng-model=ctrl.minLevel ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" ng-hide=::ctrl.itemCategory.hideLevel>\\r\\n      <label>{{'max&nbsp;lvl:' | translate}}\\r\\n      </label>\\r\\n      <input ng-change=ctrl.changeSearch() type=number dnsim-string-to-number step=any class=form-control ng-model=ctrl.maxLevel ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div ng-class=\\\"{'col-sm-2': !ctrl.itemCategory.hideLevel, 'col-sm-3': ctrl.itemCategory.hideLevel}\\\" class=col-xs-12>\\r\\n      <label>{{'stat:' | translate}}</label>\\r\\n      <select ng-change=ctrl.changeSearch() class=form-control ng-model=ctrl.stat ng-options=\\\"stat.name | translate for stat in ::ctrl.stats track by stat.id\\\">\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-3\\\" ng-hide=::ctrl.itemCategory.hideJob>\\r\\n      <label>{{'class:' | translate}}\\r\\n      </label>\\r\\n      <select ng-change=ctrl.changeSearch() ng-model=ctrl.job class=form-control ng-options=\\\"job.name for job in ctrl.jobs track by job.id\\\">\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- For large screens search options -->\\r\\n  <div class=\\\"row hidden-xs\\\" ng-if=::!ctrl.itemCategory.searchType>\\r\\n    <div class=\\\"col-xs-0 col-md-2\\\"></div>\\r\\n    <div class=\\\"hidden-xs col-md-10 form-group\\\">\\r\\n      <br/>\\r\\n      <span class=form-group ng-repeat=\\\"(id,value) in ctrl.grades track by $index\\\" ng-if=::!ctrl.itemCategory.hideRank>\\r\\n      <label class=checkbox-inline>\\r\\n        <input ng-change=ctrl.changeSearch() type=checkbox ng-model=ctrl.rankChecked[id] value={{id}}>{{value.name | translate}}&nbsp;\\r\\n      </label>\\r\\n      </span>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" ng-hide=::ctrl.itemCategory.hideLevel>\\r\\n      <label>{{'min&nbsp;lvl:' | translate}}\\r\\n      </label>\\r\\n      <input ng-change=ctrl.changeSearch() type=number dnsim-string-to-number step=any class=form-control ng-model=ctrl.minLevel ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-6 col-sm-2\\\" ng-hide=::ctrl.itemCategory.hideLevel>\\r\\n      <label>{{'max&nbsp;lvl:' | translate}}\\r\\n      </label>\\r\\n      <input ng-change=ctrl.changeSearch() type=number dnsim-string-to-number step=any class=form-control ng-model=ctrl.maxLevel ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n    </div>\\r\\n    <div ng-class=\\\"{'col-sm-2': !ctrl.itemCategory.hideLevel, 'col-sm-3': ctrl.itemCategory.hideLevel}\\\" class=col-xs-12>\\r\\n      <label>{{'stat:' | translate}}</label>\\r\\n      <select ng-change=ctrl.changeSearch() class=form-control ng-model=ctrl.stat ng-options=\\\"stat.name | translate for stat in ::ctrl.stats track by stat.id\\\">\\r\\n      </select>\\r\\n    </div>\\r\\n    \\r\\n    <div ng-class=\\\"['col-xs-12',{'col-sm-3': !ctrl.itemCategory.hideLevel && !ctrl.itemCategory.hideJob},{'col-sm-6': !ctrl.itemCategory.hideLevel && ctrl.itemCategory.hideJob},{'col-sm-6': ctrl.itemCategory.hideLevel && !ctrl.itemCategory.hideJob},{'col-sm-9': ctrl.itemCategory.hideLevel && ctrl.itemCategory.hideJob}]\\\">\\r\\n      <label>{{'name:' | translate}}</label>\\r\\n      <input ng-change=ctrl.changeSearch() type=text class=form-control ng-model=ctrl.nameSearch ng-model-options=\\\"{ debounce: 300 }\\\"/>\\r\\n      <span class=input-group-btn>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-3\\\" ng-hide=::ctrl.itemCategory.hideJob>\\r\\n      <label>{{'class:' | translate}}\\r\\n      </label>\\r\\n      <select ng-change=ctrl.changeSearch() ng-model=ctrl.job class=form-control ng-options=\\\"job.name for job in ctrl.jobs track by job.id\\\">\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Search results -->\\r\\n  <div class=row infinite-scroll=ctrl.showMoreResults() ng-if=\\\"!ctrl.itemCategory.searchType && ctrl.results\\\">\\r\\n    <div class=col-xs-12 ng-repeat=\\\"result in ctrl.results track by $index\\\">\\r\\n      <div class=\\\"row dnsim-card\\\">\\r\\n        <dngearsim-build-item item=result></dngearsim-build-item>\\r\\n        <div style=float:right>\\r\\n            <button class=\\\"btn btn-default\\\" ng-click=\\\"showUse = !showUse\\\">\\r\\n              {{'use' | translate}}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=col-xs-12 ng-if=showUse>\\r\\n          <br/>\\r\\n          <dngearsim-group-assignment compact=true item=result></dngearsim-group-assignment>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=row ng-show=\\\"ctrl.totalNumResults >= ctrl.maxDisplay\\\" ng-if=!ctrl.itemCategory.searchType>\\r\\n    <div class=col-xs-1></div>\\r\\n    <div class=col-xs-11>\\r\\n      <button class=\\\"btn btn-link\\\" ng-click=ctrl.showMoreResults(20)>show more</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</dnsim-loading>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-8 col-md-9\\\" ng-if=::ctrl.itemCategory.searchType>\\r\\n  <!-- Other search controls -->\\r\\n  <dngearsim-skill-search jobs=ctrl.jobs job=ctrl.job ng-if=\\\"::ctrl.itemCategory.searchType == 'skills'\\\">\\r\\n  </dngearsim-skill-search>\\r\\n\\r\\n  <dngearsim-custom-items ng-if=\\\"::ctrl.itemCategory.searchType == 'custom'\\\">\\r\\n  </dngearsim-custom-items>\\r\\n\\r\\n  <dngearsim-everything-search name-search=ctrl.nameSearch ng-if=\\\"::ctrl.itemCategory.searchType == 'everything'\\\">\\r\\n  </dngearsim-everything-search>\\r\\n</div>\\r\\n\\r\\n</div> <!-- end the row -->\\r\\n</div> <!-- end the main column -->\\r\\n<div class=\\\"col-lg-3 visible-lg-block\\\">\\r\\n  <img src=\" + __webpack_require__(220) + \" />\\r\\n</div>\\r\\n</div> <!-- end the row -->\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/search.html\n// module id = 148\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/search.html?");

/***/ }),
/* 149 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-12>\\r\\n\\r\\n<div class=row>&nbsp;</div>\\r\\n<div class=row>\\r\\n<table class=table>\\r\\n<tr ng-repeat=\\\"result in ::customItems.getResults() track by $index\\\">\\r\\n  <td>\\r\\n    <div>\\r\\n      <dnsim-item-link item=result />\\r\\n    </div>\\r\\n    <div>\\r\\n      <span dnsim-stats stats=result.stats separator=\\\"'|'\\\"/>\\r\\n    </div>\\r\\n  </td>\\r\\n</tr>\\r\\n</table>\\r\\n</div>\\r\\n\\r\\n<div class=row ng-hide=isLoading()>\\r\\n  <h4>{{'create new custom item' | translate}}</h4>\\r\\n  <div class=col-xs-12>\\r\\n     <label>{{'name of new item:' | translate}}</label>\\r\\n     <input type=text class=form-control ng-model=customItems.nameSearch />\\r\\n  </div>\\r\\n  <div class=col-xs-12>\\r\\n    <button class=\\\"btn btn-default\\\" ng-click=customItems.createCustomItem()>create</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/custom-items.html\n// module id = 149\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/custom-items.html?");

/***/ }),
/* 150 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row>\\r\\n  <div class=col-xs-12>&nbsp;</div>\\r\\n</div>\\r\\n<div class=row>\\r\\n<div class=col-xs-12>\\r\\n  <p>\\r\\n     Skills are still under development.\\r\\n  </p>\\r\\n  <p>\\r\\n   Skills that debuf may debuf you instead of your enemy ie. might decrease your defence instead of increasing your attack.\\r\\n  </p>\\r\\n</div>\\r\\n</div>\\r\\n<div class=row>\\r\\n  \\r\\n  <div class=\\\"col-xs-12 col-md-9\\\">\\r\\n     <label>name:</label>\\r\\n     <input type=text class=form-control ng-model=skillSearch.nameSearch />\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-12 col-md-3\\\" ng-hide=simpleSearch>\\r\\n    <label>class: \\r\\n    </label>\\r\\n    <select ng-model=skillSearch.job class=form-control ng-options=\\\"job.name for job in skillSearch.jobs track by job.id\\\" ng-change=\\\"skillSearch.skills = null;\\\">\\r\\n    </select>\\r\\n  </div>\\r\\n</div>\\r\\n<dnsim-loading>\\r\\n  <div class=row>\\r\\n    <div class=col-xs-12>&nbsp;</div>\\r\\n    <div class=\\\"col-xs-12 dnsim-card\\\" ng-repeat=\\\"result in skillSearch.getResults() track by $index\\\">\\r\\n      <dnsim-item-link item=result />\\r\\n    </div>\\r\\n  </div>\\r\\n</dnsim-loading>\\r\\n\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search/skill-search.html\n// module id = 150\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search/skill-search.html?");

/***/ }),
/* 151 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=row ng-if=\\\"!ctrl.job && !ctrl.bJob && ctrl.getBaseJobs().length > 0\\\">\\r\\n  <div class=\\\"hidden-xs col-sm-4\\\">&nbsp;</div>\\r\\n  <div class=\\\"col-xs-12 col-sm-8\\\">\\r\\n    <br/>\\r\\n    <label>choose the character class</label>\\r\\n  </div>\\r\\n  <div class=\\\"hidden-xs col-sm-4\\\">&nbsp;</div>\\r\\n  <div class=\\\"col-xs-12 col-sm-4\\\">\\r\\n    <button class=\\\"btn btn-default btn-block\\\" ng-repeat=\\\"bJob in ctrl.getBaseJobs() track by $index\\\" ng-click=\\\"ctrl.bJob = bJob\\\">\\r\\n      <span class=\\\"class-image class-{{bJob}}\\\"></span>\\r\\n      {{ctrl.getJobName(bJob)}}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=row ng-show=\\\"!ctrl.job && ctrl.bJob\\\">\\r\\n  <div class=\\\"hidden-xs col-sm-4\\\">&nbsp;</div>\\r\\n  <div class=\\\"col-xs-12 col-sm-8\\\">\\r\\n    <br/>\\r\\n    <label>choose the specialisation</label>\\r\\n  </div>\\r\\n  <div class=\\\"hidden-xs col-sm-4\\\">&nbsp;</div>\\r\\n  <div class=\\\"col-xs-12 col-sm-4\\\">\\r\\n    <button class=\\\"btn btn-default btn-block\\\" ng-repeat=\\\"fJob in ctrl.getFinalJobs() track by $index\\\" ng-click=ctrl.setJob(fJob)>\\r\\n      <dnsim-job-icon item=::fJob></dnsim-job-icon>\\r\\n      {{fJob.name}}\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-default btn-block\\\" ng-click=\\\"ctrl.bJob = null\\\">\\r\\n      <span class=job-icon>&nbsp;</span>\\r\\n      &lt; different class\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/choose-class.html\n// module id = 151\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/choose-class.html?");

/***/ }),
/* 152 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=list-group ng-if=!ctrl.isLoading()>\\r\\n  <button class=list-group-item ng-click=ctrl.setCategory(action) ng-repeat=\\\"action in ::ctrl.categories track by $index\\\" ng-class=\\\"{'active': action == ctrl.cat}\\\" ng-show=\\\"!ctrl.collapse || !ctrl.collapsed || action == ctrl.cat\\\" ng-if=ctrl.shouldShow(action)>\\r\\n      <span class=\\\"cat-icon-{{action.name}} cat-icon\\\">\\r\\n      </span>\\r\\n        {{::ctrl.getName(action)}}\\r\\n  </button>\\r\\n</div>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-category-links.html\n// module id = 152\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-category-links.html?");

/***/ }),
/* 153 */
/***/ (function(module, exports) {

eval("module.exports = \"<span ng-if=iconImage class=\\\"item-icon {{item.rank.name}}-grade\\\" ng-style=\\\"{'background': 'url(images/icons/' + iconImage + ')', 'background-position': '-' + getIconXPostion() + 'px -' + getIconYPostion() + 'px'}\\\">&nbsp;\\r\\n</span>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-item-icon.html\n// module id = 153\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-item-icon.html?");

/***/ }),
/* 154 */
/***/ (function(module, exports) {

eval("module.exports = \"<a class=\\\"{{item.rank.name}}-grade text-left\\\" ng-href={{itemLink}}>\\r\\n  <dnsim-item-icon item=item style=float:left></dnsim-item-icon>\\r\\n  <span ng-if=\\\"item.enchantmentNum > 0\\\">\\r\\n    +{{item.enchantmentNum}}<span ng-if=\\\"item.typeName == 'talisman'\\\">%</span>\\r\\n  </span>\\r\\n  <span ng-if=\\\"item.levelLimit > 1\\\">lv{{item.levelLimit}}</span> {{item.name}}\\r\\n</a>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-item-link.html\n// module id = 154\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-item-link.html?");

/***/ }),
/* 155 */
/***/ (function(module, exports) {

eval("module.exports = \"<span ng-if=::ctrl.item.d.JobIcon class=job-icon ng-class=\\\"::{'job-icon-small': ctrl.small}\\\" ng-style=\\\"{'background': 'url(images/icons/jobicon_main.png)', 'background-position': '-' + ctrl.getIconXPostion() + 'px -' + ctrl.getIconYPostion() + 'px', 'background-size': ctrl.sizeValue}\\\">&nbsp;\\r\\n</span>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-job-icon.html\n// module id = 155\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-job-icon.html?");

/***/ }),
/* 156 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=col-xs-12 ng-if=loadError>\\r\\n  <br/>\\r\\n  data files cannot be loaded\\r\\n</div>\\r\\n<div class=col-xs-12 ng-if=noRegion>\\r\\n  <br/>\\r\\n  you must select a region\\r\\n</div>\\r\\n<div class=\\\"col-xs-12 loading\\\" ng-if=\\\"!loadError && !noRegion && (numLoading || alsoShowFor)\\\">\\r\\n</div>\\r\\n<div class=\\\"col-xs-12 text-center\\\" ng-if=\\\"!loadError && !noRegion && numLoading\\\">\\r\\n  loading ({{(1+totalToLoad-numLoading) + '/' + totalToLoad}})\\r\\n  <br/><br/><br/>\\r\\n</div>\\r\\n\\r\\n<ng-transclude ng-show=\\\"!numLoading && !noRegion && !alsoShowFor\\\"/>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets/dnsim-loading.html\n// module id = 156\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets/dnsim-loading.html?");

/***/ }),
/* 157 */,
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  character.$inject = [\"dntData\", \"itemColumnsToLoad\", \"jobs\", \"hCodeValues\"];\n  angular.module('dnsim').factory('character', character);\n  function character(dntData, itemColumnsToLoad, jobs, hCodeValues) {\n\n    var jobConversions = 'rebootplayerweighttable.lzjson';\n    var statCaps = 'playercommonleveltable.lzjson';\n    var jobBaseStats = 'playerleveltable.optimised.json';\n\n    var heroLevels = 'heroleveltable.lzjson';\n    var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\n\n    function reportProgress(msg) {\n      // console.log('progress: ' + msg);\n    }\n\n    return {\n      init: function init(complete) {\n        jobs.init(reportProgress, complete);\n        dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\n        dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\n        dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\n        dntData.init(heroLevels, null, reportProgress, complete, false);\n        dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\n      },\n\n      getHeroStats: function getHeroStats(heroLevel) {\n        var heroStats = [];\n        if (heroLevel > 0) {\n          var index = dntData.findFast(heroLevels, 'id', heroLevel);\n          if (index.length == 1) {\n            var h = dntData.getRow(heroLevels, index[0]);\n            if (h) {\n              var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\n              if (pIndex.length == 1) {\n                var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\n                if (p) {\n                  heroStats = hCodeValues.getStats(p);\n                }\n              }\n            }\n          }\n        }\n        return heroStats;\n      },\n\n      getStatCaps: function getStatCaps(level) {\n        if (level > 0) {\n          var index = dntData.findFast(statCaps, 'id', level);\n          if (index.length == 1) {\n            return dntData.getRow(statCaps, index[0]);\n          }\n        }\n\n        return {};\n      },\n\n      getConversions: function getConversions(jobId) {\n        if (jobId > 0) {\n          var index = dntData.findFast(jobConversions, 'id', jobId);\n          if (index.length == 1) {\n            return dntData.getRow(jobConversions, index[0]);\n          }\n        }\n\n        return {};\n      },\n\n      getBaseStats: function getBaseStats(level, jobId) {\n        if (level > 0 && jobId > 0) {\n          var index = dntData.findFast(jobBaseStats, 'id', Number(jobId) * 100 + Number(level) - 100);\n          if (index.length == 1) {\n            return dntData.getRow(jobBaseStats, index[0]);\n          }\n        }\n\n        return {};\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/characterService.js\n// module id = 158\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/characterService.js?");

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('itemColumnsToLoad', [itemColumnsToLoad]);\n  function itemColumnsToLoad() {\n    return {\n      mainDnt: {\n        NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\n        Type: true, TypeParam1: true, TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\n        State1: true, StateValue1: true, State1_Max: true,\n        State2: true, StateValue2: true, State2_Max: true,\n        State3: true, StateValue3: true, State3_Max: true,\n        State4: true, StateValue4: true, State4_Max: true,\n        State5: true, StateValue5: true, State5_Max: true,\n        State6: true, StateValue6: true, State6_Max: true,\n        State7: true, StateValue7: true, State7_Max: true,\n        State8: true, StateValue8: true, State8_Max: true,\n        State9: true, StateValue9: true, State9_Max: true,\n        State10: true, StateValue10: true, State10_Max: true,\n        EnchantID: true,\n        SkillID: true,\n        dragonjeweltype: true, AbleWStorage: true, ExchangeType: true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\n        TierName: true\n      },\n      partsDnt: {\n        SetItemID: true\n      },\n      enchantDnt: {\n        EnchantID: true, EnchantLevel: true, EnchantRatio: true, BreakRatio: true, MinDown: true, MaxDown: true, NeedCoin: true,\n        DisjointDrop: true,\n        NeedItemID1: true, NeedItemCount1: true, NeedItemID2: true, NeedItemCount2: true, NeedItemID3: true, NeedItemCount3: true, NeedItemID4: true, NeedItemCount4: true, NeedItemID5: true, NeedItemCount5: true, ProtectItemCount: true,\n        State1: true, State1Value: true, State2: true, State2Value: true, State3: true, State3Value: true, State4: true, State4Value: true, State5: true, State5Value: true, State6: true, State6Value: true, State7: true, State7Value: true, State8: true, State8Value: true, State9: true, State9Value: true, State10: true, State10Value: true\n      },\n      potentialDnt: {\n        PotentialID: true, PotentialNo: true, PotentialRatio: true,\n        State1: true, State1Value: true,\n        State2: true, State2Value: true,\n        State3: true, State3Value: true,\n        State4: true, State4Value: true,\n        State5: true, State5Value: true,\n        State6: true, State6Value: true,\n        State7: true, State7Value: true,\n        State8: true, State8Value: true,\n        State9: true, State9Value: true,\n        State10: true, State10Value: true,\n        State11: true, State11Value: true,\n        State12: true, State12Value: true,\n        State13: true, State13Value: true,\n        State14: true, State14Value: true,\n        State15: true, State15Value: true,\n        State16: true, State16Value: true\n      },\n      gemDnt: {\n        Type: true\n      },\n      setDnt: null,\n      sparkDnt: null,\n      jobsDnt: {\n        JobName: true, JobNumber: true, BaseClass: true, ParentJob: true, EnglishName: true, JobIcon: true\n      },\n      jobBaseStatColsToLoad: {\n        Strength: true, Agility: true, Intelligence: true, Stamina: true, AggroperPvE: true, BaseMP: true\n      },\n      statCapColsToLoad: {\n        Cbase: true,\n        Cdefense: true,\n        Ccritical: true,\n        Cfinaldamage: true,\n        CcriticalDamage: true\n      },\n      jobConversionColsToLoad: {\n        HP: true, StrengthAttack: true, AgilityAttack: true, IntelligenceAttack: true, PhysicalDefense: true, MagicDefense: true, Critical: true, CriticalResistance: true, Stiff: true, StiffResistance: true, Stun: true, StunResistance: true, MoveSpeed: true, MoveSpeedRevision: true, DownDelay: true, ElementAttack: true, ElementDefense: true, ElementDefenseMin: true, ElementDefenseMax: true, StrengthIntelligenceToCriticalDamage: true\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/columnsToLoadService.js\n// module id = 159\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/columnsToLoadService.js?");

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('dntData', ['$rootScope', '$timeout', dntData]);\n\n  var DntReader = __webpack_require__(227);\n\n  function dntData($rootScope, $timeout) {\n\n    function createLoader(dntLocation, file, colsToLoad) {\n\n      var loader = {\n        reader: new DntReader(),\n\n        loaded: false,\n        startedLoading: false,\n\n        file: file,\n\n        dntLocation: dntLocation,\n        // progressCallback: null,\n        completeCallbacks: [],\n\n        init: function init(progress, complete, ignoreErrors) {\n\n          if (this.loaded) {\n            if (complete) {\n              complete();\n            }\n          } else {\n            // this.progressCallback = progress;\n            if (complete) {\n              this.completeCallbacks.push(complete);\n            }\n\n            if (!this.startedLoading) {\n              this.startedLoading = true;\n              var t = this;\n\n              this.reader.colsToLoad = colsToLoad;\n\n              if (this.dntLocation && this.dntLocation.url && this.dntLocation.url.length) {\n\n                $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n\n                $timeout(function () {\n                  t.reader.loadDntFromServerFile(t.dntLocation.url + '/' + file, function (msg) {\n                    // if(t.progressCallback) {\n                    // t.progressCallback(msg);\n                    // }\n                  }, function (result, fileName) {\n                    // console.info('dnt loading complete : ' + file);\n                    t.loaded = true;\n\n                    angular.forEach(t.completeCallbacks, function (value, key) {\n                      if (value) {\n                        value();\n                      }\n                    });\n                    t.completeCallbacks = [];\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                  }, function (msg) {\n                    t.failed = true;\n                    if (ignoreErrors) {\n                      t.loaded = true;\n                      console.log('ignoring the error - this file may not exist yet for the region');\n                      angular.forEach(t.completeCallbacks, function (value, key) {\n                        if (value) {\n                          value();\n                        }\n                      });\n                      t.completeCallbacks = [];\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                    } else {\n                      t.startedLoading = false;\n                      t.loaded = false;\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\n                    }\n                  });\n                });\n              } else {\n                // console.log(\"dnt location not set!\");\n              }\n            }\n          }\n        },\n\n        reset: function reset() {\n          this.reader = new DntReader();\n          this.loaded = false;\n          this.startedLoading = false;\n        }\n      };\n\n      return loader;\n    };\n\n    return {\n      loaders: {},\n      findIndexes: {},\n      dntLocation: null,\n\n      setLocation: function setLocation(location) {\n        this.dntLocation = location;\n        var t = this;\n        angular.forEach(this.loaders, function (value, key) {\n          if (value.dntLocation != location) {\n            value.dntLocation = location;\n            t.reset(key);\n          }\n        });\n      },\n\n      init: function init(fileName, colsToLoad, progress, complete, ignoreErrors) {\n        if (ignoreErrors !== false) {\n          ignoreErrors = true;\n        }\n\n        if (!progress) {\n          progress = function progress() {};\n        }\n        if (!(fileName in this.loaders)) {\n          if (fileName.length > 0) {\n            this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\n          }\n        }\n        this.loaders[fileName].init(progress, complete, ignoreErrors);\n      },\n      getData: function getData(fileName) {\n        if (this.isLoaded(fileName)) {\n          var reader = this.loaders[fileName].reader;\n          var retVal = new Array(reader.numRows);\n          for (var i = 0; i < reader.numRows; ++i) {\n            retVal[i] = reader.getRow(i);\n          }\n\n          return retVal;\n        } else {\n          return [];\n        }\n      },\n      find: function find(fileName, column, value) {\n        var results = this.findFast(fileName, column, value);\n        var retVal = [];\n        var numResults = results.length;\n        for (var i = 0; i < numResults; ++i) {\n          retVal.push(this.getRow(fileName, results[i]));\n        }\n\n        return retVal;\n      },\n      findFast: function findFast(fileName, column, value) {\n\n        if (this.isLoaded(fileName)) {\n          if (!(fileName in this.findIndexes)) {\n            this.findIndexes[fileName] = {};\n          }\n\n          var reader = this.loaders[fileName].reader;\n          var colIndex = reader.columnIndexes[column];\n\n          var findIndex = this.findIndexes[fileName];\n\n          if (!(column in findIndex)) {\n            var index = {};\n            findIndex[column] = index;\n\n            var data = reader.data;\n            var len = data.length;\n            for (var r = 0; r < len; ++r) {\n              var val = data[r][colIndex];\n\n              if (!(val in index)) {\n                index[val] = [r];\n              } else {\n                index[val].push(r);\n              }\n            }\n          }\n\n          if (value in findIndex[column]) {\n            if (Array.isArray(findIndex[column][value])) {\n              return findIndex[column][value];\n            } else {\n              return [findIndex[column][value]];\n            }\n          } else {\n            return [];\n          }\n        }\n\n        return [];\n      },\n      isLoaded: function isLoaded(fileName) {\n        return fileName in this.loaders && this.loaders[fileName].loaded;\n      },\n      hasFailed: function hasFailed(fileName) {\n        return fileName in this.loaders && this.loaders[fileName].failed;\n      },\n      hasStartedLoading: function hasStartedLoading(fileName) {\n        return this.isLoaded(fileName) || fileName in this.loaders && this.loaders[fileName].startedLoading;\n      },\n      reset: function reset(fileName) {\n        if (fileName in this.loaders) {\n          this.loaders[fileName].reset();\n          delete this.loaders[fileName];\n          delete this.findIndexes[fileName];\n        }\n      },\n      resetAll: function resetAll() {\n        var t = this;\n        angular.forEach(this.loaders, function (value, key) {\n          t.reset(key);\n        });\n      },\n      anyLoading: function anyLoading() {\n        var found = 0;\n        angular.forEach(this.loaders, function (value, key) {\n          if (!value.loaded && value.startedLoading) {\n            found++;\n          }\n        });\n\n        return found;\n      },\n      getNumRows: function getNumRows(fileName) {\n        if (this.isLoaded(fileName)) {\n          return this.loaders[fileName].reader.numRows;\n        } else {\n          return 0;\n        }\n      },\n      getRow: function getRow(fileName, index) {\n        if (this.isLoaded(fileName)) {\n          return this.loaders[fileName].reader.getRow(index);\n        } else {\n          return {};\n        }\n      },\n      lookupValue: function lookupValue(fileName, data, columnName) {\n        if (this.isLoaded(fileName)) {\n          return data[this.loaders[fileName].reader.columnNames[columnName]];\n        } else {\n          return null;\n        }\n      },\n      convertData: function convertData(fileName, data) {\n        if (this.isLoaded(fileName)) {\n          return this.loaders[fileName].reader.convertData(data);\n        } else {\n          return null;\n        }\n      },\n      getValue: function getValue(fileName, index, columnName) {\n        if (this.isLoaded(fileName)) {\n          return this.loaders[fileName].reader.getValue(index, columnName);\n        } else {\n          return null;\n        }\n      },\n      saveMemory: function saveMemory() {\n        for (var fileName in this.loaders) {\n          this.loaders[fileName].saveReaderMemory();\n        }\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/dntDataService.js\n// module id = 160\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/dntDataService.js?");

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('dntInit', ['items', 'jobs', 'dntData', 'itemFactory', dntInit]);\n  function dntInit(items, jobs, dntData, itemFactory) {\n    return function (progress) {\n\n      progress('starting init');\n\n      var allFactories = [jobs];\n\n      var dntFiles = {};\n      angular.forEach(items, function (item, key) {\n        if (key != 'all') {\n          angular.forEach(item, function (value, prop) {\n            if (prop.indexOf('Dnt') == prop.length - 3) {\n              var newFactory = {\n                init: function init(progress, complete) {\n                  dntData.init(value, null, progress, complete);\n                },\n                isLoaded: function isLoaded() {\n                  return dntData.isLoaded(value);\n                },\n                fileName: value\n              };\n\n              allFactories.push(newFactory);\n            }\n          });\n        }\n      });\n\n      function initFactory(index) {\n\n        if (index < allFactories.length) {\n          allFactories[index].init(progress, function () {\n            if (allFactories[index].isLoaded()) {\n              if ('fileName' in allFactories[index]) {\n                progress('dnt loaded: ' + allFactories[index].fileName);\n              }\n              initFactory(index + 1);\n            }\n          });\n        } else {\n          progress('Full initialise complete');\n        }\n      }\n\n      initFactory(0);\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/dntInitService.js\n// module id = 161\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/dntInitService.js?");

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('dntReset', ['items', 'jobs', 'dntData', dntReset]);\n  function dntReset(items, jobs, dntData) {\n    return function () {\n\n      angular.forEach(items, function (source, name) {\n        source.reset();\n      });\n\n      jobs.reset();\n      dntData.resetAll();\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/dntResetService.js\n// module id = 162\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/dntResetService.js?");

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\n  function dvStatcardHelper() {\n    'use strict';\n\n    // Conversions between dngs stat IDs and dvstatcard keys\n\n    var statMap = {\n      0: 'statStr',\n      1: 'statAgi',\n      2: 'statInt',\n      3: 'statVit',\n      4: 'statPDmgMin',\n      5: 'statPDmgMax',\n      6: 'statMDmgMin',\n      7: 'statMDmgMax',\n      8: 'statPDef',\n      9: 'statMDef',\n      12: 'statCrit',\n      16: 'statFire',\n      17: 'statIce',\n      18: 'statLight',\n      19: 'statDark',\n      25: 'statHp',\n      26: 'statMana',\n      29: 'statFD',\n      103: 'statCritDmg'\n    };\n\n    //    Converts dngs stat IDs to dvstatcard stat keys\n    function convertStat(stat) {\n      var ret = statMap[stat.id];\n      return ret || 'unknown';\n    };\n\n    function convertPercentToNum(val) {\n      return val * 100;\n    };\n\n    //    Stats that need to have some conversion applied between dngs and dvstatcard\n    var adjustments = {\n      16: convertPercentToNum,\n      17: convertPercentToNum,\n      18: convertPercentToNum,\n      19: convertPercentToNum\n\n      //    Convert between numerical standards between dngs and dvstatcard\n    };function adjustStat(stat) {\n      var func = adjustments[stat.id];\n      if (func) {\n        return func(stat.max);\n      }\n      return stat.max;\n    };\n\n    return {\n      convertStats: function convertStats(build, buildName, calcStats) {\n        var ret = {\n          characterName: buildName,\n          remark: 'Imported from DNGearsim',\n          classId: build.job.id,\n          statHeroLevel: build.heroLevel\n        };\n        for (var k in calcStats) {\n          var v = calcStats[k];\n          ret[convertStat(v)] = adjustStat(v);\n        }\n        return ret;\n      },\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport'\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/dvStatcardService.js\n// module id = 163\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/dvStatcardService.js?");

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  exportLinkHelper.$inject = [\"$http\", \"items\", \"dntData\", \"itemFactory\", \"hCodeValues\", \"itemColumnsToLoad\", \"statHelper\", \"translations\", \"itemCategory\", \"region\"];\n  angular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\n  function exportLinkHelper($http, items, dntData, itemFactory, hCodeValues, itemColumnsToLoad, statHelper, translations, itemCategory, region) {\n\n    return {\n\n      encodeItem: function encodeItem(item, small) {\n        if (item) {\n          var itemString;\n\n          if (item.typeName == 'custom') {\n            itemString = '_custom';\n            angular.forEach(item.stats, function (stat, index) {\n              if (index > 0) {\n                itemString += '|';\n              } else {\n                itemString += ':C';\n              }\n              itemString += stat.id.toString(36) + '=' + stat.max;\n            });\n          } else if (item.id) {\n            itemString = 'I' + item.id.toString(36) + ':_';\n            if ('itemSource' in item) {\n              itemString += item.itemSource;\n            } else if ('itemTypeName' in item) {\n              // this is to support groups saved with the old property name\n              itemString += item.itemTypeName;\n            } else if (item.fileName) {\n              itemString += ':F' + item.fileName;\n            }\n\n            if (item.enchantmentNum || item.enchantmentNum == 0) {\n              itemString += ':E' + item.enchantmentNum.toString(36);\n            }\n            if (item.pid > 0) {\n              itemString += ':P' + item.pid.toString(36);\n            }\n            // if(item.setId > 0) {\n            // itemString += ':S' + item.setId.toString(36);\n            // }\n            if (item.sparkId > 0) {\n              itemString += ':H' + item.sparkId.toString(36);\n            }\n            if (item.typeName == 'skills') {\n              itemString += ':J' + item.baseJobName;\n            }\n            if (item.pve) {\n              itemString += ':V' + item.pve;\n            }\n          }\n\n          if (item.name && !small) {\n            itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\n          }\n\n          return itemString;\n        }\n\n        return '';\n      },\n\n      decodeItem: function decodeItem(itemStr) {\n        var item = {};\n\n        if (itemStr) {\n          angular.forEach(itemStr.split(':'), function (itemBit, bitIndex) {\n            if (itemBit.charAt(0) == 'I') {\n              item.id = parseInt(itemBit.substr(1), 36);\n            } else if (itemBit.charAt(0) == 'E') {\n              item.enchantmentNum = parseInt(itemBit.substr(1), 36);\n            } else if (itemBit.charAt(0) == 'P') {\n              item.pid = parseInt(itemBit.substr(1), 36);\n            } else if (itemBit.charAt(0) == 'S') {\n              item.setId = parseInt(itemBit.substr(1), 36);\n            } else if (itemBit.charAt(0) == 'H') {\n              item.sparkId = parseInt(itemBit.substr(1), 36);\n            } else if (itemBit.charAt(0) == 'J') {\n              item.baseJobName = itemBit.substr(1);\n            } else if (itemBit.charAt(0) == 'V') {\n              item.pve = itemBit.substr(1);\n            } else if (itemBit.charAt(0) == '_') {\n              item.itemSource = itemBit.substr(1);\n            } else if (itemBit.charAt(0) == '.') {\n              item.name = itemBit.substr(1).replace('-', ' ');\n            } else if (itemBit.charAt(0) == 'C') {\n              item.stats = [];\n              var statString = itemBit.substr(1);\n              angular.forEach(statString.split('|'), function (statBit, statBitIndex) {\n                var splitStat = statBit.split('=');\n                item.stats.push({\n                  id: parseInt(splitStat[0], 36),\n                  max: Number(splitStat[1])\n                });\n              });\n            } else if (itemBit.charAt(0) == 'F') {\n\n              item.fileName = itemBit.substr(1);\n              angular.forEach(items, function (itemSource, key) {\n                if (itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\n                  item.itemSource = key;\n                }\n              });\n            }\n          });\n        }\n\n        return item;\n      },\n\n      createGroupLink: function createGroupLink(groupName, group) {\n        var itemStrings = [];\n        var self = this;\n\n        if (group == null) {\n          return '';\n        }\n\n        angular.forEach(group.items, function (item, key) {\n          var itemString = self.encodeItem(item, true);\n          if (itemString && itemString.length) {\n            itemStrings.push(itemString);\n          }\n        });\n\n        var retVal = 'view-group?region=';\n        if (region.dntLocation && region.dntLocation.region) {\n          retVal += region.dntLocation.region;\n        }\n\n        if (group.enemyLevel) {\n          retVal += '&e=' + group.enemyLevel;\n        }\n        if (group.playerLevel) {\n          retVal += '&p=' + group.playerLevel;\n        }\n        if (group.heroLevel) {\n          retVal += '&h=' + group.heroLevel;\n        }\n        if (group.job && group.job.id) {\n          retVal += '&j=' + group.job.id;\n        }\n        if (group.damageType && group.damageType.id) {\n          retVal += '&d=' + group.damageType.id;\n        }\n        if (group.element && group.element.id) {\n          retVal += '&t=' + group.element.id;\n        }\n        if (group.secondaryElement && group.secondaryElement.id) {\n          retVal += '&s=' + group.secondaryElement.id;\n        }\n        retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\n        return retVal;\n      },\n\n      reloadSkill: function reloadSkill(item) {\n\n        if (!item.enchantmentNum) {\n          item.enchantmentNum = 1;\n        }\n\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n        var pv = 'pve';\n        if (item.pve == 'pvp') {\n          pv = 'pvp';\n        }\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\n\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\n        if (!skillData) {\n          console.log('cannot get skill data from ', skillDnt);\n        }\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\n\n        var skillLevelVals = {};\n        angular.forEach(skillLevelDatas, function (value, index) {\n          if (value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n          }\n        });\n\n        var newItem = {\n          id: item.id,\n          itemSource: item.itemSource,\n          typeName: item.itemSource,\n          needJobClass: skillData.NeedJob,\n          baseJobName: item.baseJobName,\n          rank: hCodeValues.rankNames[0],\n          enchantmentNum: item.enchantmentNum,\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\n          icon: skillData.IconImageIndex,\n          pve: item.pve\n        };\n\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\n        return newItem;\n      },\n\n      reloadSourceItem: function reloadSourceItem(item) {\n        var itemType = items[item.itemSource];\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\n        if (!ds.length) {\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\n          return;\n        }\n\n        var rowNum = ds[0];\n        var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\n\n        var p = null;\n\n        var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\n        if (!ps.length) {\n          ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\n        }\n\n        if (!ps.length) {\n          ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\n          if (!ps.length) {\n            ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\n          }\n        }\n\n        if (ps.length > 0) {\n          p = ps[0];\n\n          if (p.PotentialID != typeParam1) {\n            // this happened one time\n            // not sure how but it corrupted the stats\n            p = null;\n            console.log('bad potential');\n          }\n        }\n\n        var newItem = itemFactory.createItem(itemType, rowNum, p);\n        itemFactory.initItem(newItem);\n        itemCategory.setItemCategory(newItem);\n        newItem.gemSlot = item.gemSlot;\n\n        var usePartDnt = null;\n        if (newItem.typeName != 'weapons' && newItem.typeId != 0) {\n          usePartDnt = 'partsDnt';\n        } else {\n          usePartDnt = 'weaponDnt';\n        }\n\n        if (usePartDnt) {\n          if (dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\n            newItem.setStats = [];\n            var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\n            if (parts.length > 0) {\n              newItem.setId = parts[0].SetItemID;\n              var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\n              if (sets.length > 0) {\n                newItem.setStats = hCodeValues.getStats(sets[0]);\n              }\n            }\n          }\n        }\n\n        newItem.fullStats = newItem.stats;\n        if (item.enchantmentNum >= 0) {\n          newItem.enchantmentNum = item.enchantmentNum;\n\n          if (newItem.typeName == 'skills') {\n            // would this even happen?\n          } else if (newItem.typeName == 'talisman') {\n            var extraStats = [];\n            angular.forEach(newItem.stats, function (stat, index) {\n              extraStats.push({ id: stat.id, max: stat.max * (newItem.enchantmentNum / 100) });\n            });\n\n            newItem.enchantmentStats = extraStats;\n          } else if (itemType.enchantDnt) {\n            var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\n            if (!enchantments.length && itemType.enchantDnt2) {\n              enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\n            }\n\n            angular.forEach(enchantments, function (enchantment, index) {\n              if (enchantment.EnchantLevel == newItem.enchantmentNum) {\n                newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n              }\n            });\n          } else if (itemType.petLevelDnt) {\n            var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\n            angular.forEach(petLevels, function (enchantment, index) {\n              if (enchantment.PetLevel == newItem.enchantmentNum) {\n                newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n              }\n            });\n          }\n        }\n\n        if (newItem.enchantmentStats) {\n          newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n        }\n\n        if (item.sparkId > 0) {\n          newItem.sparkId = item.sparkId;\n          var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\n          if (sparks.length > 0) {\n            newItem.sparkStats = hCodeValues.getStats(sparks[0]);\n            newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\n          }\n        } else if (newItem.dragonjeweltype) {\n          newItem.offensiveGemSlots = 0;\n          newItem.increasingGemSlots = 0;\n          var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\n          if (itemData && itemData.length > 0) {\n            if (itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\n            if (itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\n            if (itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\n            if (itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\n\n            if (itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\n            if (itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\n            if (itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\n            if (itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\n          }\n        }\n\n        return newItem;\n      },\n\n      reloadItem: function reloadItem(item) {\n\n        if (item == null) {\n          // console.log('cannot reload null item');\n          return;\n        }\n\n        // support for old property name\n        if ('itemTypeName' in item && !item.itemSource) {\n          item.itemSource = item.itemTypeName;\n        }\n\n        // console.log('checking ' + item.itemSource)\n        if (item.itemSource == 'rbTech') {\n          item.itemSource = 'tech';\n          // console.log('changed to ' + item.itemSource)\n        }\n\n        if (item.itemSource == 'custom' || item.typeName == 'custom') {\n          item.typeName = 'custom';\n          return item;\n        } else if (item.itemSource == 'skills' || item.typeName == 'skills') {\n          return this.reloadSkill(item);\n        } else if (item.itemSource in items) {\n          var itemType = items[item.itemSource];\n          var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\n          if (ds.length) {\n            return this.reloadSourceItem(item);\n          }\n        }\n\n        if (item.fileName) {\n          var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\n          if (datas.length > 0) {\n            var row = datas[0];\n            var d = dntData.getRow(item.fileName + '.lzjson', row);\n            var newItem = itemFactory.createBasicItem(d);\n            newItem.row = row;\n            newItem.needJobClass = d.NeedJobClass;\n            newItem.exchangeType = d.ExchangeType;\n            newItem.fileName = item.fileName;\n            newItem.gemSlot = item.gemSlot;\n            newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\n            itemFactory.initItem(newItem);\n            return newItem;\n          } else {\n            return { name: 'unknown item' };\n          }\n        } else {\n          return { name: 'unknown item source: ' + item.itemSource };\n        }\n      },\n\n      getDntFiles: function getDntFiles(item) {\n        if (item == null) {\n          return {};\n        }\n\n        var dntFiles = {};\n        if (!item.itemSource && item.itemTypeName in items) {\n          item.itemSource = item.itemTypeName;\n        }\n\n        if (item.itemSource == 'rbTech') {\n          item.itemSource = 'tech';\n        }\n\n        if (item.itemSource in items) {\n          var itemType = items[item.itemSource];\n\n          dntFiles['exchange.lzjson'] = null;\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\n\n          for (var fileType in itemType) {\n            if (fileType.indexOf('Dnt') > 0) {\n              if (fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\n                dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\n              }\n            }\n          }\n        }\n\n        if (item.itemSource == 'skills' || item.typeName == 'skills') {\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n          dntFiles[skillDnt] = null;\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\n          dntFiles[skillLevelDnt] = null;\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\n          dntFiles[skillLevelDnt] = null;\n        }\n\n        if (item.fileName) {\n          dntFiles[item.fileName + '.lzjson'] = null;\n        }\n\n        return dntFiles;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/exportLinkServices.js\n// module id = 164\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/exportLinkServices.js?");

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('groupHelper', ['exportLinkHelper', groupHelper]);\n  function groupHelper(exportLinkHelper) {\n    'use strict';\n\n    return {\n      reloadGroup: function reloadGroup(groupName, group) {\n        var newItems = [];\n        angular.forEach(group.items, function (item, key) {\n          var newItem = exportLinkHelper.reloadItem(item);\n          if (newItem) {\n            newItems.push(newItem);\n          }\n        });\n\n        return newItems;\n      },\n\n      getDntFiles: function getDntFiles(group) {\n\n        var allDntFiles = {};\n        angular.forEach(group.items, function (item, key1) {\n\n          var dntFiles = exportLinkHelper.getDntFiles(item);\n\n          angular.forEach(dntFiles, function (value, key) {\n            allDntFiles[key] = value;\n          });\n        });\n\n        return allDntFiles;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/groupServices.js\n// module id = 165\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/groupServices.js?");

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('itemCategory', ['itemFactory', 'items', 'dntData', itemCategory]);\n  function itemCategory(itemFactory, items, dntData) {\n\n    return {\n      categories: [{ path: 'everything', name: 'everything', searchType: 'everything', hideInBuild: true }, { path: 'titles', name: 'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1 }, { path: 'weapons', name: 'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1, 2] }, { path: 'armour', name: 'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3, 4, 5, 6, 7] }, { path: 'accessories', name: 'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8, 9, 10], tId: 7604 }, { path: 'techs', name: 'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8, 9, 10], hideJob: true }, { path: 'offensive-gems', name: 'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54], limitGemType: 1 }, { path: 'increasing-gems', name: 'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54], limitGemType: 2 }, { path: 'enhancement-plates', name: 'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0, 1, 2, 3] }, { path: 'expedition-plates', name: 'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4, 5] }, { path: 'talisman', name: 'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52, 53], tId: 1000054149 }, { path: 'costume', name: 'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16, 17, 18, 19, 20, 21, 22], tId: 7607 }, { path: 'imprint', name: 'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314 }, { path: 'cash', name: 'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23, 24, 25, 26, 27, 28, 29], tId: 7608 }, { path: 'extras', name: 'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504 }, { path: 'skills', name: 'skills', searchType: 'skills' }, { path: 'custom', name: 'custom', searchType: 'custom', hideInSearch: true }],\n\n      byName: function byName(name) {\n        var retVal = null;\n        angular.forEach(this.categories, function (category, index) {\n          if (category.name == name) {\n            retVal = category;\n          }\n        });\n\n        return retVal;\n      },\n\n      byPath: function byPath(name) {\n        var retVal = null;\n        angular.forEach(this.categories, function (category, index) {\n          if (category.path == name) {\n            retVal = category;\n          }\n        });\n\n        return retVal;\n      },\n\n      getItems: function getItems(name) {\n        var cat = this.byName(name);\n        if (cat && 'sourceType' in cat) {\n          var retVal = [];\n          angular.forEach(items, function (source, sourceName) {\n            if (source.type == cat.sourceType && retVal) {\n              if (!source.items && !source.loading) {\n                itemFactory.loadItems(source);\n              }\n\n              if (source.items) {\n                retVal = retVal.concat(source.items);\n              } else {\n                retVal = null; // if any are null just return null\n              }\n            }\n          });\n\n          var catItems = [];\n          if (retVal) {\n            var vm = this;\n            angular.forEach(retVal, function (item, index) {\n              if (item.typeName == name) {\n                catItems.push(item);\n              } else if (vm.isItemForCat(cat, item, item.data)) {\n                item.typeName = name;\n                catItems.push(item);\n              }\n            });\n          }\n\n          return catItems;\n        } else {\n          return null;\n        }\n      },\n\n      isItemForCat: function isItemForCat(cat, item) {\n\n        if (!(item.itemSource in items)) {\n          return false;\n        }\n\n        if (items[item.itemSource].type != cat.sourceType) {\n          return false;\n        }\n\n        if (item.itemType == cat.name) {\n          return true;\n        }\n\n        var anyMatch;\n        if (cat.limitExchange) {\n          anyMatch = false;\n          for (var i = 0; i < cat.limitExchange.length; ++i) {\n            if (cat.limitExchange[i] == item.exchangeType || item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType) {\n              anyMatch = true;\n            }\n          }\n\n          if (!anyMatch) {\n            return false;\n          }\n        }\n\n        if (cat.limitRank) {\n          anyMatch = false;\n          for (var i = 0; i < cat.limitRank.length; ++i) {\n            if (item.rank && cat.limitRank[i] == item.rank.id || item.rawData && cat.limitRank[i] == item.rawData.Rank) {\n              anyMatch = true;\n            }\n          }\n\n          if (!anyMatch) {\n            return false;\n          }\n        }\n\n        if (cat.limitGemType) {\n          var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\n          if (gemTypes.length > 0) {\n\n            if (gemTypes[0].Type != cat.limitGemType) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      },\n\n      init: function init(name, complete) {\n        var cat = this.byName(name);\n        if (cat && 'sourceType' in cat) {\n          var sources = _.filter(items, function (source) {\n            return source.type == cat.sourceType;\n          });\n\n          var numComplete = 0;\n          _.each(sources, function (source) {\n            source.init(function () {}, function () {\n              numComplete++;\n              if (numComplete == sources.length) {\n                complete();\n              }\n            });\n          });\n        }\n      },\n\n      setItemCategory: function setItemCategory(item, rawData) {\n        var vm = this;\n\n        angular.forEach(this.categories, function (cat, index) {\n          if (vm.isItemForCat(cat, item, rawData)) {\n            item.typeName = cat.name;\n          }\n        });\n      },\n\n      getItemsByCategory: function getItemsByCategory(items) {\n        var itemMap = {};\n        if (items) {\n          var types = {};\n          angular.forEach(items, function (item, index) {\n            if (item) {\n              if (!(item.typeName in types)) {\n                types[item.typeName] = [];\n              }\n              types[item.typeName].push(item);\n            }\n          });\n\n          angular.forEach(this.categories, function (category, index) {\n\n            if (category.name in types) {\n\n              var sorted = types[category.name].sort(function (item1, item2) {\n                if (category.name == 'talisman') {\n\n                  var enh1 = item1.enchantmentNum;\n                  if (!enh1) enh1 = 0;\n                  var enh2 = item2.enchantmentNum;\n                  if (!enh2) enh2 = 0;\n\n                  if (enh1 != enh2) {\n                    return enh2 - enh1;\n                  }\n                } else if (item1.itemSource == 'gem' || item1.itemSource == 'plate') {\n                  if (item1.gemSlot || item2.gemSlot) {\n                    if (!item1.gemSlot) {\n                      return 1;\n                    } else if (!item2.gemSlot) {\n                      return -1;\n                    }\n                    return item1.gemSlot - item2.gemSlot;\n                  } else if (item2.levelLimit != item1.levelLimit) {\n                    return item2.levelLimit - item1.levelLimit;\n                  }\n                } else if ('exchangeType' in item1 && 'exchangeType' in item2) {\n                  return item1.exchangeType - item2.exchangeType;\n                }\n\n                return item1.name.localeCompare(item2.name);\n              });\n              itemMap[category.name] = sorted;\n            } else {\n              itemMap[category.name] = [];\n            }\n          });\n\n          /*\r\n          angular.forEach(items, function(item, index) {\r\n            if(item && !(item.typeName in itemMap)) {\r\n              // console.log('we dont know ' + item.typeName + ' anymore')\r\n              itemMap.typeError = true;\r\n            }\r\n          });\r\n          */\n        }\n        return itemMap;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/itemCategoryService.js\n// module id = 166\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/itemCategoryService.js?");

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n    'use strict';\n\n    angular.module('dnsim').factory('excludeService', excludeService);\n\n    function excludeService() {\n        return {\n            ids: [{\n                name: 'unbound plates',\n                min: 0,\n                max: 0\n            }]\n        };\n    }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/itemExcludeService.js\n// module id = 167\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/itemExcludeService.js?");

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  itemFactory.$inject = [\"translations\", \"dntData\", \"hCodeValues\", \"items\"];\n  angular.module('dnsim').factory('itemFactory', itemFactory);\n\n  function itemFactory(translations, dntData, hCodeValues, items) {\n\n    return {\n      loadItems: loadItems,\n      initItem: initItem,\n      createItem: createItem,\n      getItemData: getItemData,\n      createBasicItem: createBasicItem\n    };\n\n    function createItem(itemType, row, p) {\n\n      // data and potential are used to initialise name and stats\n      // this is only done when needed\n      // they are then removed from the object\n      return {\n        row: row,\n        potential: p,\n        id: dntData.getValue(itemType.mainDnt, row, 'id'),\n        itemSource: itemType.name,\n        levelLimit: Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\n        needJobClass: Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\n        typeId: dntData.getValue(itemType.mainDnt, row, 'Type'),\n        exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\n        rank: hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\n        pid: null,\n        name: null,\n        stats: null,\n        potentialRatio: null,\n        typeName: null,\n        sparkId: null\n      };\n    }\n\n    function isDataLoaded(itemType) {\n\n      if (!dntData.isLoaded(itemType.mainDnt)) {\n        return false;\n      }\n\n      if (!translations.isLoaded()) {\n        return false;\n      }\n\n      if ('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\n        return false;\n      }\n\n      if ('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\n        return false;\n      }\n\n      return true;\n    }\n\n    function loadItems(itemType) {\n\n      if (!isDataLoaded(itemType)) {\n        return null;\n      }\n\n      var start = new Date().getTime();\n\n      itemType.items = [];\n      var numRows = dntData.getNumRows(itemType.mainDnt);\n      for (var r = 0; r < numRows; ++r) {\n        var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\n\n        var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\n\n        // skip items with no data\n        if (state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {\n          var potentials = [];\n          if (dTypeParam1 > 0 && 'potentialDnt' in itemType) {\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\n\n            if (!potentials.length && 'potentialDntEx' in itemType) {\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\n            }\n          }\n\n          var numPotentials = potentials.length;\n          if (!numPotentials) {\n            potentials = [null];\n            numPotentials = 1;\n          }\n\n          for (var p = 0; p < numPotentials; ++p) {\n            var found = false;\n            if (!found) {\n              itemType.items.push(createItem(itemType, r, potentials[p], 0));\n            }\n          }\n        }\n      }\n\n      var end = new Date().getTime();\n      var time = end - start;\n      console.log('item init time: ' + time / 1000 + 's for ' + itemType.name);\n    }\n\n    function initItem(item) {\n\n      if (item.row >= 0) {\n        var d;\n        if (item.itemSource && item.itemSource in items) {\n          d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\n        } else if (item.fileName) {\n          d = dntData.getRow(item.fileName + '.lzjson', item.row);\n        }\n        delete item.row;\n\n        var p = item.potential;\n\n        if (item.name == null) {\n          item.name = translations.translate(d.NameID, d.NameIDParam);\n          if (d.TierName) {\n            item.name += ' (' + translations.translate(d.TierName) + ')';\n          }\n        }\n\n        if (!item.sparkTypeId && d.TypeParam2 > 0) {\n          item.sparkTypeId = d.TypeParam2;\n        }\n\n        if (item.stats == null) {\n          var stats = hCodeValues.getStats(d);\n          if (p) {\n            var potentialStats = hCodeValues.getStats(p);\n            stats = hCodeValues.mergeStats(stats, potentialStats);\n          }\n\n          item.stats = stats;\n        }\n\n        if (d.SkillID && !item.skillId) {\n          item.skillId = d.SkillID;\n        }\n\n        if (item.iconIndex == null) {\n          item.icon = d.IconImageIndex;\n          if (!item.icon && item.itemSource == 'title') {\n            item.icon = 12417;\n          }\n        }\n\n        if (d.dragonjeweltype >= 0) {\n          item.dragonjeweltype = d.dragonjeweltype;\n        }\n\n        if (d.EnchantID && !item.enchantmentId) {\n          item.enchantmentId = d.EnchantID;\n        }\n\n        if (d.EnchantID && !item.enchantmentId) {\n          item.enchantmentId = d.EnchantID;\n        } else if (d.Type == 35) {\n          item.itemSource = 'xtras';\n          var itemType = items[item.itemSource];\n          if (itemType) {\n            // item.fileName = itemType.mainDnt;\n            var petData = dntData.find(itemType.petDnt, 'id', d.id);\n            if (petData && petData.length) {\n              item.enchantmentId = petData[0].PetLevelTypeID;\n            }\n          }\n        }\n\n        if (p) {\n          item.pid = p.id;\n        }\n\n        delete item.potential;\n      }\n    }\n\n    function getItemData(item) {\n      var itemType = items[item.itemSource];\n\n      if (item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\n        var result = getItemDataFromFile(item.fileName + '.lzjson', item);\n        if (result) {\n          return result;\n        }\n      }\n\n      if (item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\n        var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\n        if (result) {\n          return result;\n        }\n      }\n\n      if (itemType && dntData.isLoaded(itemType.mainDnt)) {\n        var result = getItemDataFromFile(itemType.mainDnt, item);\n        if (result) {\n          return result;\n        }\n      }\n\n      return [];\n    }\n\n    function getItemDataFromFile(fileName, item) {\n      if (fileName) {\n        var itemData = dntData.find(fileName, 'id', item.id);\n        if (itemData && itemData.length > 0) {\n          return itemData[0];\n        }\n      }\n\n      return null;\n    }\n\n    function createBasicItem(d) {\n      if (!d) {\n        return [];\n      }\n      return {\n        id: d.id,\n        name: translations.translate(d.NameID, d.NameIDParam),\n        rank: hCodeValues.rankNames[d.Rank],\n        icon: d.IconImageIndex,\n        levelLimit: d.LevelLimit,\n        fileName: d.fileName,\n        typeId: d.Type\n      };\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/itemFactoryService.js\n// module id = 168\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/itemFactoryService.js?");

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('items', ['translations', 'dntData', 'itemColumnsToLoad', items]);\n  function items(translations, dntData, itemColumnsToLoad) {\n\n    var itemSources = {\n\n      title: {\n        mainDnt: 'appellationtable.optimised.json',\n        type: 'titles',\n        minLevel: 0,\n        minRank: 0 },\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\n\n      tech: {\n        mainDnt: 'itemtable_skilllevelup.optimised.json',\n        potentialDnt: 'potentialtable.optimised.json',\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'techs',\n        minLevel: 60,\n        minRank: 0 },\n\n      tman: {\n        mainDnt: 'itemtable_talisman.optimised.json',\n        type: 'talisman',\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\n        minLevel: 24,\n        minRank: 0 },\n\n      gem: {\n        mainDnt: 'itemtable_dragonjewel.optimised.json',\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json',\n        gemDnt: 'dragonjeweltable.optimised.json',\n        type: 'gems',\n        minLevel: 24,\n        minRank: 3 },\n\n      plate: {\n        mainDnt: 'itemtable_glyph.optimised.json',\n        potentialDnt: 'potentialtable_glyph.optimised.json',\n        type: 'plates',\n        minLevel: 16,\n        minRank: 2 },\n      plate95: {\n        mainDnt: 'itemtable_glyph95.lzjson',\n        potentialDnt: 'potentialtable_glyph95.lzjson',\n        type: 'plates',\n        minLevel: 1,\n        minRank: 1,\n        ignoreErrors: true },\n\n      items: {\n        mainDnt: 'itemtable.optimised.json',\n        partsDnt: 'partstable.optimised.json',\n        weaponDnt: 'weapontable.optimised.json',\n        enchantDnt: 'enchanttable.optimised.json',\n        potentialDnt: 'potentialtable.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 80,\n        minRank: 3 },\n      eq: {\n        mainDnt: 'itemtable_equipment.optimised.json',\n        partsDnt: 'partstable_equipment.optimised.json',\n        weaponDnt: 'weapontable_equipment.optimised.json',\n        enchantDnt: 'enchanttable.optimised.json',\n        potentialDnt: 'potentialtable.optimised.json',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 21,\n        minRank: 3 },\n      rbeq: {\n        mainDnt: 'itemtable_reboot.optimised.json',\n        partsDnt: 'partstable_reboot.optimised.json',\n        weaponDnt: 'weapontable_reboot.optimised.json',\n        enchantDnt: 'enchanttable_reboot.optimised.json',\n        enchantDnt2: 'enchanttable_95.lzjson',\n        potentialDnt: 'potentialtable_reboot.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      pvpeq: {\n        mainDnt: 'itemtable_pvp.optimised.json',\n        partsDnt: 'partstable_pvp.optimised.json',\n        weaponDnt: 'weapontable_pvp.optimised.json',\n        enchantDnt: 'enchanttable.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        type: 'equipment',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        minLevel: 24,\n        minRank: 3 },\n\n      cCommon: {\n        mainDnt: 'itemtable_commoncash.lzjson',\n        partsDnt: 'partstable_commoncash.lzjson',\n        weaponDnt: 'weapontable_commoncash.lzjson',\n        setDnt: 'setitemtable_cash.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 4 },\n      cClone: {\n        mainDnt: 'itemtable_cashclone.optimised.json',\n        partsDnt: 'partstable_cashclone.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 4 },\n      c2016: {\n        mainDnt: 'itemtable_common2016.optimised.json',\n        partsDnt: 'partstable_common2016.optimised.json',\n        weaponDnt: 'weapontable_common2016.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2017: {\n        mainDnt: 'itemtable_common2017.optimised.json',\n        partsDnt: 'partstable_common2017.optimised.json',\n        weaponDnt: 'weapontable_common2017.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 0 },\n      c2015: {\n        mainDnt: 'itemtable_common2015.optimised.json',\n        partsDnt: 'partstable_common2015.optimised.json',\n        weaponDnt: 'weapontable_common2015.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2014: {\n        mainDnt: 'itemtable_common2014.optimised.json',\n        partsDnt: 'partstable_common2014.optimised.json',\n        weaponDnt: 'weapontable_common2014.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      cash: {\n        mainDnt: 'itemtable_cash.optimised.json',\n        partsDnt: 'partstable_cash.optimised.json',\n        weaponDnt: 'weapontable_cash.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      event: {\n        mainDnt: 'itemtable_event.optimised.json',\n        partsDnt: 'partstable_event.optimised.json',\n        weaponDnt: 'weapontable_event.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      xtras: {\n        mainDnt: 'itemtable_vehicle.optimised.json',\n        partsDnt: 'vehiclepartstable.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        petDnt: 'vehicletable.lzjson',\n        petLevelDnt: 'petleveltable.lzjson',\n        type: 'xtras',\n        minLevel: 0,\n        minRank: 0 },\n      imprint: {\n        mainDnt: 'itemtable_imprinting.optimised.json',\n        type: 'imprint',\n        minLevel: 0,\n        minRank: 0 }\n    };\n\n    // now that the sources are set up add some methods on them for initialisation\n    // each source will store the items from that source for reuse by searches\n    angular.forEach(itemSources, function (itemSource, key) {\n      itemSource.name = key;\n      itemSource.loading = false;\n      itemSource.items = null;\n      itemSource.init = init; // decalared below\n      itemSource.reset = function () {\n        itemSource.items = null;\n        itemSource.loading = false;\n      };\n    });\n\n    return itemSources;\n\n    function init(progress, complete) {\n      var itemSource = this;\n      itemSource.loading = true;\n\n      if (itemSource.items) {\n        complete();\n      } else {\n\n        translations.init(progress, function () {\n          doComplete(itemSource, complete);\n        });\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function () {\n          doComplete(itemSource, complete);\n        }, itemSource.ignoreErrors);\n        if ('potentialDnt' in itemSource) {\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function () {\n            doComplete(itemSource, complete);\n          }, itemSource.ignoreErrors);\n        }\n        if ('potentialDntEx' in itemSource) {\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function () {\n            doComplete(itemSource, complete);\n          }, itemSource.ignoreErrors);\n        }\n        if ('gemDnt' in itemSource) {\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function () {\n            doComplete(itemSource, complete);\n          }, itemSource.ignoreErrors);\n        }\n\n        doComplete(itemSource, complete);\n      }\n    }\n\n    function doComplete(itemSource, complete) {\n      if (translations.isLoaded() && dntData.isLoaded(itemSource.mainDnt) && (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) && (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) && (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))) {\n        complete();\n        itemSource.loading = false;\n      }\n    }\n  };\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/itemSourceService.js\n// module id = 169\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/itemSourceService.js?");

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\n  function jobs(dntData, translations, itemColumnsToLoad) {\n\n    var fileName = 'jobtable.lzjson';\n    var colsToLoad = itemColumnsToLoad.jobsDnt;\n\n    return {\n      fileName: fileName,\n      allJobs: null,\n\n      isLoaded: function isLoaded() {\n        return dntData.isLoaded(fileName);\n      },\n\n      hasStartedLoading: function hasStartedLoading() {\n        return dntData.hasStartedLoading(fileName);\n      },\n\n      init: function init(progress, complete) {\n        dntData.init(fileName, colsToLoad, progress, function () {\n          complete();\n        }, false);\n      },\n\n      reset: function reset() {\n        this.allJobs = null;\n        dntData.reset(fileName);\n      },\n\n      getFinalJobs: function getFinalJobs() {\n        var jobs = [];\n        var alljobs = this.getAllJobs();\n        if (alljobs) {\n          var numRows = alljobs.length;\n          for (var r = 0; r < numRows; ++r) {\n            if (alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\n              jobs.push(alljobs[r]);\n            }\n          }\n        }\n\n        return jobs;\n      },\n\n      getBaseJobs: function getBaseJobs() {\n        var retVal = [];\n        var baseJobs = {};\n\n        var self = this;\n        angular.forEach(this.getFinalJobs(), function (job, key) {\n          baseJobs[self.getBaseJobName(job)] = job;\n        });\n\n        angular.forEach(baseJobs, function (job, jobName) {\n          retVal.push(jobName);\n        });\n\n        return retVal;\n      },\n\n      getAllJobs: function getAllJobs() {\n        if (this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\n          var jobs = [];\n          var data = dntData.getData(fileName);\n          var numRows = data.length;\n          for (var r = 0; r < numRows; ++r) {\n            jobs[jobs.length] = this.createJob(data[r]);\n          }\n\n          this.allJobs = jobs;\n        }\n        return this.allJobs;\n      },\n\n      getById: function getById(id) {\n        var data = this.getAllJobs();\n        if (data) {\n          var numRows = data.length;\n          for (var r = 0; r < numRows; ++r) {\n            if (data[r].id == id) {\n              return data[r];\n            }\n          }\n        }\n      },\n\n      createJob: function createJob(d) {\n        var t = this;\n        return {\n          d: d,\n          id: d.id,\n          name: translations.translate(d.JobName),\n          isClassJob: function isClassJob(c) {\n            return t.isClassJob(d, c);\n          }\n        };\n      },\n\n      isClassJob: function isClassJob(d, c) {\n        if (!c) return true;\n        if (d.id == c) {\n          return true;\n        }\n\n        var parentJob = d.ParentJob;\n\n        if (!parentJob) return false;\n        if (parentJob == c) return true;\n\n        var parentJobData = this.getById(parentJob);\n        if (parentJobData) {\n          return this.isClassJob(parentJobData.d, c);\n        }\n\n        return false;\n      },\n\n      getBaseJobName: function getBaseJobName(job) {\n        if (this.isLoaded()) {\n          var alljobs = this.getAllJobs();\n          if (alljobs) {\n            var numRows = alljobs.length;\n            for (var r = 0; r < numRows; ++r) {\n              if (alljobs[r].id == job.d.BaseClass + 1 && alljobs[r].d.EnglishName) {\n                return alljobs[r].d.EnglishName;\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/jobService.js\n// module id = 170\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/jobService.js?");

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n  'use strict';\n\n  var firebase = __webpack_require__(172);\n  var LZString = __webpack_require__(13);\n\n  angular.module('dnsim').factory('onlineService', ['$window', '$q', 'hCodeValues', onlineService]);\n\n  function onlineService($window, $q, hCodeValues) {\n    // console.log('setup online service');\n\n    var service = {\n      login: login,\n      getUser: function getUser() {\n        return firebase.auth().currentUser;\n      },\n      signOut: signOut,\n      deleteAccount: deleteAccount,\n\n      getUserBuilds: getUserBuilds,\n      deleteBuild: deleteBuild,\n      saveBuild: saveBuild,\n      getBuild: getBuild,\n      getClassBuilds: getClassBuilds,\n\n      getProfile: getProfile,\n      saveProfile: saveProfile,\n\n      stripBuildName: stripBuildName\n    };\n\n    init();\n\n    return service;\n\n    function init() {\n      // console.log('init');\n      firebase.initializeApp({\n        apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\n        authDomain: 'dngearsim.firebaseapp.com',\n        databaseURL: 'https://dngearsim.firebaseio.com',\n        storageBucket: 'dngearsim.appspot.com'\n      });\n    }\n\n    function login() {\n      return $q(function (resolve, reject) {\n        var auth = firebase.auth();\n\n        auth.onAuthStateChanged(function (user) {\n          if (user == null) {\n            // console.log('redirecting');\n            $window.location.href = 'login.html';\n          } else {\n            // console.log('logged in');\n            resolve(user);\n          }\n        });\n      });\n    }\n\n    function getProfile(uid) {\n      // console.log('get profile');\n      return $q(function (resolve, reject) {\n        firebase.database().ref('profile/' + uid).once('value', function (storedProfile) {\n          if (storedProfile) {\n            resolve(storedProfile.val());\n          } else {\n            resolve({});\n          }\n        });\n      });\n    }\n\n    function getBuild(uid, buildName) {\n      // console.log('get build');\n      return $q(function (resolve, reject) {\n        firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function (storedProfile) {\n          if (storedProfile) {\n            resolve(decompressBuild(storedProfile.val()));\n          } else {\n            resolve({});\n          }\n        });\n      });\n    }\n\n    function saveProfile(profile) {\n      return $q(function (resolve, reject) {\n        var user = service.getUser();\n        if (user) {\n          profile = angular.copy(profile);\n          deleteNullProperties(profile, true);\n          firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\n        }\n      });\n    }\n\n    function getUserBuilds(uid) {\n      // console.log('get builds');\n      return $q(function (resolve, reject) {\n        // console.log('getting builds');\n        firebase.database().ref('builds/' + uid).once('value', function (storedBuilds) {\n          if (storedBuilds) {\n            var retVal = {};\n            var val = storedBuilds.val();\n            for (var buildName in val) {\n              retVal[buildName] = decompressBuild(val[buildName]);\n            }\n            resolve(retVal);\n          } else {\n            resolve({});\n          }\n        });\n      });\n    }\n\n    function getClassBuilds(job) {\n      // console.log('get class builds');\n      return $q(function (resolve, reject) {\n        // console.log('getting builds', job.id);\n        firebase.database().ref('job-builds/' + job.id).once('value', function (jobBuilds) {\n          // console.log('ok');\n          if (jobBuilds) {\n            resolve(jobBuilds.val());\n          } else {\n            resolve({});\n          }\n        });\n      });\n    }\n\n    function compressBuild(build) {\n\n      if (build.items) {\n        _.each(build.items, function (item) {\n          delete item.fullStats;\n        });\n      }\n\n      var stringifiedData = JSON.stringify(build);\n      return LZString.compressToUTF16(stringifiedData);\n    }\n\n    function decompressBuild(compressedBuild) {\n      var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\n      var build = JSON.parse(stringifiedData);\n\n      if (build.items) {\n        _.each(build.items, function (item) {\n          item.fullStats = item.stats;\n\n          if (item.enchantmentStats && item.enchantmentStats.length) {\n            item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\n          }\n\n          if (item.sparkStats && item.sparkStats.length) {\n            item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\n          }\n        });\n      }\n\n      return build;\n    }\n\n    function saveBuild(buildName, build) {\n      var user = service.getUser();\n      var actions = [];\n      if (user) {\n        build = angular.copy(build);\n        deleteNullProperties(build, true);\n        // console.log('saving', build);\n        actions.push(firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build)));\n\n        if (build.job && build.job.id) {\n          // console.log('saving build');\n\n          var data = {};\n          if (build.playerLevel) {\n            data.lev = build.playerLevel;\n          }\n          if (build.region) {\n            data.region = build.region;\n          }\n          if (build.guild) {\n            data.guild = build.guild;\n          }\n          if (build.about) {\n            data.about = build.about;\n          }\n\n          deleteNullProperties(data, true);\n\n          actions.push(firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data));\n        }\n      }\n      return $q.all(actions);\n    }\n\n    function deleteNullProperties(test, recurse) {\n      for (var i in test) {\n        if (test[i] === undefined) {\n          delete test[i];\n        } else if (recurse && _typeof(test[i]) === 'object') {\n          deleteNullProperties(test[i], recurse);\n        }\n      }\n    }\n\n    function signOut() {\n      var auth = firebase.auth();\n      return $q(function (resolve, reject) {\n        auth.signOut().then(function () {\n          resolve();\n        }, function (error) {\n          reject();\n        });\n      });\n    }\n\n    function deleteAccount(builds) {\n      var auth = firebase.auth();\n      var user = service.getUser();\n\n      return $q(function (resolve, reject) {\n\n        var pList = [firebase.database().ref('builds/' + user.uid).remove(), firebase.database().ref('profile/' + user.uid).remove(), firebase.database().ref('private/' + user.uid).remove()];\n\n        var jobIds = [];\n        for (var buildName in builds) {\n          if (builds[buildName].job) {\n            jobIds.push(builds[buildName].job.id);\n          }\n        }\n\n        jobIds = _.uniq(jobIds);\n        _.each(jobIds, function (id) {\n          pList.push(firebase.database().ref('job-builds/' + id + '/' + user.uid).remove());\n        });\n\n        $q.all(pList).then(function () {\n          // console.log('deleted data');\n          user.delete().then(function () {\n            // console.log('deleted user');\n            auth.signOut().then(function () {\n              // console.log('signed out');\n              resolve();\n            }, function (error) {\n              reject();\n            });\n          });\n        });\n      });\n    }\n\n    function deleteBuild(buildName, build) {\n\n      var pList = [];\n      var user = service.getUser();\n      if (user) {\n        pList.push(firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\n\n        if (build.job) {\n          pList.push(firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\n        }\n      }\n\n      return $q.all(pList);\n    }\n\n    function stripBuildName(buildName) {\n      return buildName.replace(/[.$\\[\\]#\\/]/g, '');\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/onlineService.js\n// module id = 171\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/onlineService.js?");

/***/ }),
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  quickAddHelper.$inject = [\"dntData\", \"translations\", \"itemColumnsToLoad\", \"itemCategory\", \"itemFactory\", \"jobs\", \"hCodeValues\"];\n  angular.module('dnsim').factory('quickAddHelper', quickAddHelper);\n  function quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory, itemFactory, jobs, hCodeValues) {\n\n    return {\n      getItem: getItem,\n      findData: findData\n    };\n\n    function getItem(datas) {\n      var item = null;\n      for (var d = 0; d < datas.length; ++d) {\n        if (datas[d].def.isItemStep) {\n          item = datas[d].value;\n        }\n      }\n\n      for (var d = 0; d < datas.length; ++d) {\n        if (datas[d].def.alterItem) {\n          datas[d].def.alterItem(datas[d].value.id, item);\n        }\n      }\n\n      return item;\n    }\n\n    function findData(category, build, datas, maxItems) {\n      if (!maxItems) {\n        maxItems = 9999;\n      }\n\n      var allItems = itemCategory.getItems(category.name);\n      var retVal = [];\n      var numItems = allItems.length;\n\n      var sortFunc = null;\n      var sortId = null;\n\n      for (var i = 0; i < numItems; ++i) {\n\n        var item = allItems[i];\n\n        if (!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\n          continue;\n        }\n        itemFactory.initItem(item);\n\n        var addItem = true;\n        for (var d = 0; d < datas.length; ++d) {\n          if (!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\n            if ('sortFunc' in datas[d].def) {\n              sortFunc = datas[d].def.sortFunc;\n              sortId = datas[d].value.id;\n            }\n          } else {\n            addItem = false;\n            break;\n          }\n        }\n\n        if (addItem) {\n          retVal.push(item);\n        }\n\n        if (retVal.length >= maxItems) {\n          break;\n        }\n      }\n\n      retVal = filterDuplicates(retVal);\n\n      retVal = retVal.sort(function (item1, item2) {\n        if (sortFunc) {\n          return sortFunc(sortId, item1, item2);\n        } else {\n          return item1.name.localeCompare(item2.name);\n        }\n      });\n\n      return retVal;\n    }\n\n    function filterDuplicates(items) {\n      var retVal = [];\n      for (var i = 0; i < items.length; ++i) {\n        var found = false;\n        for (var j = 0; j < i; ++j) {\n          if (areSameItem(items[i], items[j])) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          retVal.push(items[i]);\n        }\n      }\n\n      return retVal;\n    }\n\n    function areSameItem(item1, item2) {\n      if (item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\n        return false;\n      }\n\n      return _.isEqual(item1.stats, item2.stats);\n    }\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/quickAddHelperService.js\n// module id = 211\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/quickAddHelperService.js?");

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  quickAdd.$inject = [\"dntData\", \"translations\", \"itemColumnsToLoad\", \"itemCategory\", \"itemFactory\", \"jobs\", \"hCodeValues\", \"quickAddSteps\", \"quickAddHelper\"];\n  angular.module('dnsim').factory('quickAdd', quickAdd);\n  function quickAdd(dntData, translations, itemColumnsToLoad, itemCategory, itemFactory, jobs, hCodeValues, quickAddSteps, quickAddHelper) {\n\n    return {\n      categorySteps: {\n        titles: ['titleStep'],\n        weapons: ['exchangeStep', 'levelStep', 'rankStep', 'itemNameStep', 'hasStatStep', 'itemStep', 'enhanceEqStep'],\n        armour: ['exchangeStep', 'levelStep', 'rankStep', 'itemNameStep', 'hasStatStep', 'itemStep', 'enhanceEqStep'],\n        accessories: ['accExchangeStep', 'levelStep', 'rankStep', 'itemNameStep', 'hasStatStep', 'itemStep'],\n        techs: ['exchangeStep', 'levelStep', 'rankStep', 'techSkillStep', 'itemNameStep', 'hasStatStep', 'itemStep'],\n        'offensive gems': ['levelStep', 'gemRankStep', 'itemNameStep', 'numStatsStep', 'hasStatStep', 'itemStep', 'enhanceGemStep'],\n        'increasing gems': ['levelStep', 'gemRankStep', 'itemNameStep', 'numStatsStep', 'hasStatStep', 'itemStep', 'enhanceGemStep'],\n        'enhancement plates': ['levelStep', 'rankStep', 'distinctItemNameStep', 'numStatsStep', 'hasStatStep', 'itemStep'],\n        'expedition plates': ['levelStep', 'distinctItemNameStep', 'numStatsStep', 'highStatStep', 'hasStatStep', 'itemStep'],\n        talisman: ['levelStep', 'talismanRankStep', 'distinctItemNameStep', 'numStatsStep', 'hasStatStep', 'itemStep', 'enhanceTalismanStep'],\n        costume: ['exchangeStep', 'rankStep', 'itemNameStep', 'itemStep'],\n        imprint: ['rankStep', 'itemNameStep', 'highStatStep', 'itemStep'],\n        cash: ['accExchangeStep', 'rankStep', 'itemNameStep', 'itemStep'],\n        custom: ['customStep']\n      },\n      getOptions: function getOptions(category, build, datas) {\n        var t = this;\n        if (category.name in this.categorySteps) {\n          var stepName = this.getStepName(category, datas.length);\n          var stepDef = quickAddSteps[stepName];\n          var allOptions = stepDef.getOptions(category, build, datas);\n          if (stepDef.isItemStep) {\n            return allOptions;\n          } else {\n            if (stepDef.minOptions) {\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\n            }\n\n            var newOptions = _.filter(allOptions, function (option) {\n              var tempDatas = datas.concat([t.createData(option, category, datas.length)]);\n\n              var items;\n              if (stepDef.minOptions) {\n                if (allOptions[0] == option) {\n                  return true;\n                }\n\n                items = quickAddHelper.findData(category, build, tempDatas, 50);\n                if (items.length > 0 && items.length < 50) {\n                  return items.length < unfilteredItems.length;\n                }\n              } else {\n                items = quickAddHelper.findData(category, build, tempDatas, 1);\n              }\n              return items.length;\n            });\n\n            if (stepDef.minOptions && newOptions.length < stepDef.minOptions) {\n              return [allOptions[0]];\n            }\n\n            return newOptions;\n          }\n        } else {\n          return [];\n        }\n      },\n      hasOptions: function hasOptions(category, build, datas) {\n        if (category.name in this.categorySteps) {\n          var stepName = this.getStepName(category, datas.length);\n          if (quickAddSteps[stepName].hasOptions) {\n            return quickAddSteps[stepName].hasOptions(category, build, datas);\n          } else {\n            return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\n          }\n        } else {\n          return false;\n        }\n      },\n      isValidStepNumber: function isValidStepNumber(category, stepNumber) {\n        return this.categorySteps[category.name].length > stepNumber;\n      },\n      createData: function createData(value, category, stepNumber) {\n        var stepName = this.getStepName(category, stepNumber);\n        var def = quickAddSteps[stepName];\n\n        return {\n          step: stepName,\n          value: value,\n          def: def\n        };\n      },\n      getItem: quickAddHelper.getItem,\n      getStepName: function getStepName(category, stepNumber) {\n        return this.categorySteps[category.name][stepNumber];\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/quickAddService.js\n// module id = 212\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/quickAddService.js?");

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  quickAddSteps.$inject = [\"dntData\", \"translations\", \"itemColumnsToLoad\", \"itemCategory\", \"itemFactory\", \"jobs\", \"hCodeValues\", \"quickAddHelper\"];\n  angular.module('dnsim').factory('quickAddSteps', quickAddSteps);\n  function quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory, itemFactory, jobs, hCodeValues, quickAddHelper) {\n\n    return {\n      exchangeStep: {\n        name: 'type',\n        getOptions: function getOptions(category, build, datas) {\n\n          var exchanges = [];\n\n          for (var e = 0; e < category.limitExchange.length; ++e) {\n            var exId = category.limitExchange[e];\n\n            var numExchange = 0;\n            if (build.items) {\n              for (var i = 0; i < build.items.length; ++i) {\n                if (build.items[i].exchangeType == exId) {\n                  numExchange++;\n                }\n              }\n            }\n\n            if (numExchange >= category.maxExchange) {\n              continue;\n            }\n\n            var exchange = dntData.find('exchange.lzjson', 'ExchangeType', exId);\n            var exName = '';\n            if (exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\n            }\n            exchanges.push({ id: exId, name: exName.toLowerCase() });\n          }\n\n          return exchanges;\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      accExchangeStep: {\n        name: 'type',\n        getOptions: function getOptions(category, build, datas) {\n\n          var exchanges = [];\n\n          for (var e = 0; e < category.limitExchange.length; ++e) {\n            var exId = category.limitExchange[e];\n\n            var numExchange = 0;\n            for (var i = 0; i < build.items.length; ++i) {\n              if (build.items[i] && build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n\n            if (exId == 10 || exId == 25) {\n              if (numExchange >= 2) {\n                continue;\n              }\n            } else {\n              if (numExchange >= 1) {\n                continue;\n              }\n            }\n\n            var exchange = dntData.find('exchange.lzjson', 'ExchangeType', exId);\n            if (exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n\n              exchanges.push({ id: exId, name: exName.toLowerCase() });\n            }\n          }\n\n          return exchanges;\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      levelStep: {\n        name: 'level',\n        getOptions: function getOptions(category, build, datas) {\n\n          return [{ id: 95, name: 'level 95' }, { id: 93, name: 'level 93' }, { id: 90, name: 'level 90' }, { id: 80, name: 'level 80' }, { id: 70, name: 'level 70' }, { id: 60, name: 'level 60' }, { id: 50, name: 'level 50' }, { id: 40, name: 'level 40' }, { id: 32, name: 'level 32' }, { id: 24, name: 'level 24' }];\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      talismanRankStep: {\n        name: 'rank',\n        getOptions: function getOptions(category, build, datas) {\n\n          return [{ id: 3, name: 'epic' }, { id: 2, name: 'rare' }, { id: 999, name: 'quality high grade' }, { id: 1, name: 'magic' }, { id: 0, name: 'normal' }];\n        },\n        matchesItem: function matchesItem(id, item) {\n          itemFactory.initItem(item);\n          if (item.name) {\n            // todo: change this to use the name id\n            var index = Math.max(item.name.indexOf('Quality'), item.name.indexOf('High Grade'));\n\n            if (id == 999) {\n              return index === 0;\n            } else {\n              return item.rank && item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      gemRankStep: {\n        name: 'rank',\n        getOptions: function getOptions(category, build, datas) {\n\n          return [{ id: 5, name: 'legendary' }, { id: 4, name: 'unique' }, { id: 999, name: 'quality high grade epic' }, { id: 3, name: 'epic' }];\n        },\n        matchesItem: function matchesItem(id, item) {\n          itemFactory.initItem(item);\n          if (item.name) {\n            var index = Math.max(item.name.indexOf('Quality'), item.name.indexOf('High Grade'));\n            if (id == 999) {\n              return item.rank && item.rank.id == 3 && index >= 0;\n            } else {\n              return item.rank && item.rank.id == id && index < 0;\n            }\n          }\n          return false;\n        }\n      },\n      rankStep: {\n        name: 'rank',\n        getOptions: function getOptions(category, build, datas) {\n\n          var values = [];\n          for (var id in hCodeValues.rankNames) {\n            values.push(hCodeValues.rankNames[id]);\n          }\n          return values;\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.rank && item.rank.id == id;\n        }\n      },\n      enhanceTalismanStep: {\n        name: 'slot',\n        getOptions: function getOptions(category, build, datas) {\n\n          return [{ id: 100, name: '+100% slot' }, { id: 75, name: '+75% slot' }, { id: 25, name: '+25% slot' }, { id: 0, name: '+0% slot' }];\n        },\n        alterItem: function alterItem(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      titleStep: {\n        name: 'select',\n        getOptions: function getOptions(category, build, datas) {\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\n          var usefulTitles = [];\n          for (var i = 0; i < allTitles.length; ++i) {\n            switch (allTitles[i].id) {\n              case 1975: // Manticore Expert\n              case 1973: // Returned\n              case 1008: // Dark Knight\n              case 230: // Miraculous\n              case 279: // Provoking\n              case 2032: // Sharing Goddess's Grief\n              case 2033: // Grief-stricken\n              case 1313: // Jakard's Demise\n              case 2188:\n                // Teary eyed\n                // case 1280: // Dragon Tamer\n                // case 339: // Cow Wrangler\n                usefulTitles.push(allTitles[i]);\n                break;\n            }\n          }\n\n          return usefulTitles;\n        },\n        hasOptions: function hasOptions(category, build, datas) {\n          return true;\n        },\n        isItemStep: true\n      },\n      enhanceEqStep: {\n        name: 'enhance',\n        getOptions: function getOptions(category, build, datas) {\n\n          var item = quickAddHelper.getItem(datas);\n          if (item && item.enchantmentId) {\n            return [{ id: 20, name: 'enhance to +20' }, { id: 19, name: 'enhance to +19' }, { id: 18, name: 'enhance to +18' }, { id: 17, name: 'enhance to +17' }, { id: 16, name: 'enhance to +16' }, { id: 15, name: 'enhance to +15' }, { id: 14, name: 'enhance to +14' }, { id: 13, name: 'enhance to +13' }, { id: 12, name: 'enhance to +12' }, { id: 11, name: 'enhance to +11' }, { id: 10, name: 'enhance to +10' }, { id: 9, name: 'enhance to +9' }, { id: 8, name: 'enhance to +8' }, { id: 7, name: 'enhance to +7' }, { id: 6, name: 'enhance to +6' }, { id: 5, name: 'enhance to +5' }, { id: 4, name: 'enhance to +4' }, { id: 3, name: 'enhance to +3' }, { id: 2, name: 'enhance to +2' }, { id: 1, name: 'enhance to +1' }, { id: 0, name: 'not enhanced' }];\n          } else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function alterItem(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      enhanceGemStep: {\n        name: 'enhance',\n        getOptions: function getOptions(category, build, datas) {\n\n          var item = quickAddHelper.getItem(datas);\n          if (item && item.enchantmentId) {\n            return [{ id: 15, name: 'enhance to +15' }, { id: 14, name: 'enhance to +14' }, { id: 13, name: 'enhance to +13' }, { id: 12, name: 'enhance to +12' }, { id: 11, name: 'enhance to +11' }, { id: 10, name: 'enhance to +10' }, { id: 9, name: 'enhance to +9' }, { id: 8, name: 'enhance to +8' }, { id: 7, name: 'enhance to +7' }, { id: 6, name: 'enhance to +6' }, { id: 5, name: 'enhance to +5' }, { id: 4, name: 'enhance to +4' }, { id: 3, name: 'enhance to +3' }, { id: 2, name: 'enhance to +2' }, { id: 1, name: 'enhance to +1' }, { id: 0, name: 'not enhanced' }];\n          } else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function alterItem(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      itemStep: {\n        name: 'select',\n        getOptions: function getOptions(category, build, datas) {\n          return quickAddHelper.findData(category, build, datas);\n        },\n        isItemStep: true,\n        hideName: true\n      },\n      namedItemStep: {\n        name: 'select',\n        getOptions: function getOptions(category, build, datas) {\n          return quickAddHelper.findData(category, build, datas);\n        },\n        isItemStep: true\n      },\n      techSkillStep: {\n        name: 'skill',\n        getOptions: function getOptions(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas, 1);\n\n          // eventually show all the skills\n          // but for now\n          if (items.length > 0) {\n            return [{ id: items[0].skillId, name: items[0].skillId }];\n          } else {\n            return [];\n          }\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.skillId == id;\n        }\n      },\n      itemNameStep: {\n        name: 'item',\n        getOptions: function getOptions(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          for (var i = 0; i < items.length; ++i) {\n            var name = items[i].name;\n            if (!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name\n              });\n            }\n          }\n\n          return itemNamesList;\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true\n      },\n      distinctItemNameStep: {\n        name: 'item',\n        getOptions: function getOptions(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n\n          for (var i = 0; i < build.items.length; ++i) {\n            var item = build.items[i];\n            itemNames[item.name] = true;\n          }\n\n          for (var i = 0; i < items.length; ++i) {\n            var name = items[i].name;\n            if (!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name\n              });\n            }\n          }\n\n          return itemNamesList;\n        },\n        matchesItem: function matchesItem(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true\n      },\n      numStatsStep: {\n        name: 'Num Stats',\n        getOptions: function getOptions(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var numStats = {};\n\n          for (var i = 0; i < items.length; ++i) {\n            var len = 0;\n            for (var j = 0; j < items[i].stats.length; ++j) {\n              var stat = hCodeValues.stats[items[i].stats[j].id];\n              if (stat && !stat.hide) {\n                len++;\n              }\n            }\n            numStats[len + 'x stats'] = len;\n          }\n\n          var retVal = [];\n          for (var val in numStats) {\n            retVal.push({\n              id: numStats[val],\n              name: val\n            });\n          }\n\n          retVal = retVal.sort(function (a, b) {\n            return a.id - b.id;\n          });\n\n          return retVal;\n        },\n        matchesItem: function matchesItem(id, item) {\n          var len = 0;\n          for (var j = 0; j < item.stats.length; ++j) {\n            var stat = hCodeValues.stats[item.stats[j].id];\n            if (stat && !stat.hide) {\n              len++;\n            }\n          }\n\n          return len == id;\n        },\n        isItemStep: true\n      },\n      highStatStep: {\n        name: 'High Stat',\n        getOptions: function getOptions(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n\n          var allItem = { id: -1, name: 'all' };\n          var retVal = [allItem];\n          if (items.length > 1) {\n            var allStats = {};\n\n            for (var i = 0; i < items.length; ++i) {\n              for (var j = 0; j < items[i].stats.length; ++j) {\n                var stat = hCodeValues.stats[items[i].stats[j].id];\n                if (stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\n                  allStats['high ' + stat.name] = stat.id;\n                }\n              }\n            }\n\n            for (var val in allStats) {\n              retVal.push({\n                id: allStats[val],\n                name: val\n              });\n            }\n\n            if (retVal.length <= 2) {\n              retVal = [allItem];\n            } else {\n              retVal = retVal.sort(function (a, b) {\n                return a.id - b.id;\n              });\n            }\n          }\n\n          return retVal;\n        },\n        matchesItem: function matchesItem(id, item) {\n          if (id == -1) {\n            return true;\n          }\n\n          var largestVal = 0;\n          var selectedVal = 0;\n\n          for (var j = 0; j < item.stats.length; ++j) {\n            var val = item.stats[j];\n            var stat = hCodeValues.stats[val.id];\n            if (stat.quickHigh) {\n              if (val.id == id) {\n                selectedVal += val.max;\n              } else if (val.max > largestVal) {\n                largestVal = val.max;\n              }\n            }\n          }\n\n          return selectedVal > largestVal;\n        },\n        sortFunc: function sortFunc(id, item1, item2) {\n          var val1 = 0;\n          var val2 = 0;\n\n          for (var i = 0; i < item1.stats.length; ++i) {\n            if (item1.stats[i].id == id) {\n              val1 = item1.stats[i].max;\n              break;\n            }\n          }\n          for (var j = 0; j < item2.stats.length; ++j) {\n            if (item2.stats[j].id == id) {\n              val2 = item2.stats[j].max;\n              break;\n            }\n          }\n          return val2 - val1;\n        },\n        isItemStep: false,\n        minOptions: 3\n      },\n      hasStatStep: {\n        name: 'Has Stat',\n        getOptions: function getOptions(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n\n          var allItem = { id: -1, name: 'all' };\n          var retVal = [allItem];\n          if (items.length > 1) {\n            var allStats = {};\n\n            for (var i = 0; i < items.length; ++i) {\n              for (var j = 0; j < items[i].stats.length; ++j) {\n                var stat = hCodeValues.stats[items[i].stats[j].id];\n                if (stat && stat.searchable && !('high ' + stat.name in allStats)) {\n                  allStats['has ' + stat.name] = stat.id;\n                }\n              }\n            }\n\n            for (var val in allStats) {\n              retVal.push({\n                id: allStats[val],\n                name: val\n              });\n            }\n\n            if (retVal.length <= 2) {\n              retVal = [allItem];\n            } else {\n              retVal = retVal.sort(function (a, b) {\n                return a.id - b.id;\n              });\n            }\n          }\n\n          return retVal;\n        },\n        matchesItem: function matchesItem(id, item) {\n          if (id == -1) {\n            return true;\n          }\n\n          for (var j = 0; j < item.stats.length; ++j) {\n            var val = item.stats[j];\n            var stat = hCodeValues.stats[val.id];\n            if (stat.searchable) {\n              if (val.id == id) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        },\n        sortFunc: function sortFunc(id, item1, item2) {\n          var val1 = 0;\n          var val2 = 0;\n\n          for (var i = 0; i < item1.stats.length; ++i) {\n            if (item1.stats[i].id == id) {\n              val1 = item1.stats[i].max;\n              break;\n            }\n          }\n          for (var j = 0; j < item2.stats.length; ++j) {\n            if (item2.stats[j].id == id) {\n              val2 = item2.stats[j].max;\n              break;\n            }\n          }\n          return val2 - val1;\n        },\n        isItemStep: false,\n        minOptions: 3\n      },\n      customStep: {\n        name: 'misc',\n        getOptions: function getOptions(category, build, datas) {\n          return hCodeValues.customItems;\n        },\n        isItemStep: true\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/quickAddStepsService.js\n// module id = 213\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/quickAddStepsService.js?");

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('region', ['translations', 'dntReset', 'dntData', '$route', region]);\n  function region(translations, dntReset, dntData, $route) {\n\n    var alternativeFiles = { region: 'ALT', name: 'Alternative user specified files', url: '' };\n    var hostedFiles = [{ region: 'sea', name: 'south east asia', url: 'https://seadnfiles.firebaseapp.com' }, { region: 'na', name: 'north america', url: 'https://dnna.firebaseapp.com' }, { region: 'eu', name: 'europe', url: 'https://eufiles.firebaseapp.com' }, { region: 'ina', name: 'indonesia ', url: 'https://inafiles-da491.firebaseapp.com' }, { region: 'th', name: 'thailand', url: 'https://thdnfiles.firebaseapp.com' }, { region: 'vn', name: 'vietnam ', url: 'https://vndnfiles.firebaseapp.com' }, { region: 'tw', name: 'taiwan 臺灣', url: 'https://twdnfiles.firebaseapp.com' },\n    // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\n    { region: 'cdn', name: 'china 中國', url: 'https://cdnfiles.firebaseapp.com' }, { region: 'kdn', name: 'korea 대한민국', url: 'https://kdnfiles.firebaseapp.com' }];\n\n    var dntLocationRegion = localStorage.getItem('lastDNTRegion');\n    var dntLocation = null;\n    if (dntLocationRegion) {\n      angular.forEach(hostedFiles, function (hostedFile, index) {\n        if (hostedFile.region == dntLocationRegion) {\n          dntLocation = hostedFile;\n        }\n      });\n    }\n\n    var lastTFile = localStorage.getItem('UIStrings_file');\n    var tlocation = null;\n    if (lastTFile) {\n      angular.forEach(hostedFiles, function (hostedFile, index) {\n        if (hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\n          tlocation = hostedFile;\n        }\n      });\n    }\n\n    if (tlocation == null) {\n      tlocation = dntLocation;\n    }\n\n    return {\n      hostedFiles: hostedFiles,\n      alternativeFiles: alternativeFiles,\n      dntLocation: dntLocation,\n      tlocation: tlocation,\n\n      setCustomUrl: function setCustomUrl(url) {\n        // console.log('setting custom location');\n        this.alternativeFiles.url = url;\n\n        var newFiles = [];\n        angular.forEach(hostedFiles, function (hostedFile, index) {\n          if (hostedFile.region != alternativeFiles.region) {\n            newFiles.push(hostedFile);\n          }\n        });\n\n        newFiles.push(alternativeFiles);\n        hostedFiles = newFiles;\n        this.hostedFiles = newFiles;\n      },\n\n      setLocationByName: function setLocationByName(locationName) {\n        var newLocation = null;\n\n        angular.forEach(hostedFiles, function (hostedFile, index) {\n          if (hostedFile.region == locationName) {\n            newLocation = hostedFile;\n          }\n        });\n\n        this.setLocation(newLocation);\n      },\n\n      setLocation: function setLocation(location) {\n        if (location && location != this.dntLocation) {\n          this.dntLocation = location;\n          dntReset();\n          localStorage.setItem('lastDNTRegion', location.region);\n          dntReset();\n          $route.reload();\n        }\n\n        var override = this.getOverride();\n        if (this.tlocation == null || !override) {\n          this.setTLocation(location);\n        }\n\n        this.init();\n\n        // $route.reload();\n      },\n\n      setTLocation: function setTLocation(location) {\n\n        if (location != this.tlocation) {\n\n          this.tlocation = location;\n          sessionStorage.removeItem('UIStrings');\n          localStorage.removeItem('UIStrings_file');\n          dntReset();\n          translations.reset();\n          if (location) {\n            var override = this.getOverride();\n            translations.small = !override;\n            translations.location = this.tlocation.url;\n            translations.region = this.tlocation.region;\n            translations.init(function () {}, function () {\n              $route.reload();\n            });\n          }\n        }\n      },\n\n      getOverride: function getOverride() {\n        if (localStorage.getItem('tOverride')) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n\n      setOverride: function setOverride(value) {\n        if (!value) {\n          localStorage.removeItem('tOverride');\n        } else {\n          localStorage.setItem('tOverride', '1');\n        }\n        this.setTLocation(this.dntLocation);\n      },\n\n      init: function init() {\n        if (this.getOverride()) {\n          translations.small = false;\n        } else {\n          this.tLocation = this.dntLocation;\n          translations.small = true;\n        }\n\n        if (this.tlocation) {\n          translations.location = this.tlocation.url;\n          translations.region = this.tlocation.region;\n        }\n        dntData.setLocation(this.dntLocation);\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/regionService.js\n// module id = 214\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/regionService.js?");

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  var LZString = __webpack_require__(13);\n\n  angular.module('dnsim').factory('saveHelper', ['itemCategory', saveHelper]);\n  function saveHelper(itemCategory) {\n    return {\n      saveItem: function saveItem(groupName, item) {\n        var groups = this.getSavedItems();\n        if (groupName in groups && Array.isArray(groups[groupName].items)) {\n\n          groups[groupName].items.push(item);\n          groups[groupName].lastUpdate = new Date().getTime();\n          this.updatedSavedItems(groupName, groups[groupName].items);\n        } else {\n          this.updatedSavedItems(groupName, [item]);\n        }\n      },\n\n      saveBuildSelection: function saveBuildSelection(buildName, builds) {\n        this.setCurrentBuild(buildName);\n        if (builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\n          localStorage.setItem('jobNumber', builds[buildName].job.id);\n        }\n      },\n\n      importGroup: function importGroup(groupName, updatedItems) {\n        var items = this.getSavedItems();\n        groupName = this.getUniqueGroupName(groupName, items);\n        this.updatedSavedItems(groupName, updatedItems);\n        return groupName;\n      },\n\n      getUniqueGroupName: function getUniqueGroupName(groupName, existingGroups) {\n        var groupNameIndex = 0;\n        if (groupName.lastIndexOf(')') == groupName.length - 1) {\n          var startIndex = groupName.lastIndexOf('(');\n          if (startIndex > 0) {\n            var foundIndex = Number(groupName.substr(startIndex + 1, groupName.length - startIndex - 2));\n            if (foundIndex > 0) {\n              groupNameIndex = foundIndex + 1;\n              groupName = groupName.substr(0, startIndex - 1);\n            }\n          }\n        }\n\n        var originalName = groupName;\n        for (;;) {\n          var groupName = originalName;\n          if (groupNameIndex > 0) {\n            groupName = originalName + ' (' + groupNameIndex + ')';\n          }\n\n          if (groupName in existingGroups) {\n            groupNameIndex++;\n          } else {\n            break;\n          }\n        }\n\n        return groupName;\n      },\n\n      deleteBuild: function deleteBuild(buildName) {\n        var builds = this.getSavedItems();\n        if (buildName in builds) {\n          delete builds[buildName];\n          this.setCurrentBuild(null);\n          this.saveBuilds(builds);\n        }\n      },\n\n      updatedSavedItems: function updatedSavedItems(groupName, updatedItems) {\n        var items = this.getSavedItems();\n        if (groupName in items) {\n          items[groupName].items = updatedItems;\n          items[groupName].lastUpdate = new Date().getTime();\n        } else {\n          items[groupName] = { items: updatedItems, lastUpdate: new Date().getTime() };\n          // console.log('created group');\n        }\n\n        this.saveBuilds(items);\n      },\n\n      saveBuilds: function saveBuilds(builds) {\n        var stringifiedData = JSON.stringify(builds);\n        localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n      },\n\n      saveBuild: function saveBuild(oldGroupName, newGroupName, build) {\n        this.updateBuild(oldGroupName, newGroupName, build.enemyLevel, build.playerLevel, build.heroLevel, build.job, build.damageType, build.element, build.secondaryElement, build.critResist, build.eleResist, build.enemyStatCaps, build.playerStatCaps, build.conversions, build.baseStats, build.heroStats);\n      },\n\n      updateBuild: function updateBuild(oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist, enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\n\n        var savedItems = this.getSavedItems();\n\n        if (newGroupName in savedItems || oldGroupName == newGroupName) {\n          // console.log('not changing name');\n          newGroupName = oldGroupName;\n        } else if (oldGroupName in savedItems) {\n          var group = savedItems[oldGroupName];\n          savedItems[newGroupName] = group;\n          delete savedItems[oldGroupName];\n        }\n\n        savedItems[newGroupName].enemyLevel = enemyLevel;\n        savedItems[newGroupName].playerLevel = playerLevel;\n        savedItems[newGroupName].heroLevel = heroLevel;\n        savedItems[newGroupName].job = job;\n        savedItems[newGroupName].damageType = damageType;\n        savedItems[newGroupName].element = element;\n        savedItems[newGroupName].secondaryElement = secondaryElement;\n        savedItems[newGroupName].critResist = critResist;\n        savedItems[newGroupName].eleResist = eleResist;\n        savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\n        savedItems[newGroupName].playerStatCaps = playerStatCaps;\n        savedItems[newGroupName].conversions = conversions;\n        savedItems[newGroupName].baseStats = baseStats;\n        savedItems[newGroupName].heroStats = heroStats;\n\n        this.saveBuilds(savedItems);\n      },\n\n      getSavedItems: function getSavedItems() {\n        try {\n          var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\n          var savedItems = JSON.parse(stringifiedData);\n          return savedItems;\n        } catch (ex) {}\n\n        return {};\n      },\n\n      currentBuild: null,\n      getCurrentBuild: function getCurrentBuild() {\n        if (!this.currentBuild) {\n          this.currentBuild = localStorage.getItem('currentGroup');\n          if (this.currentBuild) {\n            var savedItems = this.getSavedItems();\n            if (!(this.currentBuild in savedItems)) {\n              localStorage.removeItem('currentGroup');\n              this.currentBuild = null;\n            }\n          }\n        }\n\n        return this.currentBuild;\n      },\n\n      setCurrentBuild: function setCurrentBuild(buildName) {\n        this.currentBuild = buildName;\n        if (!buildName) {\n          localStorage.removeItem('currentGroup', buildName);\n        } else {\n          localStorage.setItem('currentGroup', buildName);\n        }\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/saveService.js\n// module id = 215\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/saveService.js?");

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('statHelper', ['hCodeValues', statHelper]);\n  function statHelper(hCodeValues) {\n\n    return {\n\n      getSetStats: function getSetStats(groupItems) {\n        var stats = [];\n        var sets = {};\n\n        angular.forEach(groupItems, function (value, key) {\n          if (value !== null && value.setStats != null) {\n            if (value.setId in sets) {\n              sets[value.setId].numItems++;\n            } else {\n              sets[value.setId] = { numItems: 1, stats: value.setStats };\n            }\n          }\n        });\n\n        angular.forEach(sets, function (value, key) {\n          angular.forEach(value.stats, function (stat, index) {\n            if (stat.needSetNum <= value.numItems) {\n              stats.push(stat);\n            }\n          });\n        });\n\n        return hCodeValues.mergeStats(stats);\n      },\n\n      getNumItemsForSet: function getNumItemsForSet(items, setId) {\n        var numItems = 0;\n        angular.forEach(items, function (value, key) {\n          if (value && value.setId && value.setId == setId) {\n            numItems++;\n          }\n        });\n\n        return numItems;\n      },\n\n      getCombinedStats: function getCombinedStats(groupItems) {\n        var stats = [];\n\n        angular.forEach(groupItems, function (value, key) {\n          if (value) {\n\n            if (value.fullStats) {\n              stats = stats.concat(value.fullStats);\n            } else if (value.stats) {\n              stats = stats.concat(value.stats);\n            }\n          }\n        });\n\n        return hCodeValues.mergeStats(stats);\n      },\n\n      getCalculatedStatsFromItems: function getCalculatedStatsFromItems(group, items) {\n        var nakedStats = this.getNakedStats(group);\n        var combinedStats = this.getCombinedStats(items);\n        var setStats = this.getSetStats(items);\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\n        if (group.heroStats != null && group.heroStats.length > 0) {\n          allStats = allStats.concat(group.heroStats);\n        }\n        allStats = hCodeValues.mergeStats(allStats);\n\n        return this.getCalculatedStats(group, allStats);\n      },\n\n      getCalculatedStats: function getCalculatedStats(group, combinedStats) {\n\n        var retVal = [];\n        var statLookup = {};\n        if (!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\n          return [];\n        }\n\n        angular.forEach(combinedStats, function (stat, index) {\n          statLookup[stat.id] = stat;\n        });\n\n        function getPc(stat) {\n          var statDef = hCodeValues.stats[stat.id];\n          if (statLookup[statDef.pc]) {\n            return Number(statLookup[statDef.pc].max);\n          } else {\n            return 0;\n          }\n        }\n\n        function getSkillPc(stat) {\n          var statDef = hCodeValues.stats[stat.id];\n          if (statLookup[statDef.skPc]) {\n            return Number(statLookup[statDef.skPc].max);\n          } else {\n            return 0;\n          }\n        }\n\n        function applyPc(stat) {\n          stat.max = Math.floor(stat.max * (1 + getPc(stat)) * (1 + getSkillPc(stat)));\n        }\n\n        function dupeStat(id) {\n          var stat = statLookup[id];\n          if (stat) {\n            return { id: id, max: Number(stat.max), pc: stat.pc };\n          } else {\n            return { id: id, max: 0, pc: 0 };\n          }\n        }\n\n        function addStat(stat) {\n          if (stat.max > 0) {\n            retVal.push(stat);\n          }\n        }\n\n        var critResist;\n        if (!('critResist' in group)) {\n          critResist = 0.20;\n        } else {\n          critResist = group.critResist / 100.0;\n        }\n\n        var eleResist;\n        if (!('eleResist' in group)) {\n          eleResist = 0;\n        } else {\n          eleResist = group.eleResist / 100.0;\n        }\n\n        // base stats\n        var str = dupeStat(0);\n        applyPc(str);\n        addStat(str);\n\n        var agi = dupeStat(1);\n        applyPc(agi);\n        addStat(agi);\n\n        var int = dupeStat(2);\n        applyPc(int);\n        addStat(int);\n\n        var vit = dupeStat(3);\n        applyPc(vit);\n        addStat(vit);\n\n        // add vit to hp\n        var hp = dupeStat(25);\n        hp.max += vit.max * Number(group.conversions.HP);\n        applyPc(hp);\n        addStat(hp);\n\n        // defs\n        var def = dupeStat(8);\n        def.max += vit.max * Number(group.conversions.PhysicalDefense);\n        applyPc(def);\n        addStat(def);\n\n        var defpc = dupeStat(1008);\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\n        defpc.max = Math.min(0.85, def.max / Number(group.enemyStatCaps.Cdefense));\n        addStat(defpc);\n\n        var mdef = dupeStat(9);\n        mdef.max += int.max * Number(group.conversions.MagicDefense);\n        applyPc(mdef);\n        addStat(mdef);\n\n        var mdefpc = dupeStat(1009);\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\n        mdefpc.max = Math.min(0.85, mdef.max / Number(group.enemyStatCaps.Cdefense));\n        addStat(mdefpc);\n\n        // attack power - like fd but for bufs\n        // this shows as blue damage\n        // i think there are magic and phis variants of this but doesnt matter\n        var aPwr = dupeStat(3000);\n\n        var minPdmg = dupeStat(4);\n        var maxPdmg = dupeStat(5);\n\n        // physical damage\n        if (!group.damageType || group.damageType.id != 2) {\n          var extraPdmg = dupeStat(32);\n          var extraPdmgMod = dupeStat(101);\n          var paPwr = dupeStat(3001);\n\n          // special stats for zeal\n          var intToPdmg = dupeStat(10164);\n\n          minPdmg.max += extraPdmg.max;\n          minPdmg.max += Math.floor(str.max * Number(group.conversions.StrengthAttack));\n          minPdmg.max += Math.floor(agi.max * Number(group.conversions.AgilityAttack));\n\n          minPdmg.max = Math.floor(minPdmg.max * (1 + (getPc(minPdmg) + extraPdmgMod.max)));\n          minPdmg.max = Math.floor(minPdmg.max * (1 + aPwr.max + paPwr.max));\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\n          addStat(minPdmg);\n\n          maxPdmg.max += extraPdmg.max;\n          maxPdmg.max += Math.floor(str.max * Number(group.conversions.StrengthAttack));\n          maxPdmg.max += Math.floor(agi.max * Number(group.conversions.AgilityAttack));\n\n          maxPdmg.max = Math.floor(maxPdmg.max * (1 + (getPc(maxPdmg) + extraPdmgMod.max)));\n          maxPdmg.max = Math.floor(maxPdmg.max * (1 + aPwr.max + paPwr.max));\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\n          addStat(maxPdmg);\n        }\n\n        var minMdmg = dupeStat(6);\n        var maxMdmg = dupeStat(7);\n\n        // magic damage\n        if (!group.damageType || group.damageType.id != 1) {\n          var extraMdmg = dupeStat(33);\n          var extraMdmgMod = dupeStat(102);\n          var maPwr = dupeStat(3002);\n\n          // special stats for zeal\n          var strToMdmg = dupeStat(10165);\n          var intToMdmg = dupeStat(10372);\n\n          minMdmg.max += extraMdmg.max;\n          minMdmg.max += Math.floor(int.max * Number(group.conversions.IntelligenceAttack));\n\n          minMdmg.max = Math.floor(minMdmg.max * (1 + (getPc(minMdmg) + extraMdmgMod.max)));\n          minMdmg.max = minMdmg.max * (1 + aPwr.max + maPwr.max);\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\n          addStat(minMdmg);\n\n          maxMdmg.max += extraMdmg.max;\n          maxMdmg.max += int.max * Number(group.conversions.IntelligenceAttack);\n\n          maxMdmg.max = Math.floor(maxMdmg.max * (1 + (getPc(maxMdmg) + extraMdmgMod.max)));\n          maxMdmg.max = maxMdmg.max * (1 + aPwr.max + maPwr.max);\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\n          addStat(maxMdmg);\n        }\n\n        // crit chance %\n        var crit = dupeStat(12);\n        crit.max += agi.max * Number(group.conversions.Critical);\n        applyPc(crit);\n\n        var skCrit = dupeStat(4012);\n        crit.max += skCrit.max;\n        addStat(crit);\n        var itemCrit = dupeStat(1012);\n\n        var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical) + itemCrit.max);\n        retVal.push({ id: 1012, max: critChance });\n\n        // crit damage %\n        var cDmg = dupeStat(103);\n        cDmg.max += (str.max + int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage);\n        applyPc(cDmg);\n        addStat(cDmg);\n\n        var itemCtriDmg = dupeStat(1103);\n        var critDamagePc = Math.min(1, cDmg.max / group.playerStatCaps.CcriticalDamage + itemCtriDmg.max);\n        addStat({ id: 1103, max: critDamagePc + 2 });\n\n        // fd\n        var fd = dupeStat(29);\n        addStat(fd);\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\n\n        var fdPc = dupeStat(1029);\n        fdPc.max += Math.min(Math.max(0.35 * Number(fd.max) / maxFd, Math.pow(Number(fd.max) / maxFd, 2.2)), 1);\n        addStat(fdPc);\n\n        // elements\n        var firePc = dupeStat(16);\n        addStat(firePc);\n\n        var icePc = dupeStat(17);\n        addStat(icePc);\n\n        var lightPc = dupeStat(18);\n        addStat(lightPc);\n\n        var darkPc = dupeStat(19);\n        addStat(darkPc);\n\n        // average damage\n        function addAvgDamageStat(id, min, max) {\n\n          var nonEleDamage = (min + max) / 2;\n          // add crit\n          nonEleDamage += critChance * (critDamagePc + 1) * nonEleDamage * (1 - critResist);\n          // apply fd\n          nonEleDamage = nonEleDamage * (1 + fdPc.max);\n\n          // apply element(s)\n          var avgDmg = nonEleDamage;\n          if (group.element && group.element.id > 0) {\n            var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\n            if (elementStat) {\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\n            }\n          }\n          addStat({ id: id, max: avgDmg });\n          var secElementId = 0;\n          var priElementId = 0;\n          if (group.element) {\n            priElementId = group.element.id;\n          } else {\n            priElementId = 0;\n          }\n          if (group.secondaryElement) {\n            secElementId = group.secondaryElement.id;\n          } else {\n            secElementId = 0;\n          }\n\n          if (secElementId != priElementId) {\n            if (secElementId > 0) {\n              var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\n              if (secondaryElementStat) {\n                var secAvgDmg = nonEleDamage * (1 + Number(secondaryElementStat.max)) * (1 - Number(eleResist));\n                addStat({ id: id + 1000, max: secAvgDmg });\n              }\n            } else {\n              addStat({ id: id + 1000, max: nonEleDamage });\n            }\n          }\n        }\n\n        // average damages\n        if (!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\n        }\n\n        if (!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\n        }\n\n        if (!group.damageType || group.damageType.id == 3) {\n          addAvgDamageStat(1001, minMdmg.max + minPdmg.max, maxMdmg.max + maxPdmg.max);\n        }\n\n        // Equivalent HP\n        var pdefEqHp = dupeStat(2008);\n        pdefEqHp.max = hp.max / (1 - defpc.max);\n\n        var mdefEqHp = dupeStat(2009);\n        mdefEqHp.max = hp.max / (1 - mdefpc.max);\n\n        var eqHp = dupeStat(3008);\n        eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\n        addStat(eqHp);\n\n        return retVal;\n      },\n\n      getNakedStats: function getNakedStats(group) {\n\n        if (group.baseStats && group.baseStats.Strength > 0) {\n\n          return [{ id: 0, max: group.baseStats.Strength }, { id: 1, max: group.baseStats.Agility }, { id: 2, max: group.baseStats.Intelligence }, { id: 3, max: group.baseStats.Stamina }];\n        } else {\n          return [];\n        }\n      },\n\n      getSkillStats: function getSkillStats(item, data, skillData) {\n\n        var skillLevelVals = null;\n        angular.forEach(skillData, function (value, index) {\n          if (value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n            return;\n          }\n        });\n\n        if (!skillLevelVals) {\n          return null;\n        }\n\n        var index = 1;\n        var effects = [];\n        var stillCols = true;\n\n        while (stillCols) {\n          var colName = 'EffectClass' + index;\n          var valColName = 'EffectClassValue' + index;\n          if (data && colName in data && valColName in skillLevelVals) {\n            if (data[colName] > 0) {\n\n              var val = skillLevelVals[valColName];\n\n              // for now add 10k\n              var effectId = data[colName];\n              var map = hCodeValues.skillEffectMapping[effectId];\n              if (map && map.getVals) {\n                var vals = map.getVals(val);\n                for (var i = 0; i < vals.length; ++i) {\n                  effects.push(vals[i]);\n                }\n              } else {\n                var statId;\n                if (map && map.mapTo) {\n                  statId = map.mapTo;\n                } else {\n                  statId = 10000 + effectId;\n                }\n\n                if (val > 0) {\n                  effects.push({ id: statId, effect: effectId, max: val });\n                } else {\n                  if (val.toString().indexOf(';') > 0) {\n                    var vals = val.split(';');\n                    if (vals.length > 0 && vals[0] > 0) {\n                      effects.push({ id: statId, effect: effectId, max: vals[0] });\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            stillCols = false;\n          }\n\n          index++;\n        }\n\n        return effects;\n      },\n\n      getBuildStats: function getBuildStats(build) {\n        var stats = {};\n        stats.nakedStats = this.getNakedStats(build);\n        stats.combinedStats = this.getCombinedStats(build.items);\n        stats.setStats = this.getSetStats(build.items);\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\n        if (build.heroStats && build.heroStats.length) {\n          stats.heroStats = build.heroStats;\n          stats.allStats = stats.allStats.concat(build.heroStats);\n        }\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\n\n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\n        return stats;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/statService.js\n// module id = 216\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/statService.js?");

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  var DnTranslations = __webpack_require__(309);\n\n  angular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\n  function translations($routeParams, $rootScope, uiTranslations, $translate) {\n\n    var dnTranslations = new DnTranslations();\n    var smallFile = 'uistring.optimised.lzjson';\n    var bigFile = 'uistring.lzjson';\n\n    var completeCallback = [];\n    var progressCallback = [];\n\n    return {\n\n      getRawData: function getRawData() {\n        return dnTranslations.data;\n      },\n\n      reset: function reset() {\n        dnTranslations = new DnTranslations();\n        dnTranslations.sizeLimit = 100;\n        this.loaded = false;\n        this.startedLoading = false;\n        completeCallback = [];\n        progressCallback = [];\n      },\n\n      getFileName: function getFileName() {\n        if (this.small) {\n          // console.log('loading optimised translations');\n          return smallFile;\n        } else {\n          // console.log('loading full translations');\n          return bigFile;\n        }\n      },\n\n      loaded: false,\n      startedLoading: false,\n      small: false,\n\n      location: null,\n      region: null,\n\n      init: function init(progress, complete) {\n\n        if (this.isLoaded()) {\n          complete();\n        } else {\n          progressCallback = [];\n          if (progress) {\n            progressCallback.push(progress);\n          }\n          if (complete) {\n            completeCallback.push(complete);\n          }\n\n          if (!this.startedLoading) {\n            this.startedLoading = true;\n            var t = this;\n\n            var fileName = null;\n            if (this.location && this.location != '') {\n              fileName = this.location + '/' + this.getFileName();\n\n              if (fileName != localStorage.getItem(\"UIStrings_file\")) {\n                sessionStorage.removeItem('UIStrings');\n                localStorage.removeItem('UIStrings_file');\n              }\n            }\n\n            $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            dnTranslations.loadDefaultFile(fileName, function (msg) {\n              angular.forEach(progressCallback, function (value, key) {\n                value(msg);\n              });\n            }, function () {\n              uiTranslations.addTranslations(t.region, t.getRawData());\n              // console.log('using ', t.region);\n              $translate.use(t.region);\n              t.loaded = true;\n              angular.forEach(completeCallback, function (value, key) {\n                value();\n              });\n              completeCallback = [];\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            }, function (msg) {\n              angular.forEach(progressCallback, function (value, key) {\n                value(msg);\n              });\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\n              t.startedLoading = false;\n              t.loaded = false;\n            });\n          }\n        }\n      },\n\n      isLoaded: function isLoaded() {\n        if (!this.loaded) {\n          var fileName = this.location + '/' + this.getFileName();\n\n          if (fileName != localStorage.getItem(\"UIStrings_file\")) {\n            sessionStorage.removeItem('UIStrings');\n            localStorage.removeItem('UIStrings_file');\n          }\n\n          this.loaded = dnTranslations.loadFromSession();\n          if (this.loaded) {\n            uiTranslations.addTranslations(this.region, this.getRawData());\n            $translate.use(this.region);\n            this.startedLoading = true;\n          }\n        }\n        return this.loaded;\n      },\n\n      translate: function translate(id, idParam) {\n        if (this.loaded) {\n          try {\n            var name;\n            if (!id) {\n              return '';\n            } else {\n              name = dnTranslations.translate(id);\n\n              if (typeof name != 'string') {\n                return 'm' + name;\n              }\n            }\n\n            if (idParam && name) {\n\n              if (typeof idParam === 'string') {\n                var params = idParam.split(',');\n                for (var p = 0; p < params.length; ++p) {\n                  var pid = params[p];\n                  if (pid.indexOf('{') == 0) {\n                    pid = params[p].replace(/\\{|\\}/g, '');\n                    pid = dnTranslations.translate(pid);\n                  }\n\n                  name = name.replace('{' + p + '}', pid);\n                }\n              } else {\n                name = name.replace('{0}', idParam);\n              }\n            }\n\n            return name;\n          } catch (ex) {\n            console.log('unable to translate', id, idParam, ex);\n          }\n        }\n\n        return 'm' + id;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/translationService.js\n// module id = 217\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/translationService.js?");

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n    'use strict';\n\n    uiTranslations.$inject = [\"$routeParams\", \"$rootScope\"];\n    angular.module('dnsim').factory('uiTranslations', uiTranslations);\n\n    // translations for each region go in here\n    // the key is the english text\n    var uiTranslationLookup = {\n        cdn: {\n            'dragon nest gear simulator': '龙之谷配装模拟器',\n            'enemy lvl': '敌人等级',\n            'damage type': '伤害类型',\n            'player lvl': '玩家等级',\n            'hero level stats': '英雄等级状态',\n            'naked stats': '裸装状态',\n            'stat affects': '状态影响',\n            'str': '力量',\n            'agi': '敏捷',\n            'int': '智力',\n            'builds': '方案',\n            'search': '搜索',\n            'select region': '选择地区',\n            'create a new build': '创建一个新方案',\n            'import': '输入',\n            'publish': '发布',\n            'find a build': '寻找一个新方案',\n            'about': '关于',\n            'import a build from a json build file': '从一个json文件导入方案',\n            'log in and publish your builds online': '登录并发布您的方案',\n            'vit': '体质',\n            'fd': '最终伤害',\n            'pdmg': '物理攻击力',\n            'mdmg': '魔法攻击力',\n            'crit': '致命一击',\n            'cdmg': '致命一击伤害',\n            'fire%': '火攻击',\n            'ice%': '水攻击',\n            'light%': '光攻击',\n            'dark%': '暗攻击',\n            'pdef': '物理防御力',\n            'mdef': '魔法防御力',\n            'weapons': '武器',\n            'armour': '防具',\n            'techs': '技巧饰品',\n            'titles': '称号',\n            'expedition plates': '远征队纹章',\n            'enhancement plates': '强化纹章',\n            'increasing gems': '强化龙玉',\n            'offensive gems': '属性龙玉',\n            'back': '返回',\n            'cancel': '取消',\n            'epic': 'A级',\n            'unique': 'S级',\n            'legendary': 'L级',\n            'quick add': '快速添加',\n            'hero lvl': '英雄等级'\n        },\n        sea: {\n            'offensive gems': 'offensive jades',\n            'increasing gems': 'increasing jades',\n            'expedition plates': 'unique heraldry',\n            'enhancement plates': 'normal heraldry',\n            'techs': 'skill accessory'\n        }\n    };\n\n    // this function gets called on language change to add the translations to the main list\n    function uiTranslations($routeParams, $rootScope) {\n        return {\n            addTranslations: function addTranslations(region, data) {\n                if (region && data && region in uiTranslationLookup) {\n                    var regionData = uiTranslationLookup[region];\n                    for (var key in regionData) {\n                        data[key] = regionData[key];\n                    }\n                }\n            }\n        };\n    }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/uiTranslationService.js\n// module id = 218\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/uiTranslationService.js?");

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\n  function hCodeValues() {\n\n    function toOneDec(stat) {\n      return Math.round(stat.max * 10) / 10;\n    }\n    function toNoDec(stat) {\n      return Math.floor(stat.max);\n    }\n    function inThousands(stat) {\n      var val = Number(stat.max);\n      if (val < 100) {\n        return val;\n      } else if (val < 100000) {\n        return Math.round(val / 100) / 10 + 'k';\n      } else if (val < 1000000) {\n        return Math.round(val / 1000) + 'k';\n      } else if (val < 10000000) {\n        return Math.round(val / 10000) / 100 + 'm';\n      } else {\n        return Math.round(val / 1000000) + 'm';\n      }\n    }\n    function toPercent(stat) {\n      return Math.round(stat.max * 10000) / 100 + '%';\n    }\n\n    return {\n      stats: {\n        0: { id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\n        1: { id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\n        2: { id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\n        3: { id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\n        4: { id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\n        5: { id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\n        6: { id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\n        7: { id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\n        8: { id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\n        9: { id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\n        10: { id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\n        11: { id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\n        12: { id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\n        13: { id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\n        14: { id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\n        15: { id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\n        16: { id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\n        17: { id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\n        18: { id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\n        19: { id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\n        20: { id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\n        21: { id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\n        22: { id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\n        23: { id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\n        25: { id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\n        26: { id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\n        29: { id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\n\n        // these are both min and max\n        // shows with the same name but these are used really just for set bonus I think\n        32: { id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\n        33: { id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\n\n        50: { id: 50, name: 'str%', display: toPercent, dps: true },\n        51: { id: 51, name: 'agi%', display: toPercent, dps: true },\n        52: { id: 52, name: 'int%', display: toPercent, dps: true },\n        53: { id: 53, name: 'vit%', display: toPercent, def: true },\n        54: { id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\n        55: { id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\n        56: { id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\n        57: { id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\n        58: { id: 58, name: 'pdef%', display: toPercent, def: true },\n        59: { id: 59, name: 'mdef%', display: toPercent, def: true },\n        60: { id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\n        61: { id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\n        62: { id: 62, name: 'crit%', display: toPercent, dps: true },\n        63: { id: 63, name: 'crit resist%', display: toPercent, def: true },\n        64: { id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\n        65: { id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\n        74: { id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\n        75: { id: 75, name: 'hp%', display: toPercent, def: true },\n        76: { id: 76, name: 'mp%', display: toPercent, def: true },\n        77: { id: 77, name: 'mp recover%', display: toPercent, def: true },\n        81: { id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\n\n        // these are both min and max\n        // shows with the same name but these are used really just for set bonus I think\n        101: { id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\n        102: { id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\n\n        103: { id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\n        104: { id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\n        105: { id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\n        106: { id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\n        107: { id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\n\n        // stats below here are ones I made up\n        1001: { id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n        1004: { id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n        1006: { id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n\n        1008: { id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\n        1009: { id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\n\n        1012: { id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\n        1029: { id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\n        1103: { id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\n\n        2001: { id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n        2004: { id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n        2006: { id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n\n        2008: { id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\n        2009: { id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\n\n        3000: { id: 3000, name: 'skDmg%', display: toPercent, dps: true },\n        3001: { id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\n        3002: { id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\n\n        3008: { id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\n\n        4012: { id: 4012, name: 'skCrit', display: inThousands, dps: true },\n        4050: { id: 4050, name: 'skStr%', display: toPercent, dps: true },\n        4051: { id: 4051, name: 'skAgi%', display: toPercent, dps: true },\n        4052: { id: 4052, name: 'skInt%', display: toPercent, dps: true },\n        4053: { id: 4053, name: 'skVit%', display: toPercent, def: true },\n        4075: { id: 4075, name: 'skHp%', display: toPercent, def: true },\n        4076: { id: 4076, name: 'skMp%', display: toPercent, def: true },\n\n        // special cases for skills\n        10164: { id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\n        10165: { id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\n        10372: { id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true }\n        // items over 10000 are unknown skill effects\n      },\n\n      rankNames: {\n        0: { id: 0, name: 'normal' },\n        1: { id: 1, name: 'magic' },\n        2: { id: 2, name: 'rare' },\n        3: { id: 3, name: 'epic' },\n        4: { id: 4, name: 'unique' },\n        5: { id: 5, name: 'legendary' }\n        // 6 : { id: 6, name : 'divine' },\n      },\n\n      shopNames: {\n        28001: 'lament', 28002: 'lament', 28003: 'lament', 28004: 'lament', 28005: 'lament', 28006: 'lament', 28007: 'lament', 28008: 'lament', 28009: 'lament', 28101: 'lament',\n        29001: 'aura', 29002: 'aura', 29003: 'aura', 29004: 'aura', 29005: 'aura', 29006: 'aura', 29007: 'aura', 29008: 'aura', 29009: 'aura',\n        5001: 'medal', 5002: 'medal', 5003: 'medal', 5004: 'medal', 5005: 'medal', 5006: 'medal', 5007: 'medal', 5008: 'medal', 5009: 'medal',\n        5101: 'ladder', 5102: 'ladder', 5103: 'ladder', 5104: 'ladder', 5105: 'ladder', 5106: 'ladder', 5107: 'ladder', 5108: 'ladder', 5109: 'ladder',\n        59001: 'garden bunny',\n        52001: 'nightmare', 52002: 'nightmare', 52003: 'nightmare', 52004: 'nightmare', 52005: 'nightmare', 52006: 'nightmare', 52007: 'nightmare', 52008: 'nightmare', 52009: 'nightmare',\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith',\n        89001: 'guild master',\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield',\n        66001: 'erosion',\n        35006: 'plate',\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss',\n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\n        91001: 'wrath',\n        45001: 'farm',\n        100004: 'event',\n        89000: 'nightmare'\n      },\n\n      checkedRank: {\n        0: true,\n        1: true,\n        2: true,\n        3: true,\n        4: true,\n        5: true\n      },\n\n      typeNames: {\n        0: 'weapons',\n        1: 'equipment',\n        5: 'plates',\n        8: 'pouch',\n        38: 'plates',\n        90: 'welspring',\n        132: 'talisman',\n        139: 'gems'\n      },\n\n      elements: {\n        0: { id: 0, name: 'non-ele' },\n        1: { id: 1, name: 'fire', dmgStat: 16 },\n        2: { id: 2, name: 'ice', dmgStat: 17 },\n        3: { id: 3, name: 'light', dmgStat: 18 },\n        4: { id: 4, name: 'dark', dmgStat: 19 }\n      },\n\n      damageTypes: {\n        0: { id: 0, name: 'both separate' },\n        1: { id: 1, name: 'physical' },\n        2: { id: 2, name: 'magical' },\n        3: { id: 3, name: 'both combined' }\n      },\n\n      // note: skills shown on-screen have 1k added to their id\n      skillEffectMapping: {\n        2: { id: 2, name: 'phyisical attack power', mapTo: 3001 },\n        13: { id: 13, name: 'mp', mapTo: 26 },\n        25: { id: 25, name: 'action speed' },\n        29: { id: 29, name: 'magic attack power', mapTo: 3002 },\n        32: { id: 32, name: 'fire %', mapTo: 16 },\n        33: { id: 33, name: 'ice %', mapTo: 17 },\n        34: { id: 34, name: 'light %', mapTo: 18 },\n        35: { id: 35, name: 'dark %', mapTo: 19 },\n        36: { id: 36, name: 'fire def', mapTo: 20 },\n        37: { id: 37, name: 'ice def', mapTo: 21 },\n        38: { id: 38, name: 'light def', mapTo: 22 },\n        39: { id: 39, name: 'dark def', mapTo: 23 },\n        58: { id: 58, name: 'hp%', mapTo: 4075 },\n        59: { id: 59, name: 'mp%', mapTo: 4076 },\n        65: { id: 65, name: 'range' },\n        76: { id: 76, name: 'movement speed', mapTo: 74 },\n        87: { id: 87, name: 'str%', mapTo: 4050 },\n        88: { id: 88, name: 'agi%', mapTo: 4051 },\n        89: { id: 89, name: 'int%', mapTo: 4052 },\n        90: { id: 90, name: 'vit%', mapTo: 4053 },\n        // 134 : { id: 134, name: 'p dmg reduction%' },\n        // 135 : { id: 135, name: 'm dmg reduction%' },\n        185: { id: 185, name: 'wots attack power', mapTo: 3000 },\n        251: { id: 251, name: 'critical chance%', mapTo: 1012 },\n        164: { id: 164, name: 'intToPdmg', mapTo: 10164 },\n        165: { id: 165, name: 'strToMdmg', mapTo: 10165 },\n        222: {\n          id: 222,\n          name: 'hellfire',\n          getVals: function getVals(val) {\n            if (val.indexOf(';') > 0) {\n              var vals = val.split(';');\n              return [{ id: 62, effect: 222, max: Number(vals[0]) / 100.0 }, { id: 4012, effect: 222, max: Number(vals[1]) }];\n            } else {\n              return [{ id: 62, effect: 222, max: Number(val) / 100.0 }];\n            }\n          }\n        },\n        372: {\n          id: 372,\n          name: 'statConversion',\n          getVals: function getVals(val) {\n            if (val.indexOf(';') > 0) {\n              var vals = val.split(';');\n              if (vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\n              }\n            }\n            return [];\n          }\n        },\n\n        389: { id: 389, name: 'fd buf', mapTo: 1029 },\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 }\n      },\n\n      gemExchanges: [{ id: 2, exchange: 1, name: 'Weapon' }, { id: 3, exchange: 2, name: 'Off-Hand Weapon' }, { id: 4, exchange: 3, name: 'Headgear' }, { id: 5, exchange: 4, name: 'Body Armor' }, { id: 6, exchange: 5, name: 'Leg Armor' }, { id: 7, exchange: 6, name: 'Gloves' }, { id: 8, exchange: 7, name: 'Shoes' }, { id: 101, exchange: 8, name: 'Necklace' }, { id: 102, exchange: 9, name: 'Earrings' }, { id: 103, exchange: 10, name: 'Ring' }],\n\n      customItems: [{ id: 0, typeName: 'custom', name: 'hp unified', stats: [{ id: 4075, max: 0.05 }] }],\n\n      getStats: function getStats(data) {\n\n        var useMax = false;\n        var useStateXVal = false;\n        var mightHaveSets = true;\n        var prop = 'State1_Max';\n        if (prop in data) {\n          useMax = true;\n        } else {\n          prop = 'State1Value';\n          if (prop in data) {\n            useStateXVal = true;\n          }\n        }\n\n        var currentState = 0;\n        var statVals = [];\n        for (;;) {\n          currentState++;\n\n          var stateProp = 'State' + currentState;\n          if (!(stateProp in data)) {\n            break;\n          }\n\n          var stateId = data[stateProp];\n          if (stateId == -1) {\n            break;\n          }\n\n          if (stateId == 107) {\n            // is this mp?\n          } else {\n\n            var currentData = { id: stateId };\n\n            var prop;\n\n            if (useMax) {\n              prop = 'State' + currentState + '_Max';\n              currentData.max = data[prop];\n            } else if (useStateXVal) {\n              prop = 'State' + currentState + 'Value';\n              currentData.max = data[prop];\n            } else {\n              prop = 'StateValue' + currentState;\n              currentData.max = Number(data[prop]);\n            }\n\n            if (currentData.max > 0 || currentData.max < 0) {\n              if (mightHaveSets) {\n                prop = 'NeedSetNum' + currentState;\n                if (prop in data) {\n                  if (data[prop] == 0) {\n                    break;\n                  }\n                  currentData.needSetNum = data[prop];\n                } else {\n                  mightHaveSets = false;\n                }\n              }\n\n              statVals.push(currentData);\n            }\n          }\n        }\n\n        return statVals;\n      },\n\n      setupStat: function setupStat(stat, id) {\n        stat.id = Number(id);\n      },\n\n      mergeStats: function mergeStats(stats1, stats2) {\n        var statMap = {};\n\n        var self = this;\n        function add(value) {\n\n          var amount = Number(value.max);\n          if (self.stats[value.id] && 'pc' in self.stats[value.id]) {\n            amount = Math.floor(amount);\n          }\n\n          if (value.id in statMap) {\n            statMap[value.id] += amount;\n          } else {\n            statMap[value.id] = amount;\n          }\n        }\n\n        angular.forEach(stats1, function (value, key) {\n          if (value) {\n            add(value);\n          }\n        });\n\n        if (stats2) {\n          angular.forEach(stats2, function (value, key) {\n            if (value) {\n              add(value);\n            }\n          });\n        }\n\n        var newStats = [];\n\n        for (var key in statMap) {\n          var stat = { max: statMap[key], id: Number(key) };\n          newStats.push(stat);\n        }\n\n        return newStats;\n      }\n    };\n  }\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./services/valueServices.js\n// module id = 219\n// module chunks = 0\n\n//# sourceURL=webpack:///./services/valueServices.js?");

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/jasmine.png\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./images/jasmine.png\n// module id = 220\n// module chunks = 0\n\n//# sourceURL=webpack:///./images/jasmine.png?");

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = \"<h1>{{'dragon nest gear simulator' | translate}}</h1>\\r\\n<p>\\r\\n  This is a multi-region equipment simulator for the game Dragon Nest with up to date data of all in-game items.\\r\\n</p>\\r\\n<p>\\r\\n  Use the toggles in the top right to change regions.\\r\\n  Language and data can be controlled separatly.\\r\\n</p>\\r\\n<p>\\r\\n  If you run into any issues please see the <a ng-href=about>&raquo;faq</a>.\\r\\n  <br/><br/>\\r\\n</p>\\r\\n<p>\\r\\n  Want to see data for other regions?\\r\\n</p>\\r\\n<p>\\r\\n  Try the <a href=https://spacem.github.io/dngearsim-desktop/ >&raquo;desktop edition of dngearsim</a>\\r\\n</p>\\r\\n<p style=text-align:center>\\r\\n<br/>\\r\\n<img style=text-align:center src=\" + __webpack_require__(312) + \">\\r\\n</p>\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/welcome.html\n// module id = 221\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/welcome.html?");

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(223);\n\n\n//////////////////\n// WEBPACK FOOTER\n// multi ./app.js\n// module id = 222\n// module chunks = 0\n\n//# sourceURL=webpack:///multi_./app.js?");

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nangular.module('dnsim', [__webpack_require__(157), 'ngRoute', 'angulartics', 'angulartics.google.analytics', 'infinite-scroll', 'pascalprecht.translate']);\n\nangular.module('dnsim').config(['$compileProvider', allowAutoBindings]);\nangular.module('dnsim').config(['$locationProvider', setupHtml5Mode]);\nangular.module('dnsim').config(['$translateProvider', setupTranslations]);\nangular.module('dnsim').factory('dnSimTranslationLoader', ['translations', '$q', dnSimTranslationLoader]);\n\nfunction importAll(r) {\n    r.keys().forEach(r);\n}\n\n__webpack_require__(225);\n\nimportAll(__webpack_require__(226));\nimportAll(__webpack_require__(310));\n\nimportAll(__webpack_require__(313));\nimportAll(__webpack_require__(314));\nimportAll(__webpack_require__(315));\nimportAll(__webpack_require__(316));\nimportAll(__webpack_require__(317));\nimportAll(__webpack_require__(318));\nimportAll(__webpack_require__(319));\nimportAll(__webpack_require__(320));\nimportAll(__webpack_require__(321));\n\n__webpack_require__(147);\n\nfunction setupHtml5Mode($locationProvider) {\n    $locationProvider.html5Mode({\n        enabled: true,\n        requireBase: true,\n        rewriteLinks: true\n    });\n};\n\nfunction allowAutoBindings($compileProvider) {\n    // angular 1.6 requires use of $onInit unless this config is set\n    // https://toddmotto.com/angular-1-6-is-here\n    $compileProvider.preAssignBindingsEnabled(true);\n};\n\nfunction setupTranslations($translateProvider) {\n    $translateProvider.useLoader('dnSimTranslationLoader');\n    $translateProvider.useSanitizeValueStrategy('escapeParameters');\n}\n\nfunction dnSimTranslationLoader(translations, $q) {\n    return function (options) {\n        return $q(function (resolve, reject) {\n            translations.init(null, function () {\n                return resolve(translations.getRawData());\n            });\n        });\n    };\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.js\n// module id = 223\n// module chunks = 0\n\n//# sourceURL=webpack:///./app.js?");

/***/ }),
/* 224 */,
/* 225 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//////////////////\n// WEBPACK FOOTER\n// ./dngearsim.scss\n// module id = 225\n// module chunks = 0\n\n//# sourceURL=webpack:///./dngearsim.scss?");

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./characterService\": 158,\n\t\"./characterService.js\": 158,\n\t\"./columnsToLoadService\": 159,\n\t\"./columnsToLoadService.js\": 159,\n\t\"./dntDataService\": 160,\n\t\"./dntDataService.js\": 160,\n\t\"./dntInitService\": 161,\n\t\"./dntInitService.js\": 161,\n\t\"./dntResetService\": 162,\n\t\"./dntResetService.js\": 162,\n\t\"./dvStatcardService\": 163,\n\t\"./dvStatcardService.js\": 163,\n\t\"./exportLinkServices\": 164,\n\t\"./exportLinkServices.js\": 164,\n\t\"./groupServices\": 165,\n\t\"./groupServices.js\": 165,\n\t\"./itemCategoryService\": 166,\n\t\"./itemCategoryService.js\": 166,\n\t\"./itemExcludeService\": 167,\n\t\"./itemExcludeService.js\": 167,\n\t\"./itemFactoryService\": 168,\n\t\"./itemFactoryService.js\": 168,\n\t\"./itemSourceService\": 169,\n\t\"./itemSourceService.js\": 169,\n\t\"./jobService\": 170,\n\t\"./jobService.js\": 170,\n\t\"./onlineService\": 171,\n\t\"./onlineService.js\": 171,\n\t\"./quickAddHelperService\": 211,\n\t\"./quickAddHelperService.js\": 211,\n\t\"./quickAddService\": 212,\n\t\"./quickAddService.js\": 212,\n\t\"./quickAddStepsService\": 213,\n\t\"./quickAddStepsService.js\": 213,\n\t\"./regionService\": 214,\n\t\"./regionService.js\": 214,\n\t\"./saveService\": 215,\n\t\"./saveService.js\": 215,\n\t\"./statService\": 216,\n\t\"./statService.js\": 216,\n\t\"./translationService\": 217,\n\t\"./translationService.js\": 217,\n\t\"./uiTranslationService\": 218,\n\t\"./uiTranslationService.js\": 218,\n\t\"./valueServices\": 219,\n\t\"./valueServices.js\": 219\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 226;\n\n//////////////////\n// WEBPACK FOOTER\n// ./services ^\\.\\/.*$\n// module id = 226\n// module chunks = 0\n\n//# sourceURL=webpack:///./services_^\\.\\/.*$?");

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LZString = __webpack_require__(13);\r\nvar DntReader = /** @class */ (function () {\r\n    function DntReader() {\r\n        // module for to allow reading of dnt data from dnt files\r\n        // right now this simply loads the whole file into the data property\r\n        // data is an array of objects eg [{id: \"123\",NameParam: \"456\"}]\r\n        this.data = [];\r\n        this.columnNames = [];\r\n        this.columnTypes = [];\r\n        this.columnIndexes = {};\r\n        this.numRows = 0;\r\n        this.numColumns = 0;\r\n        this.fileName = '';\r\n        this.colsToLoad = null;\r\n    }\r\n    DntReader.prototype.getRow = function (index) {\r\n        return this.convertData(this.data[index]);\r\n    };\r\n    DntReader.prototype.convertData = function (d) {\r\n        var item = { id: d[0] };\r\n        for (var c = 1; c < this.numColumns; ++c) {\r\n            if (d[c] != null) {\r\n                item[this.columnNames[c]] = d[c];\r\n            }\r\n        }\r\n        return item;\r\n    };\r\n    DntReader.prototype.getValue = function (index, colName) {\r\n        if (colName in this.columnIndexes) {\r\n            return this.data[index][this.columnIndexes[colName]];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    // function to load in dnt data from a hosted file\r\n    // if the file is not found it will try a zip with the same name\r\n    DntReader.prototype.loadDntFromServerFile = function (fileName, statusFunc, processFileFunc, failFunc) {\r\n        var useFileName = fileName;\r\n        if (this.colsToLoad === null && fileName.toUpperCase().lastIndexOf(\".LZJSON\") != fileName.length - 7 && fileName.toUpperCase().lastIndexOf(\".JSON\") != fileName.length - 5) {\r\n            useFileName = fileName.substr(0, fileName.length - 4) + '.lzjson';\r\n        }\r\n        this.loadDntFromServerFileImpl(useFileName, statusFunc, processFileFunc, failFunc);\r\n    };\r\n    DntReader.prototype.loadDntFromServerFileImpl = function (fileName, statusFunc, processFileFunc, failFunc) {\r\n        // console.log(\"about to load\");\r\n        var isLzJson = (fileName.toUpperCase().lastIndexOf(\".LZJSON\") == fileName.length - 7);\r\n        var isJson = (fileName.toUpperCase().lastIndexOf(\".JSON\") == fileName.length - 5);\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', fileName, true);\r\n        if (isLzJson || isJson) {\r\n            xhr.responseType = 'text';\r\n        }\r\n        else {\r\n            xhr.responseType = 'blob';\r\n        }\r\n        statusFunc('downloading dnt file ' + fileName);\r\n        var start = new Date().getTime();\r\n        xhr.onerror = function (e) {\r\n            console.log('what! error ', e);\r\n            if (failFunc) {\r\n                failFunc('Cannot load file' + e);\r\n            }\r\n        };\r\n        xhr.ontimeout = function (e) {\r\n            console.log('what! timeout ', e);\r\n            if (failFunc) {\r\n                failFunc('Timeout loading file' + e);\r\n            }\r\n        };\r\n        var t = this;\r\n        xhr.onload = function (e) {\r\n            // console.log(\"got status\");\r\n            if (this.status === 200) {\r\n                // console.log(\"got 200 status\");\r\n                var blobv = this.response;\r\n                if (isJson) {\r\n                    t.processJsonFile(blobv, fileName);\r\n                    var end = new Date().getTime();\r\n                    var time = end - start;\r\n                    console.log('json time: ' + time / 1000 + 's for ' + fileName);\r\n                    processFileFunc();\r\n                }\r\n                else if (isLzJson) {\r\n                    t.processLzFile(blobv, fileName);\r\n                    var end = new Date().getTime();\r\n                    var time = end - start;\r\n                    console.log('lzjson time: ' + time / 1000 + 's for ' + fileName);\r\n                    processFileFunc();\r\n                }\r\n                else {\r\n                    throw new Error('unknown file type');\r\n                }\r\n            }\r\n            else {\r\n                // if we get an error we can try to see if there is a zip version there\r\n                if (fileName.toUpperCase().lastIndexOf('.LZJSON') === fileName.length - 7) {\r\n                    console.log('trying dnt');\r\n                    var dntFileName = fileName.substr(0, fileName.length - 7) + '.dnt';\r\n                    t.loadDntFromServerFileImpl(dntFileName, statusFunc, processFileFunc, failFunc);\r\n                }\r\n                else if (fileName.toUpperCase().lastIndexOf('.DNT') === fileName.length - 4) {\r\n                    console.log('trying json');\r\n                    var zipFileName = fileName.substr(0, fileName.length - 4) + '.json';\r\n                    t.loadDntFromServerFileImpl(zipFileName, statusFunc, processFileFunc, failFunc);\r\n                }\r\n                else {\r\n                    console.log('what! status ' + this.status + '??');\r\n                    if (failFunc) {\r\n                        failFunc(this.status + ': Cannot load file, couldnt load zip either: ' + fileName);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n    DntReader.prototype.processJsonFile = function (json, fileName) {\r\n        var dlData = JSON.parse(json);\r\n        this.data = dlData.data;\r\n        this.fileName = fileName;\r\n        this.columnNames = dlData.columnNames;\r\n        this.columnTypes = dlData.columnTypes;\r\n        this.numRows = this.data.length;\r\n        this.numColumns = dlData.columnNames.length;\r\n        this.columnIndexes = { 'id': 0 };\r\n        for (var c = 1; c < this.numColumns; ++c) {\r\n            this.columnIndexes[this.columnNames[c]] = c;\r\n        }\r\n    };\r\n    DntReader.prototype.processLzFile = function (blobv, fileName) {\r\n        var start = new Date().getTime();\r\n        var stringifiedData = LZString.decompressFromUTF16(blobv);\r\n        var end = new Date().getTime();\r\n        var time = end - start;\r\n        console.log('decompress time: ' + time / 1000 + 's for ' + fileName);\r\n        this.processJsonFile(stringifiedData, fileName);\r\n    };\r\n    return DntReader;\r\n}());\r\nexports.DntReader = DntReader;\r\nmodule.exports = DntReader;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./util/dntreader.ts\n// module id = 227\n// module chunks = 0\n\n//# sourceURL=webpack:///./util/dntreader.ts?");

/***/ }),
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LZString = __webpack_require__(13);\r\nvar DnTranslations = /** @class */ (function () {\r\n    function DnTranslations() {\r\n        this.data = null;\r\n        this.sizeLimit = null;\r\n    }\r\n    // function to lookup some string value by its id\r\n    // this will also work with values that have a number\r\n    // of mids enclosed in curly brackets\r\n    DnTranslations.prototype.translate = function (value) {\r\n        if (this.data === null) {\r\n            return value;\r\n        }\r\n        var result = \"\";\r\n        if (value === 0 || value === \"\" || value === null) {\r\n            result = value;\r\n        }\r\n        else if (value.toString().indexOf(',') > -1) {\r\n            var values = value.toString().split(',');\r\n            var results = [];\r\n            for (var v = 0; v < values.length; ++v) {\r\n                var stripped = values[v].replace(\"{\", \"\").replace(\"}\", \"\");\r\n                results.push(values[v].replace(stripped, this.translate(stripped)));\r\n            }\r\n            result = results.join(',');\r\n        }\r\n        else {\r\n            result = this.data[value];\r\n            if (typeof result === 'undefined') {\r\n                if (typeof value === 'string') {\r\n                    if (value.indexOf('{') == 0) {\r\n                        var stripped = value.replace(\"{\", \"\").replace(\"}\", \"\");\r\n                        result = value.replace(stripped, this.translate(stripped));\r\n                    }\r\n                    else {\r\n                        result = value.toString();\r\n                    }\r\n                }\r\n                else {\r\n                    result = value;\r\n                }\r\n            }\r\n            else if (typeof value === 'string' && result.indexOf('#N/A') == 0) {\r\n                result = '';\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    // function to read in the xml data\r\n    // and store it as an array for fast access\r\n    // once loaded it tries to store the data in UIStrings session storage\r\n    DnTranslations.prototype.process = function (xmlFileAsString, callback, complete) {\r\n        this.data = {};\r\n        var numItems = 0;\r\n        // console.log(\"processing:\");\r\n        var parser = new DOMParser();\r\n        var xmlData = parser.parseFromString(xmlFileAsString, \"text/xml\");\r\n        var elements = xmlData.getElementsByTagName(\"message\");\r\n        for (var m = 0; m < elements.length; ++m) {\r\n            var text = elements[m].textContent;\r\n            if (text) {\r\n                if (this.sizeLimit === null || text.length < this.sizeLimit) {\r\n                    var mid = elements[m].getAttribute(\"mid\");\r\n                    if (mid) {\r\n                        this.data[mid] = text;\r\n                        numItems++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            var stringifiedData = JSON.stringify(this.data);\r\n            sessionStorage.setItem('UIStrings', LZString.compressToUTF16(stringifiedData));\r\n            callback('stored ui strings for later');\r\n        }\r\n        catch (ex) {\r\n            console.log('error setting strings ' + ex);\r\n            console.log(ex.stack);\r\n        }\r\n        callback('loaded ' + numItems + ' translations');\r\n        complete();\r\n    };\r\n    DnTranslations.prototype.loadFromSession = function () {\r\n        try {\r\n            this.data = null;\r\n            var savedData = sessionStorage.getItem('UIStrings');\r\n            if (savedData === null) {\r\n                return false;\r\n            }\r\n            var stringifiedData = LZString.decompressFromUTF16(savedData);\r\n            this.data = JSON.parse(stringifiedData);\r\n            console.log('got ui strings from local storage');\r\n            return true;\r\n        }\r\n        catch (ex) {\r\n            console.log('couldnt get ui strings ' + ex);\r\n            // no worries, just load the default\r\n            return false;\r\n        }\r\n    };\r\n    // function to load xml file from url\r\n    // if the file is not found we look for a zip verison and then unzip it\r\n    // it tries to find the already loaded data in UIStrings session storage\r\n    // and uses this if it can\r\n    DnTranslations.prototype.loadDefaultFile = function (fileName, callback, complete, fail) {\r\n        // console.log(\"about to load\");\r\n        this.loadFromSession();\r\n        if (this.data != null && typeof this.data === 'object') {\r\n            callback('using uistrings stored in local storage');\r\n            complete();\r\n        }\r\n        else if (fileName === null) {\r\n            callback('Translation location required');\r\n        }\r\n        else {\r\n            console.log('data still not set');\r\n            localStorage.setItem('UIStrings_file', fileName);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', fileName, true);\r\n            if (fileName.toUpperCase().lastIndexOf('.ZIP') === fileName.length - 4) {\r\n                xhr.responseType = 'blob';\r\n            }\r\n            else if (fileName.toUpperCase().lastIndexOf('.XML') === fileName.length - 4) {\r\n                xhr.responseType = 'document';\r\n            }\r\n            else {\r\n                xhr.responseType = 'text';\r\n            }\r\n            callback('downloading translation file ' + fileName);\r\n            var t = this;\r\n            xhr.onerror = function (e) {\r\n                console.log('what! error ', e);\r\n                fail('Cannot load file' + e);\r\n            };\r\n            xhr.ontimeout = function (e) {\r\n                console.log('what! timeout ', e);\r\n                fail('Timeout loading file' + e);\r\n            };\r\n            xhr.onload = function (e) {\r\n                if (this.status === 200) {\r\n                    callback('loading translations from ' + fileName);\r\n                    var start = new Date().getTime();\r\n                    var blobv = this.response;\r\n                    console.log(\"reading zip\");\r\n                    if (fileName.toUpperCase().lastIndexOf('.LZJSON') === fileName.length - 7) {\r\n                        sessionStorage.setItem('UIStrings', blobv);\r\n                        t.loadFromSession();\r\n                        callback('using lzjson translations');\r\n                        complete();\r\n                        var end = new Date().getTime();\r\n                        var time = end - start;\r\n                        console.log('translations process time: ' + time / 1000 + 's');\r\n                    }\r\n                    else if (fileName.toUpperCase().lastIndexOf('.XML') === fileName.length - 4) {\r\n                        callback('using xml translations');\r\n                        t.process(blobv, callback, complete);\r\n                        var end = new Date().getTime();\r\n                        var time = end - start;\r\n                        console.log('translations process time: ' + time / 1000 + 's');\r\n                    }\r\n                }\r\n                else {\r\n                    // if we get an error we can try to see if there is a zip version there\r\n                    if (fileName.toUpperCase().lastIndexOf('.LZJSON') === fileName.length - 7) {\r\n                        var baseFileName = fileName.substr(0, fileName.length - 7);\r\n                        t.loadDefaultFile(baseFileName + '.zip', callback, complete, fail);\r\n                    }\r\n                    else if (fileName.toUpperCase().lastIndexOf('.ZIP') === fileName.length - 4) {\r\n                        var baseFileName = fileName.substr(0, fileName.length - 4);\r\n                        t.loadDefaultFile(baseFileName + '.xml', callback, complete, fail);\r\n                    }\r\n                    else {\r\n                        console.log('what status' + this.status + ' ' + fileName);\r\n                        fail(this.status + ': Cannot load file, couldnt load zip either: ' + fileName);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        }\r\n    };\r\n    return DnTranslations;\r\n}());\r\nexports.DnTranslations = DnTranslations;\r\nmodule.exports = DnTranslations;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./util/dntranslations.ts\n// module id = 309\n// module chunks = 0\n\n//# sourceURL=webpack:///./util/dntranslations.ts?");

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./about/about\": 31,\n\t\"./about/about.html\": 108,\n\t\"./about/about.js\": 31,\n\t\"./builds/build\": 32,\n\t\"./builds/build-actions\": 33,\n\t\"./builds/build-actions.html\": 110,\n\t\"./builds/build-actions.js\": 33,\n\t\"./builds/build-export-action\": 34,\n\t\"./builds/build-export-action.html\": 111,\n\t\"./builds/build-export-action.js\": 34,\n\t\"./builds/build-import\": 35,\n\t\"./builds/build-import.html\": 112,\n\t\"./builds/build-import.js\": 35,\n\t\"./builds/build-item\": 36,\n\t\"./builds/build-item-list\": 37,\n\t\"./builds/build-item-list.html\": 114,\n\t\"./builds/build-item-list.js\": 37,\n\t\"./builds/build-item.html\": 113,\n\t\"./builds/build-item.js\": 36,\n\t\"./builds/build-list\": 38,\n\t\"./builds/build-list.html\": 39,\n\t\"./builds/build-list.js\": 38,\n\t\"./builds/build-stats\": 40,\n\t\"./builds/build-stats.html\": 115,\n\t\"./builds/build-stats.js\": 40,\n\t\"./builds/build-summary\": 41,\n\t\"./builds/build-summary.html\": 116,\n\t\"./builds/build-summary.js\": 41,\n\t\"./builds/build-talismans\": 42,\n\t\"./builds/build-talismans.html\": 117,\n\t\"./builds/build-talismans.js\": 42,\n\t\"./builds/build.html\": 109,\n\t\"./builds/build.js\": 32,\n\t\"./builds/delete-build\": 43,\n\t\"./builds/delete-build.html\": 118,\n\t\"./builds/delete-build.js\": 43,\n\t\"./builds/edit-build\": 44,\n\t\"./builds/edit-build.html\": 45,\n\t\"./builds/edit-build.js\": 44,\n\t\"./builds/quick-add\": 46,\n\t\"./builds/quick-add.html\": 119,\n\t\"./builds/quick-add.js\": 46,\n\t\"./builds/reload-build\": 47,\n\t\"./builds/reload-build.html\": 120,\n\t\"./builds/reload-build.js\": 47,\n\t\"./builds/view-group\": 48,\n\t\"./builds/view-group.html\": 121,\n\t\"./builds/view-group.js\": 48,\n\t\"./filters/escape.filter\": 49,\n\t\"./filters/escape.filter.js\": 49,\n\t\"./filters/percentage.filter\": 50,\n\t\"./filters/percentage.filter.js\": 50,\n\t\"./item/group-assignment\": 51,\n\t\"./item/group-assignment.html\": 122,\n\t\"./item/group-assignment.js\": 51,\n\t\"./item/item\": 52,\n\t\"./item/item-edit\": 53,\n\t\"./item/item-edit-custom\": 54,\n\t\"./item/item-edit-custom.html\": 124,\n\t\"./item/item-edit-custom.js\": 54,\n\t\"./item/item-edit-enchantment\": 55,\n\t\"./item/item-edit-enchantment.html\": 125,\n\t\"./item/item-edit-enchantment.js\": 55,\n\t\"./item/item-edit-potential\": 56,\n\t\"./item/item-edit-potential.html\": 126,\n\t\"./item/item-edit-potential.js\": 56,\n\t\"./item/item-edit-skill\": 57,\n\t\"./item/item-edit-skill.html\": 127,\n\t\"./item/item-edit-skill.js\": 57,\n\t\"./item/item-edit-spark\": 58,\n\t\"./item/item-edit-spark.html\": 128,\n\t\"./item/item-edit-spark.js\": 58,\n\t\"./item/item-edit-talisman\": 59,\n\t\"./item/item-edit-talisman.html\": 129,\n\t\"./item/item-edit-talisman.js\": 59,\n\t\"./item/item-edit.html\": 123,\n\t\"./item/item-edit.js\": 53,\n\t\"./item/item-view-attainment\": 60,\n\t\"./item/item-view-attainment.html\": 130,\n\t\"./item/item-view-attainment.js\": 60,\n\t\"./item/item-view-box\": 61,\n\t\"./item/item-view-box.html\": 131,\n\t\"./item/item-view-box.js\": 61,\n\t\"./item/item-view-craft\": 62,\n\t\"./item/item-view-craft.html\": 132,\n\t\"./item/item-view-craft.js\": 62,\n\t\"./item/item-view-extraction\": 63,\n\t\"./item/item-view-extraction.html\": 133,\n\t\"./item/item-view-extraction.js\": 63,\n\t\"./item/item-view-plate\": 64,\n\t\"./item/item-view-plate.html\": 134,\n\t\"./item/item-view-plate.js\": 64,\n\t\"./item/item-view-set\": 65,\n\t\"./item/item-view-set.html\": 135,\n\t\"./item/item-view-set.js\": 65,\n\t\"./item/item-view-shop\": 66,\n\t\"./item/item-view-shop.html\": 136,\n\t\"./item/item-view-shop.js\": 66,\n\t\"./item/item-view-transfer\": 67,\n\t\"./item/item-view-transfer.html\": 137,\n\t\"./item/item-view-transfer.js\": 67,\n\t\"./item/item-view-tuning\": 68,\n\t\"./item/item-view-tuning.html\": 138,\n\t\"./item/item-view-tuning.js\": 68,\n\t\"./item/item.html\": 69,\n\t\"./item/item.js\": 52,\n\t\"./nav/export\": 70,\n\t\"./nav/export.html\": 139,\n\t\"./nav/export.js\": 70,\n\t\"./nav/header\": 71,\n\t\"./nav/header.html\": 140,\n\t\"./nav/header.js\": 71,\n\t\"./nav/nav\": 72,\n\t\"./nav/nav.html\": 141,\n\t\"./nav/nav.js\": 72,\n\t\"./nav/setup\": 73,\n\t\"./nav/setup.html\": 142,\n\t\"./nav/setup.js\": 73,\n\t\"./online/build-search\": 74,\n\t\"./online/build-search.html\": 143,\n\t\"./online/build-search.js\": 74,\n\t\"./online/profile\": 75,\n\t\"./online/profile.html\": 144,\n\t\"./online/profile.js\": 75,\n\t\"./online/publish\": 76,\n\t\"./online/publish.html\": 145,\n\t\"./online/publish.js\": 76,\n\t\"./online/published\": 77,\n\t\"./online/published.html\": 78,\n\t\"./online/published.js\": 77,\n\t\"./region/region\": 79,\n\t\"./region/region.html\": 146,\n\t\"./region/region.js\": 79,\n\t\"./routes\": 147,\n\t\"./routes.js\": 147,\n\t\"./search/custom-items\": 81,\n\t\"./search/custom-items.html\": 149,\n\t\"./search/custom-items.js\": 81,\n\t\"./search/everything-search\": 82,\n\t\"./search/everything-search.html\": 80,\n\t\"./search/everything-search.js\": 82,\n\t\"./search/search\": 83,\n\t\"./search/search.html\": 148,\n\t\"./search/search.js\": 83,\n\t\"./search/skill-search\": 84,\n\t\"./search/skill-search.html\": 150,\n\t\"./search/skill-search.js\": 84,\n\t\"./welcome.html\": 221,\n\t\"./widgets/choose-class\": 85,\n\t\"./widgets/choose-class.html\": 151,\n\t\"./widgets/choose-class.js\": 85,\n\t\"./widgets/dnsim-category-links\": 86,\n\t\"./widgets/dnsim-category-links.html\": 152,\n\t\"./widgets/dnsim-category-links.js\": 86,\n\t\"./widgets/dnsim-item-icon\": 87,\n\t\"./widgets/dnsim-item-icon.html\": 153,\n\t\"./widgets/dnsim-item-icon.js\": 87,\n\t\"./widgets/dnsim-item-link\": 88,\n\t\"./widgets/dnsim-item-link.html\": 154,\n\t\"./widgets/dnsim-item-link.js\": 88,\n\t\"./widgets/dnsim-job-icon\": 89,\n\t\"./widgets/dnsim-job-icon.html\": 155,\n\t\"./widgets/dnsim-job-icon.js\": 89,\n\t\"./widgets/dnsim-loading\": 90,\n\t\"./widgets/dnsim-loading.html\": 156,\n\t\"./widgets/dnsim-loading.js\": 90,\n\t\"./widgets/dnsim-select-all-on-click\": 91,\n\t\"./widgets/dnsim-select-all-on-click.js\": 91,\n\t\"./widgets/dnsim-stats\": 92,\n\t\"./widgets/dnsim-stats.js\": 92,\n\t\"./widgets/dnsim-string-to-number\": 93,\n\t\"./widgets/dnsim-string-to-number.js\": 93,\n\t\"./widgets/dnsim-string-to-percent\": 94,\n\t\"./widgets/dnsim-string-to-percent.js\": 94,\n\t\"./widgets/file-change\": 95,\n\t\"./widgets/file-change.js\": 95\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 310;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui ^\\.\\/.*$\n// module id = 310\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui_^\\.\\/.*$?");

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/tink.png\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./images/tink.png\n// module id = 311\n// module chunks = 0\n\n//# sourceURL=webpack:///./images/tink.png?");

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/engineer_front.png\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./images/engineer_front.png\n// module id = 312\n// module chunks = 0\n\n//# sourceURL=webpack:///./images/engineer_front.png?");

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./about\": 31,\n\t\"./about.html\": 108,\n\t\"./about.js\": 31\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 313;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/about ^\\.\\/.*$\n// module id = 313\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/about_^\\.\\/.*$?");

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./build\": 32,\n\t\"./build-actions\": 33,\n\t\"./build-actions.html\": 110,\n\t\"./build-actions.js\": 33,\n\t\"./build-export-action\": 34,\n\t\"./build-export-action.html\": 111,\n\t\"./build-export-action.js\": 34,\n\t\"./build-import\": 35,\n\t\"./build-import.html\": 112,\n\t\"./build-import.js\": 35,\n\t\"./build-item\": 36,\n\t\"./build-item-list\": 37,\n\t\"./build-item-list.html\": 114,\n\t\"./build-item-list.js\": 37,\n\t\"./build-item.html\": 113,\n\t\"./build-item.js\": 36,\n\t\"./build-list\": 38,\n\t\"./build-list.html\": 39,\n\t\"./build-list.js\": 38,\n\t\"./build-stats\": 40,\n\t\"./build-stats.html\": 115,\n\t\"./build-stats.js\": 40,\n\t\"./build-summary\": 41,\n\t\"./build-summary.html\": 116,\n\t\"./build-summary.js\": 41,\n\t\"./build-talismans\": 42,\n\t\"./build-talismans.html\": 117,\n\t\"./build-talismans.js\": 42,\n\t\"./build.html\": 109,\n\t\"./build.js\": 32,\n\t\"./delete-build\": 43,\n\t\"./delete-build.html\": 118,\n\t\"./delete-build.js\": 43,\n\t\"./edit-build\": 44,\n\t\"./edit-build.html\": 45,\n\t\"./edit-build.js\": 44,\n\t\"./quick-add\": 46,\n\t\"./quick-add.html\": 119,\n\t\"./quick-add.js\": 46,\n\t\"./reload-build\": 47,\n\t\"./reload-build.html\": 120,\n\t\"./reload-build.js\": 47,\n\t\"./view-group\": 48,\n\t\"./view-group.html\": 121,\n\t\"./view-group.js\": 48\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 314;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/builds ^\\.\\/.*$\n// module id = 314\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/builds_^\\.\\/.*$?");

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./escape.filter\": 49,\n\t\"./escape.filter.js\": 49,\n\t\"./percentage.filter\": 50,\n\t\"./percentage.filter.js\": 50\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 315;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/filters ^\\.\\/.*$\n// module id = 315\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/filters_^\\.\\/.*$?");

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./group-assignment\": 51,\n\t\"./group-assignment.html\": 122,\n\t\"./group-assignment.js\": 51,\n\t\"./item\": 52,\n\t\"./item-edit\": 53,\n\t\"./item-edit-custom\": 54,\n\t\"./item-edit-custom.html\": 124,\n\t\"./item-edit-custom.js\": 54,\n\t\"./item-edit-enchantment\": 55,\n\t\"./item-edit-enchantment.html\": 125,\n\t\"./item-edit-enchantment.js\": 55,\n\t\"./item-edit-potential\": 56,\n\t\"./item-edit-potential.html\": 126,\n\t\"./item-edit-potential.js\": 56,\n\t\"./item-edit-skill\": 57,\n\t\"./item-edit-skill.html\": 127,\n\t\"./item-edit-skill.js\": 57,\n\t\"./item-edit-spark\": 58,\n\t\"./item-edit-spark.html\": 128,\n\t\"./item-edit-spark.js\": 58,\n\t\"./item-edit-talisman\": 59,\n\t\"./item-edit-talisman.html\": 129,\n\t\"./item-edit-talisman.js\": 59,\n\t\"./item-edit.html\": 123,\n\t\"./item-edit.js\": 53,\n\t\"./item-view-attainment\": 60,\n\t\"./item-view-attainment.html\": 130,\n\t\"./item-view-attainment.js\": 60,\n\t\"./item-view-box\": 61,\n\t\"./item-view-box.html\": 131,\n\t\"./item-view-box.js\": 61,\n\t\"./item-view-craft\": 62,\n\t\"./item-view-craft.html\": 132,\n\t\"./item-view-craft.js\": 62,\n\t\"./item-view-extraction\": 63,\n\t\"./item-view-extraction.html\": 133,\n\t\"./item-view-extraction.js\": 63,\n\t\"./item-view-plate\": 64,\n\t\"./item-view-plate.html\": 134,\n\t\"./item-view-plate.js\": 64,\n\t\"./item-view-set\": 65,\n\t\"./item-view-set.html\": 135,\n\t\"./item-view-set.js\": 65,\n\t\"./item-view-shop\": 66,\n\t\"./item-view-shop.html\": 136,\n\t\"./item-view-shop.js\": 66,\n\t\"./item-view-transfer\": 67,\n\t\"./item-view-transfer.html\": 137,\n\t\"./item-view-transfer.js\": 67,\n\t\"./item-view-tuning\": 68,\n\t\"./item-view-tuning.html\": 138,\n\t\"./item-view-tuning.js\": 68,\n\t\"./item.html\": 69,\n\t\"./item.js\": 52\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 316;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/item ^\\.\\/.*$\n// module id = 316\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/item_^\\.\\/.*$?");

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./export\": 70,\n\t\"./export.html\": 139,\n\t\"./export.js\": 70,\n\t\"./header\": 71,\n\t\"./header.html\": 140,\n\t\"./header.js\": 71,\n\t\"./nav\": 72,\n\t\"./nav.html\": 141,\n\t\"./nav.js\": 72,\n\t\"./setup\": 73,\n\t\"./setup.html\": 142,\n\t\"./setup.js\": 73\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 317;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/nav ^\\.\\/.*$\n// module id = 317\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/nav_^\\.\\/.*$?");

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./build-search\": 74,\n\t\"./build-search.html\": 143,\n\t\"./build-search.js\": 74,\n\t\"./profile\": 75,\n\t\"./profile.html\": 144,\n\t\"./profile.js\": 75,\n\t\"./publish\": 76,\n\t\"./publish.html\": 145,\n\t\"./publish.js\": 76,\n\t\"./published\": 77,\n\t\"./published.html\": 78,\n\t\"./published.js\": 77\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 318;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/online ^\\.\\/.*$\n// module id = 318\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/online_^\\.\\/.*$?");

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./region\": 79,\n\t\"./region.html\": 146,\n\t\"./region.js\": 79\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 319;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/region ^\\.\\/.*$\n// module id = 319\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/region_^\\.\\/.*$?");

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./custom-items\": 81,\n\t\"./custom-items.html\": 149,\n\t\"./custom-items.js\": 81,\n\t\"./everything-search\": 82,\n\t\"./everything-search.html\": 80,\n\t\"./everything-search.js\": 82,\n\t\"./search\": 83,\n\t\"./search.html\": 148,\n\t\"./search.js\": 83,\n\t\"./skill-search\": 84,\n\t\"./skill-search.html\": 150,\n\t\"./skill-search.js\": 84\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 320;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/search ^\\.\\/.*$\n// module id = 320\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/search_^\\.\\/.*$?");

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./choose-class\": 85,\n\t\"./choose-class.html\": 151,\n\t\"./choose-class.js\": 85,\n\t\"./dnsim-category-links\": 86,\n\t\"./dnsim-category-links.html\": 152,\n\t\"./dnsim-category-links.js\": 86,\n\t\"./dnsim-item-icon\": 87,\n\t\"./dnsim-item-icon.html\": 153,\n\t\"./dnsim-item-icon.js\": 87,\n\t\"./dnsim-item-link\": 88,\n\t\"./dnsim-item-link.html\": 154,\n\t\"./dnsim-item-link.js\": 88,\n\t\"./dnsim-job-icon\": 89,\n\t\"./dnsim-job-icon.html\": 155,\n\t\"./dnsim-job-icon.js\": 89,\n\t\"./dnsim-loading\": 90,\n\t\"./dnsim-loading.html\": 156,\n\t\"./dnsim-loading.js\": 90,\n\t\"./dnsim-select-all-on-click\": 91,\n\t\"./dnsim-select-all-on-click.js\": 91,\n\t\"./dnsim-stats\": 92,\n\t\"./dnsim-stats.js\": 92,\n\t\"./dnsim-string-to-number\": 93,\n\t\"./dnsim-string-to-number.js\": 93,\n\t\"./dnsim-string-to-percent\": 94,\n\t\"./dnsim-string-to-percent.js\": 94,\n\t\"./file-change\": 95,\n\t\"./file-change.js\": 95\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 321;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui/widgets ^\\.\\/.*$\n// module id = 321\n// module chunks = 0\n\n//# sourceURL=webpack:///./ui/widgets_^\\.\\/.*$?");

/***/ })
]),[222]);