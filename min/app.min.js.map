{"version":3,"sources":["routes.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","newAffectAmount","oldAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getNewAffectAmount","getOldAffectAmount","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","doClose","isClosed","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getLevelDntName","getSkills","loadedJobId","baseJobNames","baseName","getBaseJobName","dntName","levelDntName","setupSkills","skills","allReady","numSkills","EffectClass2","NeedJob","reloadSkill","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","statAddTo","addToDef","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","jobsDnt","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","sparkId","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","dragonjeweltype","DragonJewelSlot2","DragonJewelSlot4","itemTypeName","fileType","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","titleStep","usefulTitles","allTitles","isItemStep","enhanceEqStep","hideName","namedItemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","numStats","allItem","largestVal","selectedVal","quickHigh","highStatStep","val2","allStats","hasStatStep","val1","customStep","searchable","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","priElementId","min","nonEleDamage","critChance","critDamagePc","newFdPc","avgDmg","secElementId","secondaryElementStat","elementStat","addAvgDamageStat","minPdmg","secAvgDmg","minMdmg","int","vit","agi","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","maxPdmg","strToPdmg","paPwr","intToPdmg","extraPdmgMod","maxMdmg","intToMdmg","extraMdmg","maPwr","extraMdmgMod","crit","skCrit","cDmg","itemCrit","itemCtriDmg","fd","fdSkill","Cfinaldamage","maxFd","dmgStat","firePc","allElementStat","icePc","lightPc","darkPc","mdefEqHp","eqHp","effectId","effects","stillCols","valColName","map","skillEffectMapping","getVals","vals","mapTo","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","na","1000128908","cdn","dragon nest gear simulator","enemy lvl","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","toNoDec","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","88","101","102","104","105","106","107","1001","1004","1005","1006","1007","1008","1009","1012","1030","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","103721","10389","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","34","35","36","37","39","87","89","185","251","164","effect","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + encodeURIComponent(buildName));\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER' || jobName == 'RANDGRID') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA' || jobName == 'AVALANCHE') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.json', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + encodeURIComponent(newBuildName));\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.newAffectAmount = null;\r\n    vm.oldAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n\r\n  this.getNewAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.newAffectAmount[stat];\r\n  };\r\n\r\n  this.getOldAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.oldAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    this.newAffectAmount = {};\r\n    this.oldAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.newAffectAmount[id] = vm.getStat(id, newStats).max;\r\n        vm.oldAffectAmount[id] = vm.getStat(id, origStats).max;\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.newAffectAmount[id], vm.oldAffectAmount[id]);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * ((newVal-origVal)/origVal)) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.json';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData',\r\nfunction($timeout,dntData) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.json';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.json',\r\n    'itemgaintable_dragonjewel.json',\r\n    'itemgaintable_enchant.json',\r\n    'itemgaintable_etc.json',\r\n    'itemgaintable_reboot.json',\r\n    'itemgaintable_talisman.json'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.json',\r\n    'itemdroptable_abyss.json',\r\n    'itemdroptable_apprentice.json',\r\n    'itemdroptable_cook.json',\r\n    'itemdroptable_darklair.json',\r\n    'itemdroptable_dimension.json',\r\n    'itemdroptable_disjoint.json',\r\n    'itemdroptable_dnexpedition.json',\r\n    'itemdroptable_event.json',\r\n    'itemdroptable_farm.json',\r\n    'itemdroptable_fishing.json',\r\n    'itemdroptable_guildwar.json',\r\n    'itemdroptable_item.json',\r\n    'itemdroptable_monsteritem.json',\r\n    'itemdroptable_propdrop.json',\r\n    'itemdroptable_pvp.json',\r\n    'itemdroptable_randomcompound.json',\r\n    'itemdroptable_stageclear.json',\r\n    'itemdroptable_themepark.json',\r\n    'itemdroptable_union.json']\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var charmItemtable = 'charmitemtable.json';\r\n  var commonCharmItemtable = 'charmitemtable_common.json';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.json', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.json',\r\n    'itemcompoundtable_custom.json',\r\n    'itemcompoundtable_glyph.json',\r\n    'itemcompoundtable_glyph95.json',\r\n    'itemcompoundtable_jewel.json',\r\n    'itemcompoundtable_renewal.json',\r\n    'itemcompoundtable_set.json'];\r\n  \r\n  var dropFile = 'itemdroptable.json';\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.json', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.json',\r\n  'partstable_commoncash.json',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.json',\r\n  'partstable_guild.json',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.json',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.json',\r\n  'weapontable_commoncash.json',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.json',\r\n  'weapontable_guild.json',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.json'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.json';\r\n  var cSysShopFileName = 'combinedshoptable_system.json';\r\n  var cCashShopFileName = 'combinedshoptable_cash.json';\r\n  // var shopFileName = 'shoptable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  var transferItemsFileName = 'enchanttransferitemtable.json';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var changeFileName = 'itemchangetable.json';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.json')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.json', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.json';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.json', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.json') &&\r\n      dntData.isLoaded('sealcounttable.json');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.json', null, $timeout);\r\n    dntData.init('sealcounttable.json', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.json', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n\r\n    var noticeId = 'notice1';\r\n    var vm = this;\r\n\r\n    vm.doClose = function() {\r\n      localStorage.setItem(noticeId, true)\r\n      vm.isClosed = true;\r\n    }\r\n    \r\n    vm.isClosed = true; // localStorage.getItem(noticeId) != null;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n    controller: 'HeaderCtrl',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + encodeURIComponent(currentBuild);\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.json';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$timeout','region','jobs','translations','dntData','hCodeValues','itemCategory','$location','exportLinkHelper', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($timeout,region, jobs, translations,dntData,hCodeValues,itemCategory,$location,exportLinkHelper) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  function getLevelDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skillleveltable_character' + baseClassName.toLowerCase() + 'pve.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        var levelDntName = getLevelDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() {\r\n              $timeout();\r\n            });\r\n          }\r\n          else if(!dntData.isLoaded(levelDntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(levelDntName, null, reportProgress, function() {\r\n              $timeout();\r\n            });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(exportLinkHelper.reloadSkill(newItem));\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n\r\n            // hide when the hideIf stat exists\r\n            if('hideIf' in def && def.hideIf > 0) {\r\n              var hideStat = _.find(stats, function(s) {\r\n                return s.id == def.hideIf;\r\n              });\r\n              if(hideStat) {\r\n                return;\r\n              }\r\n            }\r\n\r\n            // hide when stat is added\r\n            var statAddTo = _.find(stats, function(s) {\r\n              var addToDef = hCodeValues.stats[s.id];\r\n              if (!addToDef) {\r\n                console.log('cannot find stat id', s.id)\r\n              } else {\r\n                return addToDef.addTo == def.id;\r\n              }\r\n            });\r\n\r\n            if(statAddTo) {\r\n              return;\r\n            }\r\n\r\n            // alter stat when addTo is set\r\n            if('addTo' in def && def.addTo > 0) {\r\n              var addStat = _.find(stats, function(s) {\r\n                return s.id == def.addTo;\r\n              });\r\n              if(addStat) {\r\n                stat = _.clone(stat);\r\n                stat.max += addStat.max;\r\n              }\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n\r\n                  // alter stat when addTo is set\r\n                  if('addTo' in def && def.addTo > 0) {\r\n                    var addStat2 = _.find(stats, function(s) {\r\n                      return s.id == def.addTo;\r\n                    });\r\n                    if(addStat2) {\r\n                      stat2 = _.clone(stat2);\r\n                      stat2.max += addStat2.max;\r\n                    }\r\n                  }\r\n\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.json';\r\n  var statCaps = 'playercommonleveltable.json';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.json';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.json';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper(items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.json';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.json', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.json', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.json', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.json'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.json'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.json', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.json', \r\n        potentialDnt: 'potentialtable_glyph95.json',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.json',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.json', \r\n        partsDnt: 'partstable_commoncash.json', \r\n        weaponDnt: 'weapontable_commoncash.json', \r\n        setDnt: 'setitemtable_cash.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.json',\r\n        petLevelDnt: 'petleveltable.json', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.json';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: [],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemFactory, hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              case 2252: // Teardrop\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n      {region: 'br', name: 'brazil', url : 'https://dnbr.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\n  function statHelper(hCodeValues) {\r\n  \r\n    return {\r\n      \r\n      getSetStats: function(groupItems) {\r\n        var stats = [];\r\n        var sets = {};\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value !== null && value.setStats != null) {\r\n            if(value.setId in sets) {\r\n              sets[value.setId].numItems++;\r\n            }\r\n            else {\r\n              sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n            }\r\n          }\r\n        });\r\n        \r\n        angular.forEach(sets, function(value, key) {\r\n          angular.forEach(value.stats, function(stat, index) {\r\n            if(stat.needSetNum <= value.numItems) {\r\n              stats.push(stat);\r\n            }\r\n          });\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getNumItemsForSet: function(items, setId) {\r\n        var numItems = 0;\r\n        angular.forEach(items, function(value, key) {\r\n          if(value && value.setId && value.setId == setId) {\r\n            numItems++;\r\n          }\r\n        });\r\n        \r\n        return numItems;\r\n      },\r\n      \r\n      getCombinedStats: function(groupItems) {\r\n        var stats = [];\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value) {\r\n            \r\n            if(value.fullStats) {\r\n              stats = stats.concat(value.fullStats);\r\n            }\r\n            else if(value.stats) {\r\n              stats = stats.concat(value.stats);\r\n            }\r\n          }\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getCalculatedStatsFromItems: function(group, items) {\r\n        var nakedStats = this.getNakedStats(group);\r\n        var combinedStats = this.getCombinedStats(items);\r\n        var setStats = this.getSetStats(items);\r\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n        if(group.heroStats != null && group.heroStats.length > 0) {\r\n          allStats = allStats.concat(group.heroStats);\r\n        }\r\n        allStats = hCodeValues.mergeStats(allStats);\r\n        \r\n        return this.getCalculatedStats(group, allStats);\r\n      },\r\n      \r\n      getCalculatedStats: function(group, combinedStats) {\r\n        \r\n        var retVal = [];\r\n        var statLookup = {};\r\n        if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n          return [];\r\n        }\r\n        \r\n        angular.forEach(combinedStats, function(stat, index) {\r\n          statLookup[stat.id] = stat;\r\n        });\r\n        \r\n        function getPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.pc]) {\r\n            return Number(statLookup[statDef.pc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function getSkillPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.skPc]) {\r\n            return Number(statLookup[statDef.skPc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function applyPc(stat) {\r\n          stat.max = Math.floor(\r\n            stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n            );\r\n        }\r\n        \r\n        function dupeStat(id) {\r\n          var stat = statLookup[id];\r\n          if(stat) {\r\n            return {id: id, max: Number(stat.max), pc: stat.pc};\r\n          }\r\n          else {\r\n            return {id: id, max: 0, pc: 0};\r\n          }\r\n        }\r\n        \r\n        function addStat(stat) {\r\n          if(stat.max > 0) {\r\n            retVal.push(stat);\r\n          }\r\n        }\r\n  \r\n        var critResist;\r\n        if(!('critResist' in group)) {\r\n          critResist = 0.20;\r\n        }\r\n        else {\r\n          critResist = group.critResist / 100.0;\r\n        }\r\n  \r\n        var eleResist;\r\n        if(!('eleResist' in group)) {\r\n          eleResist = 0;\r\n        }\r\n        else {\r\n          eleResist = group.eleResist / 100.0;\r\n        }\r\n        \r\n        // base stats\r\n        var str = dupeStat(0);\r\n        applyPc(str);\r\n        \r\n        var agi = dupeStat(1);\r\n        applyPc(agi);\r\n        \r\n        var int = dupeStat(2);\r\n        applyPc(int);\r\n  \r\n        var vit = dupeStat(3);\r\n        applyPc(vit);\r\n  \r\n        // add vit to hp\r\n        var hp = dupeStat(25);\r\n        hp.max += (vit.max * Number(group.conversions.HP));\r\n        applyPc(hp);\r\n        \r\n        // defs\r\n        var def = dupeStat(8);\r\n        def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n        applyPc(def);\r\n        \r\n        var defpc = dupeStat(1008);\r\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n        defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(defpc);\r\n        \r\n        var mdef = dupeStat(9);\r\n        mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n        applyPc(mdef);\r\n        \r\n        var mdefpc = dupeStat(1009);\r\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n        mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(mdefpc);\r\n        \r\n        // attack power - like fd but for bufs\r\n        // this shows as blue damage\r\n        // i think there are magic and phis variants of this but doesnt matter\r\n        var aPwr = dupeStat(3000);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        var maxPdmg = dupeStat(5);\r\n  \r\n        // physical damage\r\n        if(!group.damageType || (group.damageType.id != 2 && group.damageType.id != 5)) {\r\n          var extraPdmg = dupeStat(32);\r\n          var extraPdmgMod= dupeStat(101);\r\n          var paPwr = dupeStat(3001);\r\n          \r\n          // special stats for zeal\r\n          var intToPdmg = dupeStat(10164);\r\n\r\n          // special stat for ah\r\n          var strToPdmg = dupeStat(103721);\r\n          \r\n          minPdmg.max += extraPdmg.max;\r\n          minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n          minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          minPdmg.max += Math.floor(strToPdmg.max * str.max);\r\n          addStat(minPdmg);\r\n    \r\n          maxPdmg.max += extraPdmg.max;\r\n          maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n          maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          maxPdmg.max += Math.floor(strToPdmg.max * str.max);\r\n          addStat(maxPdmg);\r\n        }\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        var maxMdmg = dupeStat(7);\r\n        \r\n        // magic damage\r\n        if(!group.damageType || (group.damageType.id != 1 && group.damageType.id != 4)) {\r\n          var extraMdmg = dupeStat(33);\r\n          var extraMdmgMod = dupeStat(102);\r\n          var maPwr = dupeStat(3002);\r\n          \r\n          // special stats for zeal\r\n          var strToMdmg = dupeStat(10165);\r\n          var intToMdmg = dupeStat(10372);\r\n          \r\n          minMdmg.max += extraMdmg.max;\r\n          minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n  \r\n          minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n          minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(minMdmg);\r\n          \r\n          maxMdmg.max += extraMdmg.max;\r\n          maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n          \r\n          maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n          maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(maxMdmg);\r\n        }\r\n        \r\n        \r\n        // crit chance %\r\n        var crit = dupeStat(12);\r\n        crit.max += (agi.max*Number(group.conversions.Critical));\r\n        applyPc(crit);\r\n        \r\n        var skCrit = dupeStat(4012);\r\n        crit.max += skCrit.max;\r\n        addStat(crit);\r\n        var itemCrit = dupeStat(1012);\r\n        \r\n        var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n        retVal.push({id: 1012, max: critChance});\r\n  \r\n        // crit damage %\r\n        var cDmg = dupeStat(103);\r\n        cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n        applyPc(cDmg);\r\n        addStat(cDmg);\r\n  \r\n        var itemCtriDmg = dupeStat(1103);\r\n        var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n        addStat({id: 1103, max: critDamagePc + 2});\r\n  \r\n        // fd\r\n        var fd = dupeStat(29);\r\n        addStat(fd);\r\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n        \r\n        var fdSkill = dupeStat(10389);\r\n        var newFdPc = dupeStat(1030);\r\n        newFdPc.max += fdSkill.max + Math.min(1, (fd.max / maxFd));\r\n        addStat(newFdPc);\r\n        \r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = hCodeValues.elements[group.element.id].dmgStat;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = hCodeValues.elements[group.secondaryElement.id].dmgStat;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n\r\n        var allElementStat = dupeStat(88);\r\n        \r\n        // elements\r\n        var firePc = dupeStat(16);\r\n        firePc.max += allElementStat.max;\r\n        if(firePc.id == priElementId || firePc.id == secElementId) {\r\n          addStat(firePc);\r\n        }\r\n        \r\n        var icePc = dupeStat(17);\r\n        icePc.max += allElementStat.max;\r\n        if(icePc.id == priElementId || icePc.id == secElementId) {\r\n          addStat(icePc);\r\n        }\r\n        \r\n        var lightPc = dupeStat(18);\r\n        lightPc.max += allElementStat.max;\r\n        if(lightPc.id == priElementId || lightPc.id == secElementId) {\r\n          addStat(lightPc);\r\n        }\r\n        \r\n        var darkPc = dupeStat(19);\r\n        darkPc.max += allElementStat.max;\r\n        if(darkPc.id == priElementId || darkPc.id == secElementId) {\r\n          addStat(darkPc);\r\n        }\r\n        \r\n        // average damage\r\n        function addAvgDamageStat(id, min, max) {\r\n          \r\n          var nonEleDamage = (min+max)/2;\r\n          // add crit\r\n          nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n          // apply fd\r\n          nonEleDamage = nonEleDamage * (1 + newFdPc.max);\r\n          \r\n          // apply element(s)\r\n          var avgDmg = nonEleDamage;\r\n          if(priElementId > 0) {\r\n            var elementStat = statLookup[priElementId];\r\n            if(elementStat) {\r\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n            }\r\n          }\r\n          addStat({id: id, max: avgDmg});\r\n          \r\n          if(secElementId != priElementId) {\r\n            if(secElementId > 0) {\r\n              var secondaryElementStat = statLookup[secElementId];\r\n              if(secondaryElementStat) {\r\n                var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n                addStat({id: id + 1000, max: secAvgDmg});\r\n              }\r\n            }\r\n            else {\r\n              addStat({id: id + 1000, max: nonEleDamage});\r\n            }\r\n          }\r\n        }\r\n        \r\n        // average damages\r\n        if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0 || group.damageType.id == 4) {\r\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n        }\r\n  \r\n        if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0 || group.damageType.id == 5) {\r\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n        }\r\n        \r\n        if(!group.damageType || group.damageType.id == 3) {\r\n          addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 4) {\r\n          addStat({id: 1005, max: (minPdmg.max + maxPdmg.max)/2});\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 5) {\r\n          addStat({id: 1007, max: (minMdmg.max + maxMdmg.max)/2});\r\n        }\r\n        \r\n        // Equivalent HP\r\n        var pdefEqHp = dupeStat(2008);\r\n        pdefEqHp.max = hp.max / (1-defpc.max);\r\n        \r\n        var mdefEqHp = dupeStat(2009);\r\n        mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n        \r\n        var eqHp = dupeStat(3008);\r\n        // eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n        eqHp.max = pdefEqHp.max;\r\n        addStat(eqHp);\r\n\r\n        addStat(str);\r\n        addStat(agi);\r\n        addStat(int);\r\n        addStat(vit);\r\n        addStat(hp);\r\n        addStat(def);\r\n        addStat(mdef);\r\n        \r\n        return retVal;\r\n      },\r\n      \r\n      getNakedStats: function(group) {\r\n        \r\n        if(\r\n          group.baseStats && \r\n          group.baseStats.Strength > 0) {\r\n  \r\n          return [\r\n            {id:0, max:group.baseStats.Strength},\r\n            {id:1, max:group.baseStats.Agility},\r\n            {id:2, max:group.baseStats.Intelligence},\r\n            {id:3, max:group.baseStats.Stamina}\r\n            ];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      getSkillStats : function (item, data, skillData) {\r\n  \r\n        var skillLevelVals = null;\r\n        angular.forEach(skillData, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        if(!skillLevelVals) {\r\n          return null;\r\n        }\r\n        \r\n        var index = 1;\r\n        var effects = [];\r\n        var stillCols = true;\r\n        \r\n        while(stillCols) {\r\n          var colName = 'EffectClass' + index;\r\n          var valColName = 'EffectClassValue' + index;\r\n          if(data && colName in data && valColName in skillLevelVals) {\r\n            if(data[colName] > 0) {\r\n              var effectId = data[colName];\r\n              var val = skillLevelVals[valColName];\r\n                        \r\n              var map = hCodeValues.skillEffectMapping[effectId];\r\n              if(map && map.getVals && map.getVals(val)) {\r\n                var vals = map.getVals(val);\r\n                for (var i=0;i<vals.length;++i) {\r\n                  effects.push(vals[i]);\r\n                }\r\n              }\r\n              else if(map && map.mapTo) {\r\n                effects.push({ id: map.mapTo, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                // CAN ENABLE THIS TO DEBUG UNUSED STAT VALUES\r\n                // effects.push({ id: -effectId, effect: effectId, max: val });\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stillCols = false;\r\n          }\r\n          \r\n          index++;\r\n        }\r\n        \r\n        return effects;\r\n      },\r\n  \r\n      getBuildStats: function(build) {\r\n        var stats = {};\r\n        stats.nakedStats = this.getNakedStats(build);\r\n        stats.combinedStats = this.getCombinedStats(build.items);\r\n        stats.setStats = this.getSetStats(build.items);\r\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n        if(build.heroStats && build.heroStats.length) {\r\n          stats.heroStats = build.heroStats;\r\n          stats.allStats = stats.allStats.concat(build.heroStats);\r\n        }\r\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n        \r\n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n        return stats;\r\n      }\r\n    };\r\n  }\r\n  \r\n  })();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.json';\r\n  var bigFile = 'uistring.json';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    na: {\r\n        1000128908: 'Tier 3',\r\n        1000128979: 't4?'\r\n    },\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\n  function hCodeValues() {\r\n  \r\n    function toOneDec(stat) {\r\n      return Math.round(stat.max*10)/10;\r\n    }\r\n    function toNoDec(stat) {\r\n      return Math.floor(stat.max);\r\n    }\r\n    function inThousands(stat) {\r\n      var val = Number(stat.max);\r\n      if(val < 100) {\r\n        return val;\r\n      }\r\n      else if(val < 100000) {\r\n        return Math.round(val/100)/10 + 'k';\r\n      }\r\n      else if(val < 1000000) {\r\n        return Math.round(val/1000) + 'k';\r\n      }\r\n      else if(val < 100000000) {\r\n        return Math.round(val/10000)/100 + 'm';\r\n      }\r\n      else {\r\n        return Math.round(val/1000000) + 'm';\r\n      }\r\n    }\r\n    function toPercent(stat) {\r\n      return (Math.round(stat.max*10000)/100) + '%';\r\n    }\r\n    \r\n    return {\r\n      stats : {\r\n        0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n        1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n        2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n        3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n        4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\r\n        5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\r\n        6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\r\n        7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\r\n        8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n        9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n        10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n        11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n        12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n        13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n        14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n        15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n        16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n        21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n        22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n        23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n        25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n        26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n        29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1030, searchable: true },\r\n        \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\r\n        33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\r\n        \r\n        50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n        51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n        52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n        53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n        54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n        55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n        56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n        57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n        58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n        59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n        60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n        61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n        62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n        63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n        64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n        65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n        74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n        75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\r\n        76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n        77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n        81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n        // this is found on ladder costumes and gives all types of element\r\n        88 : {id: 88, name: 'all element%', display: toPercent, noCustom: true, def: false, dps: true },\r\n  \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n        102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n  \r\n        103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n        104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n        105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n        106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n        107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n        \r\n        // stats below here are ones I made up\r\n        1001: {id: 1001, name: 'avg dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1004: {id: 1004, name: 'avg pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1005: {id: 1005, name: 'avg pheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        1006: {id: 1006, name: 'avg mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1007: {id: 1007, name: 'mheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n        1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n        \r\n        1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12, summaryDisplay: true },\r\n        1030: {id: 1030, name: 'fd%', display: toPercent, noCustom: true, dps: true, summaryFor: 29, summaryDisplay: true },\r\n        1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103, summaryDisplay: true },\r\n        \r\n        2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        \r\n        2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n        2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n        \r\n        3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n        3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n        3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n        \r\n        3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n        4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n        4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n        4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n        4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n        4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n        4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n        \r\n        // special cases for skills\r\n        10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n        10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        103721: {id: 103721, name: 'strToPdmg', display: toPercent, noCustom: true, dps: true },\r\n\r\n        10389: {id: 10389, name: 'fd%', display: toPercent, dps: true },\r\n        // items over 10000 are unknown skill effects\r\n\r\n      },\r\n    \r\n      rankNames : {\r\n        0 : { id: 0, name : 'normal' },\r\n        1 : { id: 1, name : 'magic' },\r\n        2 : { id: 2, name : 'rare' },\r\n        3 : { id: 3, name : 'epic' },\r\n        4 : { id: 4, name : 'unique' },\r\n        5 : { id: 5, name : 'legend' },\r\n        6 : { id: 6, name : 'divine' },\r\n        7 : { id: 7, name : 'ancient' },\r\n      },\r\n      \r\n      shopNames : {\r\n        28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n        29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n        5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n        5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n        59001: 'garden bunny',\r\n        52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n        89001: 'guild master',\r\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n        66001: 'erosion',\r\n        35006: 'plate',\r\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n        91001: 'wrath',\r\n        45001: 'farm',\r\n        100004: 'event',\r\n        89000: 'nightmare'\r\n      },\r\n      \r\n      checkedRank : {\r\n        0 : true,\r\n        1 : true,\r\n        2 : true,\r\n        3 : true,\r\n        4 : true,\r\n        5 : true,\r\n        6 : true,\r\n        7 : true,\r\n      },\r\n      \r\n      typeNames : {\r\n        0 : 'weapons',\r\n        1 : 'equipment',\r\n        5 : 'plates',\r\n        8 : 'pouch',\r\n        38 : 'plates',\r\n        90 : 'welspring',\r\n        132 : 'talisman',\r\n        139 : 'gems',\r\n      },\r\n      \r\n      elements : {\r\n        0 : { id: 0, name: 'non-ele' },\r\n        1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n        2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n        3 : { id: 3, name: 'light', dmgStat: 18 },\r\n        4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n      },\r\n      \r\n      damageTypes : {\r\n        0 : { id: 0, name: 'both separate' },\r\n        1 : { id: 1, name: 'physical' },\r\n        2 : { id: 2, name: 'magical' },\r\n        3 : { id: 3, name: 'both combined' },\r\n        4 : { id: 4, name: 'physical healing' },\r\n        5 : { id: 5, name: 'magical healing' },\r\n      },\r\n      \r\n      // note: skills shown on-screen have 1k added to their id\r\n      skillEffectMapping : {\r\n        2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n        13 : { id: 13, name: 'mp', mapTo: 26 },\r\n        25 : { id: 25, name: 'action speed' },\r\n        29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n        32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n        33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n        34 : { id: 34, name: 'light %', mapTo: 18 },\r\n        35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n        36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n        37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n        38 : { id: 38, name: 'light def', mapTo: 22 },\r\n        39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n        58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n        59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n        65 : { id: 65, name: 'range' },\r\n        76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n        87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n        88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n        89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n        90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n        // 134 : { id: 134, name: 'p dmg reduction%' },\r\n        // 135 : { id: 135, name: 'm dmg reduction%' },\r\n        185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n        251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n        164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n        165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n        222: {\r\n          id: 222, \r\n          name: 'hellfire', \r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              return [\r\n                {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n                {id: 4012, effect: 222, max: Number(vals[1])},\r\n                ];\r\n            }\r\n            else {\r\n              return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n            }\r\n          }\r\n        },\r\n        372: {\r\n          id: 372,\r\n          name: 'statConversion',\r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n              } else if(vals.length == 3 && vals[0] == 0 && vals[2] == 5) {\r\n                return [{ id: 103721, name: 'strToPdmg', max: Number(vals[1]) }];\r\n              }\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n        389: {\r\n          id: 389,\r\n          name: 'fd buff or sader cm1',\r\n          getVals: function(val) {\r\n            if(val && val.indexOf && val.indexOf(';') > 0) {\r\n              return [];\r\n            }\r\n            else {\r\n              return [{ id: 10389, name: 'fd buf', max: Number(val) }];\r\n            }\r\n          }\r\n        },\r\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n      },\r\n      \r\n      gemExchanges: [\r\n        {id: 2, exchange: 1, name: 'Weapon'},\r\n        {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n        {id: 4, exchange: 3, name: 'Headgear'},\r\n        {id: 5, exchange: 4, name: 'Body Armor'},\r\n        {id: 6, exchange: 5, name: 'Leg Armor'},\r\n        {id: 7, exchange: 6, name: 'Gloves'},\r\n        {id: 8, exchange: 7, name: 'Shoes'},\r\n        {id: 101, exchange: 8, name: 'Necklace'},\r\n        {id: 102, exchange: 9, name: 'Earrings'},\r\n        {id: 103, exchange: 10, name: 'Ring'},\r\n      ],\r\n      \r\n      customItems: \r\n      [\r\n      {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n      ],\r\n    \r\n      getStats : function(data) {\r\n  \r\n        var useMax=false;\r\n        var useStateXVal=false;\r\n        var mightHaveSets=true;\r\n        var prop = 'State1_Max';\r\n        if(prop in data) {\r\n          useMax = true;\r\n        }\r\n        else {\r\n          prop = 'State1Value';\r\n          if(prop in data) {\r\n            useStateXVal = true;\r\n          }\r\n        }\r\n        \r\n        var currentState = 0;\r\n        var statVals = [];\r\n        for(;;) {\r\n          currentState++;\r\n          \r\n          var stateProp = 'State' + currentState;\r\n          if(!(stateProp in data)) {\r\n            break;\r\n          }\r\n  \r\n          var stateId = data[stateProp];\r\n          if(stateId == -1) {\r\n            break;\r\n          }\r\n          \r\n          if(stateId == 107) {\r\n            // is this mp?\r\n          }\r\n          else {\r\n            \r\n            var currentData = { id: stateId };\r\n            \r\n            var prop;\r\n          \r\n            if(useMax) {\r\n              prop = 'State' + currentState + '_Max';\r\n              currentData.max = data[prop];\r\n            }\r\n            else if(useStateXVal) {\r\n              prop = 'State' + currentState + 'Value';\r\n              currentData.max = data[prop];\r\n            }\r\n            else {\r\n              prop = 'StateValue' + currentState;\r\n              currentData.max = Number(data[prop]);\r\n            }\r\n            \r\n            if(currentData.max > 0 || currentData.max < 0) {\r\n              if(mightHaveSets) {\r\n                prop = 'NeedSetNum' + currentState;\r\n                if(prop in data) {\r\n                  if(data[prop] == 0) {\r\n                    break;\r\n                  }\r\n                  currentData.needSetNum = data[prop];\r\n                }\r\n                else {\r\n                  mightHaveSets = false;\r\n                }\r\n              }\r\n            \r\n              statVals.push(currentData);\r\n            }\r\n          }\r\n        }\r\n        \r\n        return statVals;\r\n      },\r\n      \r\n      setupStat : function(stat, id) {\r\n        stat.id = Number(id);\r\n      },\r\n      \r\n      mergeStats : function(stats1, stats2) {\r\n        var statMap = {};\r\n        \r\n        var self = this;\r\n        function add(value) {\r\n          \r\n          var amount = Number(value.max);\r\n          if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n            amount = Math.floor(amount);\r\n          }\r\n          \r\n          if(value.id in statMap) {\r\n            statMap[value.id] += amount;\r\n          }\r\n          else {\r\n            statMap[value.id] = amount;\r\n          }\r\n        }\r\n        \r\n        angular.forEach(stats1, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n        \r\n        if(stats2) {\r\n          angular.forEach(stats2, function(value, key) {\r\n            if(value) {\r\n              add(value);\r\n            }\r\n          });\r\n        }\r\n        \r\n        var newStats = [];\r\n        \r\n        for(var key in statMap) {\r\n          var stat = { max : statMap[key], id: Number(key) };\r\n          newStats.push(stat);\r\n        }\r\n          \r\n        return newStats;\r\n      }\r\n    }\r\n  }\r\n  \r\n  })();"]}